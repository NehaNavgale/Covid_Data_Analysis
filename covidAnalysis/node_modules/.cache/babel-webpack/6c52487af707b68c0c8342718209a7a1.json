{"ast":null,"code":"import _get from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createForOfIteratorHelper from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license ng2-completer\n * MIT license\n */\nimport { EventEmitter, Injectable, Output, Directive, HostListener, Host, ElementRef, NgZone, Input, TemplateRef, ViewContainerRef, ChangeDetectorRef, Renderer2, Component, forwardRef, ViewChild, NgModule } from '@angular/core';\nimport { Subject, Observable, timer } from 'rxjs';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModel, NG_VALUE_ACCESSOR, FormControl, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/common';\n\nfunction CompleterListItemCmp_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var part_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", part_r1.isMatch ? ctx_r0.matchClass : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1.text);\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    \"completer-title\": a0,\n    \"completer-description\": a1\n  };\n};\n\nvar _c1 = [\"ctrInput\"];\n\nfunction CompleterCmp_div_3_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._textSearching);\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8._textNoResults);\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 21);\n  }\n\n  if (rf & 2) {\n    var item_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", item_r10.image, ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 22);\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template, 1, 1, \"img\", 19);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template, 1, 0, \"div\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image != \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image === \"\");\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"completer-list-item\", 23);\n  }\n\n  if (rf & 2) {\n    var item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.description)(\"matchClass\", ctx_r13.matchClass)(\"searchStr\", ctx_r13.searchStr)(\"type\", \"description\");\n  }\n}\n\nvar _c2 = function _c2(a0) {\n  return {\n    \"completer-item-text-image\": a0\n  };\n};\n\nfunction CompleterCmp_div_3_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_Template, 3, 2, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 15);\n    ɵngcc0.ɵɵelement(4, \"completer-list-item\", 16);\n    ɵngcc0.ɵɵtemplate(5, CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template, 1, 4, \"completer-list-item\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r10 = ctx.$implicit;\n    var rowIndex_r11 = ctx.index;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ctrRow\", rowIndex_r11)(\"dataItem\", item_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image || item_r10.image === \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c2, item_r10.image || item_r10.image === \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.title)(\"matchClass\", ctx_r9.matchClass)(\"searchStr\", ctx_r9.searchStr)(\"type\", \"title\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.description && item_r10.description != \"\");\n  }\n}\n\nfunction CompleterCmp_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_1_Template, 2, 1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_2_Template, 2, 1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_div_1_div_3_Template, 6, 11, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    var searchActive_r3 = ctx_r19.searching;\n    var items_r2 = ctx_r19.results;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", searchActive_r3 && ctx_r6.displaySearching);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !searchActive_r3 && (!items_r2 || (items_r2 == null ? null : items_r2.length) === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", items_r2);\n  }\n}\n\nfunction CompleterCmp_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_Template, 4, 3, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var items_r2 = ctx.results;\n    var searchActive_r3 = ctx.searching;\n    var isInitialized_r4 = ctx.searchInitialized;\n    var isOpen_r5 = ctx.isOpen;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", isInitialized_r4 && isOpen_r5 && ((items_r2 == null ? null : items_r2.length) > 0 || ctx_r1.displayNoResults && !searchActive_r3 || searchActive_r3 && ctx_r1.displaySearching));\n  }\n}\n\nvar MAX_CHARS = 524288; // the default max length per the html maxlength attribute\n\nvar MIN_SEARCH_LENGTH = 3;\nvar PAUSE = 10;\nvar TEXT_SEARCHING = \"Searching...\";\nvar TEXT_NO_RESULTS = \"No results found\";\nvar CLEAR_TIMEOUT = 50;\n\nfunction isNil(value) {\n  return typeof value === \"undefined\" || value === null;\n}\n\nvar CompleterBaseData = /*#__PURE__*/function (_Subject) {\n  _inherits(CompleterBaseData, _Subject);\n\n  var _super = _createSuper(CompleterBaseData);\n\n  function CompleterBaseData() {\n    var _this;\n\n    _classCallCheck(this, CompleterBaseData);\n\n    _this = _super.call(this);\n    _this._searchFields = null;\n    _this._titleField = null;\n    _this._descriptionField = undefined;\n    _this._imageField = undefined;\n    return _this;\n  }\n\n  _createClass(CompleterBaseData, [{\n    key: \"cancel\",\n    value: function cancel() {\n      return;\n    }\n  }, {\n    key: \"searchFields\",\n    value: function searchFields(_searchFields) {\n      this._searchFields = _searchFields;\n      return this;\n    }\n  }, {\n    key: \"titleField\",\n    value: function titleField(_titleField) {\n      this._titleField = _titleField;\n      return this;\n    }\n  }, {\n    key: \"descriptionField\",\n    value: function descriptionField(_descriptionField) {\n      this._descriptionField = _descriptionField;\n      return this;\n    }\n  }, {\n    key: \"imageField\",\n    value: function imageField(_imageField) {\n      this._imageField = _imageField;\n      return this;\n    }\n  }, {\n    key: \"convertToItem\",\n    value: function convertToItem(data) {\n      var image = null;\n      var formattedText;\n      var formattedDesc = null;\n\n      if (this._titleField) {\n        formattedText = this.extractTitle(data);\n      } else {\n        formattedText = data;\n      }\n\n      if (typeof formattedText !== \"string\") {\n        formattedText = JSON.stringify(formattedText);\n      }\n\n      if (this._descriptionField) {\n        formattedDesc = this.extractValue(data, this._descriptionField);\n      }\n\n      if (this._imageField) {\n        image = this.extractValue(data, this._imageField);\n      }\n\n      if (isNil(formattedText)) {\n        return null;\n      }\n\n      return {\n        description: formattedDesc,\n        image: image,\n        originalObject: data,\n        title: formattedText\n      };\n    }\n  }, {\n    key: \"extractMatches\",\n    value: function extractMatches(data, term) {\n      var _this2 = this;\n\n      var matches = [];\n      var searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n\n      if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n        matches = data.filter(function (item) {\n          var values = searchFields ? _this2.extractBySearchFields(searchFields, item) : [item];\n          return values.some(function (value) {\n            return value.toString().toLowerCase().indexOf(term.toString().toLowerCase()) >= 0;\n          });\n        });\n      } else {\n        matches = data;\n      }\n\n      return matches;\n    }\n  }, {\n    key: \"extractTitle\",\n    value: function extractTitle(item) {\n      var _this3 = this;\n\n      // split title fields and run extractValue for each and join with ' '\n      if (!this._titleField) {\n        return \"\";\n      }\n\n      return this._titleField.split(\",\").map(function (field) {\n        return _this3.extractValue(item, field);\n      }).reduce(function (acc, titlePart) {\n        return acc ? \"\".concat(acc, \" \").concat(titlePart) : titlePart;\n      });\n    }\n  }, {\n    key: \"extractValue\",\n    value: function extractValue(obj, key) {\n      var keys;\n      var result;\n\n      if (key) {\n        keys = key.split(\".\");\n        result = obj;\n\n        var _iterator = _createForOfIteratorHelper(keys),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            key = _step.value;\n\n            if (result) {\n              result = result[key];\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        result = obj;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"processResults\",\n    value: function processResults(matches) {\n      var i;\n      var results = [];\n\n      if (matches && matches.length > 0) {\n        for (i = 0; i < matches.length; i++) {\n          var item = this.convertToItem(matches[i]);\n\n          if (item) {\n            results.push(item);\n          }\n        }\n      }\n\n      return results;\n    }\n  }, {\n    key: \"extractBySearchFields\",\n    value: function extractBySearchFields(searchFields, item) {\n      var _this4 = this;\n\n      return searchFields.map(function (searchField) {\n        return _this4.extractValue(item, searchField);\n      }).filter(function (value) {\n        return !!value;\n      });\n    }\n  }]);\n\n  return CompleterBaseData;\n}(Subject);\n\nvar LocalData = /*#__PURE__*/function (_CompleterBaseData) {\n  _inherits(LocalData, _CompleterBaseData);\n\n  var _super2 = _createSuper(LocalData);\n\n  function LocalData() {\n    var _this5;\n\n    _classCallCheck(this, LocalData);\n\n    _this5 = _super2.call(this);\n    _this5.dataSourceChange = new EventEmitter();\n    _this5._data = [];\n    _this5.savedTerm = null;\n    return _this5;\n  }\n\n  _createClass(LocalData, [{\n    key: \"data\",\n    value: function data(_data) {\n      var _this6 = this;\n\n      if (_data instanceof Observable) {\n        var data$ = _data;\n        data$.pipe(catchError(function () {\n          return [];\n        })).subscribe(function (res) {\n          _this6._data = res;\n\n          if (_this6.savedTerm) {\n            _this6.search(_this6.savedTerm);\n          }\n\n          _this6.dataSourceChange.emit();\n        });\n      } else {\n        this._data = _data;\n      }\n\n      this.dataSourceChange.emit();\n      return this;\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      if (!this._data) {\n        this.savedTerm = term;\n      } else {\n        this.savedTerm = null;\n        var matches = this.extractMatches(this._data, term);\n        this.next(this.processResults(matches));\n      }\n    }\n  }, {\n    key: \"convertToItem\",\n    value: function convertToItem(data) {\n      return _get(_getPrototypeOf(LocalData.prototype), \"convertToItem\", this).call(this, data);\n    }\n  }]);\n\n  return LocalData;\n}(CompleterBaseData);\n\nvar RemoteData = /*#__PURE__*/function (_CompleterBaseData2) {\n  _inherits(RemoteData, _CompleterBaseData2);\n\n  var _super3 = _createSuper(RemoteData);\n\n  function RemoteData(http) {\n    var _this7;\n\n    _classCallCheck(this, RemoteData);\n\n    _this7 = _super3.call(this);\n    _this7.http = http;\n    _this7.dataSourceChange = new EventEmitter();\n    _this7._remoteUrl = null;\n    _this7.remoteSearch = null;\n    _this7._urlFormater = null;\n    _this7._dataField = null;\n    return _this7;\n  }\n\n  _createClass(RemoteData, [{\n    key: \"remoteUrl\",\n    value: function remoteUrl(_remoteUrl) {\n      this._remoteUrl = _remoteUrl;\n      this.dataSourceChange.emit();\n      return this;\n    }\n  }, {\n    key: \"urlFormater\",\n    value: function urlFormater(_urlFormater) {\n      this._urlFormater = _urlFormater;\n    }\n  }, {\n    key: \"dataField\",\n    value: function dataField(_dataField) {\n      this._dataField = _dataField;\n    }\n  }, {\n    key: \"requestOptions\",\n    value: function requestOptions(_requestOptions) {\n      this._requestOptions = _requestOptions;\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      var _this8 = this;\n\n      this.cancel(); // let params = {};\n\n      var url = \"\";\n\n      if (this._urlFormater) {\n        url = this._urlFormater(term);\n      } else {\n        url = this._remoteUrl + encodeURIComponent(term);\n      }\n\n      this.remoteSearch = this.http.get(url, Object.assign({}, this._requestOptions)).pipe(map(function (data) {\n        var matches = _this8.extractValue(data, _this8._dataField);\n\n        return _this8.extractMatches(matches, term);\n      }), catchError(function () {\n        return [];\n      })).subscribe(function (matches) {\n        var results = _this8.processResults(matches);\n\n        _this8.next(results);\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.remoteSearch) {\n        this.remoteSearch.unsubscribe();\n      }\n    }\n  }, {\n    key: \"convertToItem\",\n    value: function convertToItem(data) {\n      return _get(_getPrototypeOf(RemoteData.prototype), \"convertToItem\", this).call(this, data);\n    }\n  }]);\n\n  return RemoteData;\n}(CompleterBaseData);\n\nvar LocalDataFactory = /*#__PURE__*/function () {\n  function LocalDataFactory() {\n    _classCallCheck(this, LocalDataFactory);\n  }\n\n  _createClass(LocalDataFactory, [{\n    key: \"create\",\n    value: function create() {\n      return new LocalData();\n    }\n  }]);\n\n  return LocalDataFactory;\n}();\n\nLocalDataFactory.ɵfac = function LocalDataFactory_Factory(t) {\n  return new (t || LocalDataFactory)();\n};\n\nLocalDataFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: LocalDataFactory,\n  factory: function factory(t) {\n    return LocalDataFactory.ɵfac(t);\n  }\n});\n\nvar RemoteDataFactory = /*#__PURE__*/function () {\n  function RemoteDataFactory(http) {\n    _classCallCheck(this, RemoteDataFactory);\n\n    this.http = http;\n  }\n\n  _createClass(RemoteDataFactory, [{\n    key: \"create\",\n    value: function create() {\n      return new RemoteData(this.http);\n    }\n  }]);\n\n  return RemoteDataFactory;\n}();\n\nRemoteDataFactory.ɵfac = function RemoteDataFactory_Factory(t) {\n  return new (t || RemoteDataFactory)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient));\n};\n\nRemoteDataFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: RemoteDataFactory,\n  factory: function factory(t) {\n    return RemoteDataFactory.ɵfac(t);\n  }\n});\nRemoteDataFactory = __decorate([__metadata(\"design:paramtypes\", [HttpClient])], RemoteDataFactory);\n\nvar CompleterService = /*#__PURE__*/function () {\n  function CompleterService(localDataFactory, // Using any instead of () => LocalData because of AoT errors\n  remoteDataFactory // Using any instead of () => LocalData because of AoT errors\n  ) {\n    _classCallCheck(this, CompleterService);\n\n    this.localDataFactory = localDataFactory;\n    this.remoteDataFactory = remoteDataFactory;\n  }\n\n  _createClass(CompleterService, [{\n    key: \"local\",\n    value: function local(data) {\n      var searchFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var titleField = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      var localData = this.localDataFactory.create();\n      return localData.data(data).searchFields(searchFields).titleField(titleField);\n    }\n  }, {\n    key: \"remote\",\n    value: function remote(url) {\n      var searchFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var titleField = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      var remoteData = this.remoteDataFactory.create();\n      return remoteData.remoteUrl(url).searchFields(searchFields).titleField(titleField);\n    }\n  }]);\n\n  return CompleterService;\n}();\n\nCompleterService.ɵfac = function CompleterService_Factory(t) {\n  return new (t || CompleterService)(ɵngcc0.ɵɵinject(LocalDataFactory), ɵngcc0.ɵɵinject(RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n  ));\n};\n\nCompleterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CompleterService,\n  factory: function factory(t) {\n    return CompleterService.ɵfac(t);\n  }\n});\nCompleterService = __decorate([__metadata(\"design:paramtypes\", [LocalDataFactory, RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n])], CompleterService);\n\nvar CtrCompleter = /*#__PURE__*/function () {\n  function CtrCompleter() {\n    _classCallCheck(this, CtrCompleter);\n\n    this.selected = new EventEmitter();\n    this.highlighted = new EventEmitter();\n    this.opened = new EventEmitter();\n    this.dataSourceChange = new EventEmitter();\n    this.list = null;\n    this.dropdown = null;\n    this._hasHighlighted = false;\n    this._hasSelected = false;\n    this._cancelBlur = false;\n    this._isOpen = false;\n    this._autoHighlightIndex = null;\n  }\n\n  _createClass(CtrCompleter, [{\n    key: \"registerList\",\n    value: function registerList(list) {\n      this.list = list;\n    }\n  }, {\n    key: \"registerDropdown\",\n    value: function registerDropdown(dropdown) {\n      this.dropdown = dropdown;\n    }\n  }, {\n    key: \"onHighlighted\",\n    value: function onHighlighted(item) {\n      this.highlighted.emit(item);\n      this._hasHighlighted = !!item;\n    }\n  }, {\n    key: \"onSelected\",\n    value: function onSelected(item) {\n      var clearList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.selected.emit(item);\n\n      if (item) {\n        this._hasSelected = true;\n      }\n\n      if (clearList) {\n        this.clear();\n      }\n    }\n  }, {\n    key: \"onDataSourceChange\",\n    value: function onDataSourceChange() {\n      if (this.hasSelected) {\n        this.selected.emit(null);\n        this._hasSelected = false;\n      }\n\n      this.dataSourceChange.emit();\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      if (this._hasSelected) {\n        this.selected.emit(null);\n        this._hasSelected = false;\n      }\n\n      if (this.list) {\n        this.list.search(term);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._hasHighlighted = false;\n      this.isOpen = false;\n\n      if (this.dropdown) {\n        this.dropdown.clear();\n      }\n\n      if (this.list) {\n        this.list.clear();\n      }\n    }\n  }, {\n    key: \"selectCurrent\",\n    value: function selectCurrent() {\n      if (this.dropdown) {\n        this.dropdown.selectCurrent();\n      }\n    }\n  }, {\n    key: \"nextRow\",\n    value: function nextRow() {\n      if (this.dropdown) {\n        this.dropdown.nextRow();\n      }\n    }\n  }, {\n    key: \"prevRow\",\n    value: function prevRow() {\n      if (this.dropdown) {\n        this.dropdown.prevRow();\n      }\n    }\n  }, {\n    key: \"hasHighlighted\",\n    value: function hasHighlighted() {\n      return this._hasHighlighted;\n    }\n  }, {\n    key: \"cancelBlur\",\n    value: function cancelBlur(cancel) {\n      this._cancelBlur = cancel;\n    }\n  }, {\n    key: \"isCancelBlur\",\n    value: function isCancelBlur() {\n      return this._cancelBlur;\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this._isOpen && !!this.list) {\n        this.isOpen = true;\n        this.list.open();\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this._isOpen;\n    },\n    set: function set(open) {\n      this._isOpen = open;\n      this.opened.emit(this._isOpen);\n\n      if (this.list) {\n        this.list.isOpen(open);\n      }\n    }\n  }, {\n    key: \"autoHighlightIndex\",\n    get: function get() {\n      return this._autoHighlightIndex;\n    },\n    set: function set(index) {\n      this._autoHighlightIndex = index;\n\n      if (this.dropdown) {\n        this.dropdown.highlightRow(this._autoHighlightIndex);\n      }\n    }\n  }, {\n    key: \"hasSelected\",\n    get: function get() {\n      return this._hasSelected;\n    }\n  }]);\n\n  return CtrCompleter;\n}();\n\nCtrCompleter.ɵfac = function CtrCompleter_Factory(t) {\n  return new (t || CtrCompleter)();\n};\n\nCtrCompleter.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CtrCompleter,\n  selectors: [[\"\", \"ctrCompleter\", \"\"]],\n  outputs: {\n    selected: \"selected\",\n    highlighted: \"highlighted\",\n    opened: \"opened\",\n    dataSourceChange: \"dataSourceChange\"\n  }\n});\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CtrCompleter.prototype, \"selected\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CtrCompleter.prototype, \"highlighted\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CtrCompleter.prototype, \"opened\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CtrCompleter.prototype, \"dataSourceChange\", void 0);\n\nvar CtrRowItem = function CtrRowItem(row, index) {\n  _classCallCheck(this, CtrRowItem);\n\n  this.row = row;\n  this.index = index;\n};\n\nvar CtrDropdown = /*#__PURE__*/function () {\n  function CtrDropdown(completer, el, zone) {\n    _classCallCheck(this, CtrDropdown);\n\n    this.completer = completer;\n    this.el = el;\n    this.zone = zone;\n    this.rows = [];\n    this.isScrollOn = false;\n    this._rowMouseDown = false;\n    this.completer.registerDropdown(this);\n  }\n\n  _createClass(CtrDropdown, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.completer.registerDropdown(null);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this9 = this;\n\n      var css = getComputedStyle(this.el.nativeElement);\n      var autoHighlightIndex = this.completer.autoHighlightIndex;\n      this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n\n      if (autoHighlightIndex) {\n        this.zone.run(function () {\n          _this9.highlightRow(autoHighlightIndex);\n        });\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      var _this10 = this;\n\n      // Support for canceling blur on IE (issue #158)\n      if (!this._rowMouseDown) {\n        this.completer.cancelBlur(true);\n        this.zone.run(function () {\n          _this10.completer.cancelBlur(false);\n        });\n      } else {\n        this._rowMouseDown = false;\n      }\n    }\n  }, {\n    key: \"registerRow\",\n    value: function registerRow(row) {\n      var arrIndex = this.rows.findIndex(function (_row) {\n        return _row.index === row.index;\n      });\n\n      if (arrIndex >= 0) {\n        this.rows[arrIndex] = row;\n      } else {\n        this.rows.push(row);\n      }\n    }\n  }, {\n    key: \"unregisterRow\",\n    value: function unregisterRow(rowIndex) {\n      var arrIndex = this.rows.findIndex(function (_row) {\n        return _row.index === rowIndex;\n      });\n      this.rows.splice(arrIndex, 1);\n\n      if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n        this.highlightRow(null);\n      }\n    }\n  }, {\n    key: \"highlightRow\",\n    value: function highlightRow(index) {\n      var highlighted = this.rows.find(function (row) {\n        return row.index === index;\n      });\n\n      if (isNil(index) || index < 0) {\n        if (this.currHighlighted) {\n          this.currHighlighted.row.setHighlighted(false);\n        }\n\n        this.currHighlighted = undefined;\n        this.completer.onHighlighted(null);\n        return;\n      }\n\n      if (!highlighted) {\n        return;\n      }\n\n      if (this.currHighlighted) {\n        this.currHighlighted.row.setHighlighted(false);\n      }\n\n      this.currHighlighted = highlighted;\n      this.currHighlighted.row.setHighlighted(true);\n      this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n\n      if (this.isScrollOn && this.currHighlighted) {\n        var rowTop = this.dropdownRowTop();\n\n        if (!rowTop) {\n          return;\n        }\n\n        if (rowTop < 0) {\n          this.dropdownScrollTopTo(rowTop - 1);\n        } else {\n          var row = this.currHighlighted.row.getNativeElement();\n\n          if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n            this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n\n            if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n              this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10)));\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.rows = [];\n    }\n  }, {\n    key: \"onSelected\",\n    value: function onSelected(item) {\n      this.completer.onSelected(item);\n    }\n  }, {\n    key: \"rowMouseDown\",\n    value: function rowMouseDown() {\n      this._rowMouseDown = true;\n    }\n  }, {\n    key: \"selectCurrent\",\n    value: function selectCurrent() {\n      if (!!this.currHighlighted && !!this.currHighlighted.row) {\n        this.onSelected(this.currHighlighted.row.getDataItem());\n      } else if (this.rows.length > 0) {\n        this.onSelected(this.rows[0].row.getDataItem());\n      }\n    }\n  }, {\n    key: \"nextRow\",\n    value: function nextRow() {\n      var nextRowIndex = 0;\n\n      if (this.currHighlighted) {\n        nextRowIndex = this.currHighlighted.index + 1;\n      }\n\n      this.highlightRow(nextRowIndex);\n    }\n  }, {\n    key: \"prevRow\",\n    value: function prevRow() {\n      var nextRowIndex = -1;\n\n      if (this.currHighlighted) {\n        nextRowIndex = this.currHighlighted.index - 1;\n      }\n\n      this.highlightRow(nextRowIndex);\n    }\n  }, {\n    key: \"dropdownScrollTopTo\",\n    value: function dropdownScrollTopTo(offset) {\n      this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n    }\n  }, {\n    key: \"dropdownRowTop\",\n    value: function dropdownRowTop() {\n      if (!this.currHighlighted) {\n        return;\n      }\n\n      return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10));\n    }\n  }, {\n    key: \"dropdownHeight\",\n    value: function dropdownHeight() {\n      return this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).maxHeight, 10);\n    }\n  }, {\n    key: \"dropdownRowOffsetHeight\",\n    value: function dropdownRowOffsetHeight(row) {\n      var css = getComputedStyle(row.parentElement);\n      return row.parentElement.offsetHeight + parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n    }\n  }]);\n\n  return CtrDropdown;\n}();\n\nCtrDropdown.ɵfac = function CtrDropdown_Factory(t) {\n  return new (t || CtrDropdown)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nCtrDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CtrDropdown,\n  selectors: [[\"\", \"ctrDropdown\", \"\"]],\n  hostBindings: function CtrDropdown_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function CtrDropdown_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n  }\n});\n\n__decorate([HostListener(\"mousedown\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrDropdown.prototype, \"onMouseDown\", null);\n\nCtrDropdown = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [CtrCompleter, ElementRef, NgZone])], CtrDropdown); // keyboard events\n\nvar KEY_DW = 40;\nvar KEY_RT = 39;\nvar KEY_UP = 38;\nvar KEY_LF = 37;\nvar KEY_ES = 27;\nvar KEY_EN = 13;\nvar KEY_TAB = 9;\nvar KEY_BK = 8;\nvar KEY_SH = 16;\nvar KEY_CL = 20;\nvar KEY_F1 = 112;\nvar KEY_F12 = 123;\n\nvar CtrInput = /*#__PURE__*/function () {\n  function CtrInput(completer, ngModel, el) {\n    var _this11 = this;\n\n    _classCallCheck(this, CtrInput);\n\n    this.completer = completer;\n    this.ngModel = ngModel;\n    this.el = el;\n    this.clearSelected = false;\n    this.clearUnselected = false;\n    this.overrideSuggested = false;\n    this.fillHighlighted = true;\n    this.openOnFocus = false;\n    this.openOnClick = false;\n    this.selectOnClick = false;\n    this.selectOnFocus = false;\n    this.ngModelChange = new EventEmitter();\n    this._searchStr = \"\";\n    this._displayStr = \"\";\n    this.blurTimer = null;\n    this.completer.selected.subscribe(function (item) {\n      if (!item) {\n        return;\n      }\n\n      if (_this11.clearSelected) {\n        _this11.searchStr = \"\";\n      } else {\n        _this11.searchStr = item.title;\n      }\n\n      _this11.ngModelChange.emit(_this11.searchStr);\n    });\n    this.completer.highlighted.subscribe(function (item) {\n      if (_this11.fillHighlighted) {\n        if (item) {\n          _this11._displayStr = item.title;\n\n          _this11.ngModelChange.emit(item.title);\n        } else {\n          _this11._displayStr = _this11.searchStr;\n\n          _this11.ngModelChange.emit(_this11.searchStr);\n        }\n      }\n    });\n    this.completer.dataSourceChange.subscribe(function () {\n      _this11.completer.search(_this11.searchStr);\n    });\n\n    if (this.ngModel.valueChanges) {\n      this.ngModel.valueChanges.subscribe(function (value) {\n        if (!isNil(value) && _this11._displayStr !== value) {\n          if (_this11.searchStr !== value) {\n            _this11.completer.search(value);\n          }\n\n          _this11.searchStr = value;\n        }\n      });\n    }\n  }\n\n  _createClass(CtrInput, [{\n    key: \"keyupHandler\",\n    value: function keyupHandler(event) {\n      if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n        // do nothing\n        return;\n      }\n\n      if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n        event.preventDefault();\n      } else if (event.keyCode === KEY_DW) {\n        event.preventDefault();\n        this.completer.search(this.searchStr);\n      } else if (event.keyCode === KEY_ES) {\n        if (this.completer.isOpen) {\n          this.restoreSearchValue();\n          this.completer.clear();\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"pasteHandler\",\n    value: function pasteHandler(event) {\n      this.completer.open();\n    }\n  }, {\n    key: \"keydownHandler\",\n    value: function keydownHandler(event) {\n      var keyCode = event.keyCode || event.which;\n\n      if (keyCode === KEY_EN) {\n        if (this.completer.hasHighlighted()) {\n          event.preventDefault();\n        }\n\n        this.handleSelection();\n      } else if (keyCode === KEY_DW) {\n        event.preventDefault();\n        this.completer.open();\n        this.completer.nextRow();\n      } else if (keyCode === KEY_UP) {\n        event.preventDefault();\n        this.completer.prevRow();\n      } else if (keyCode === KEY_TAB) {\n        this.handleSelection();\n      } else if (keyCode === KEY_BK) {\n        this.completer.open();\n      } else if (keyCode === KEY_ES) {\n        // This is very specific to IE10/11 #272\n        // without this, IE clears the input text\n        event.preventDefault();\n\n        if (this.completer.isOpen) {\n          event.stopPropagation();\n        }\n      } else {\n        if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL && (keyCode <= KEY_F1 || keyCode >= KEY_F12) && !event.ctrlKey && !event.metaKey && !event.altKey) {\n          this.completer.open();\n        }\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var _this12 = this;\n\n      // Check if we need to cancel Blur for IE\n      if (this.completer.isCancelBlur()) {\n        setTimeout(function () {\n          // get the focus back\n          _this12.el.nativeElement.focus();\n        }, 0);\n        return;\n      }\n\n      if (this.completer.isOpen) {\n        this.blurTimer = timer(200).pipe(take(1)).subscribe(function () {\n          return _this12.doBlur();\n        });\n      }\n    }\n  }, {\n    key: \"onfocus\",\n    value: function onfocus() {\n      if (this.blurTimer) {\n        this.blurTimer.unsubscribe();\n        this.blurTimer = null;\n      }\n\n      if (this.selectOnFocus) {\n        this.el.nativeElement.select();\n      }\n\n      if (this.openOnFocus) {\n        this.completer.open();\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.selectOnClick) {\n        this.el.nativeElement.select();\n      }\n\n      if (this.openOnClick) {\n        if (this.completer.isOpen) {\n          this.completer.clear();\n        } else {\n          this.completer.open();\n        }\n      }\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection() {\n      if (this.completer.hasHighlighted()) {\n        this._searchStr = \"\";\n        this.completer.selectCurrent();\n      } else if (this.overrideSuggested) {\n        this.completer.onSelected({\n          title: this.searchStr,\n          originalObject: null\n        });\n      } else {\n        if (this.clearUnselected && !this.completer.hasSelected) {\n          this.searchStr = \"\";\n          this.ngModelChange.emit(this.searchStr);\n        }\n\n        this.completer.clear();\n      }\n    }\n  }, {\n    key: \"restoreSearchValue\",\n    value: function restoreSearchValue() {\n      if (this.fillHighlighted) {\n        if (this._displayStr !== this.searchStr) {\n          this._displayStr = this.searchStr;\n          this.ngModelChange.emit(this.searchStr);\n        }\n      }\n    }\n  }, {\n    key: \"doBlur\",\n    value: function doBlur() {\n      if (this.blurTimer) {\n        this.blurTimer.unsubscribe();\n        this.blurTimer = null;\n      }\n\n      if (this.overrideSuggested) {\n        this.completer.onSelected({\n          title: this.searchStr,\n          originalObject: null\n        });\n      } else {\n        if (this.clearUnselected && !this.completer.hasSelected) {\n          this.searchStr = \"\";\n          this.ngModelChange.emit(this.searchStr);\n        } else {\n          this.restoreSearchValue();\n        }\n      }\n\n      this.completer.clear();\n    }\n  }, {\n    key: \"searchStr\",\n    get: function get() {\n      return this._searchStr;\n    },\n    set: function set(term) {\n      this._searchStr = term;\n      this._displayStr = term;\n    }\n  }]);\n\n  return CtrInput;\n}();\n\nCtrInput.ɵfac = function CtrInput_Factory(t) {\n  return new (t || CtrInput)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCtrInput.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CtrInput,\n  selectors: [[\"\", \"ctrInput\", \"\"]],\n  hostBindings: function CtrInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keyup\", function CtrInput_keyup_HostBindingHandler($event) {\n        return ctx.keyupHandler($event);\n      })(\"paste\", function CtrInput_paste_HostBindingHandler($event) {\n        return ctx.pasteHandler($event);\n      })(\"keydown\", function CtrInput_keydown_HostBindingHandler($event) {\n        return ctx.keydownHandler($event);\n      })(\"blur\", function CtrInput_blur_HostBindingHandler($event) {\n        return ctx.onBlur($event);\n      })(\"focus\", function CtrInput_focus_HostBindingHandler() {\n        return ctx.onfocus();\n      })(\"click\", function CtrInput_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    clearSelected: \"clearSelected\",\n    clearUnselected: \"clearUnselected\",\n    overrideSuggested: \"overrideSuggested\",\n    fillHighlighted: \"fillHighlighted\",\n    openOnFocus: \"openOnFocus\",\n    openOnClick: \"openOnClick\",\n    selectOnClick: \"selectOnClick\",\n    selectOnFocus: \"selectOnFocus\"\n  },\n  outputs: {\n    ngModelChange: \"ngModelChange\"\n  }\n});\n\n__decorate([Input(\"clearSelected\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"clearSelected\", void 0);\n\n__decorate([Input(\"clearUnselected\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"clearUnselected\", void 0);\n\n__decorate([Input(\"overrideSuggested\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"overrideSuggested\", void 0);\n\n__decorate([Input(\"fillHighlighted\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"fillHighlighted\", void 0);\n\n__decorate([Input(\"openOnFocus\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"openOnFocus\", void 0);\n\n__decorate([Input(\"openOnClick\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"openOnClick\", void 0);\n\n__decorate([Input(\"selectOnClick\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"selectOnClick\", void 0);\n\n__decorate([Input(\"selectOnFocus\"), __metadata(\"design:type\", Object)], CtrInput.prototype, \"selectOnFocus\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], CtrInput.prototype, \"ngModelChange\", void 0);\n\n__decorate([HostListener(\"keyup\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"keyupHandler\", null);\n\n__decorate([HostListener(\"paste\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"pasteHandler\", null);\n\n__decorate([HostListener(\"keydown\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"keydownHandler\", null);\n\n__decorate([HostListener(\"blur\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"onBlur\", null);\n\n__decorate([HostListener(\"focus\", []), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"onfocus\", null);\n\n__decorate([HostListener(\"click\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrInput.prototype, \"onClick\", null);\n\nCtrInput = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [CtrCompleter, NgModel, ElementRef])], CtrInput);\n\nvar CtrListContext = function CtrListContext(results, searching, searchInitialized, isOpen) {\n  _classCallCheck(this, CtrListContext);\n\n  this.results = results;\n  this.searching = searching;\n  this.searchInitialized = searchInitialized;\n  this.isOpen = isOpen;\n};\n\nvar CtrList = /*#__PURE__*/function () {\n  function CtrList(completer, templateRef, viewContainer, cd, zone) {\n    _classCallCheck(this, CtrList);\n\n    this.completer = completer;\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.cd = cd;\n    this.zone = zone;\n    this.ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n    this.ctrListPause = PAUSE;\n    this.ctrListAutoMatch = false;\n    this.ctrListAutoHighlight = false;\n    this.ctrListDisplaySearching = true;\n    this._dataService = null; // private results: CompleterItem[] = [];\n\n    this.term = null; // private searching = false;\n\n    this.searchTimer = null;\n    this.clearTimer = null;\n    this.ctx = new CtrListContext([], false, false, false);\n    this._initialValue = null;\n    this.viewRef = null;\n  }\n\n  _createClass(CtrList, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.completer.registerList(this);\n      this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, new CtrListContext([], false, false, false));\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      var _this13 = this;\n\n      if (!isNil(term) && term.length >= this.ctrListMinSearchLength && this.term !== term) {\n        if (this.searchTimer) {\n          this.searchTimer.unsubscribe();\n          this.searchTimer = null;\n        }\n\n        if (!this.ctx.searching) {\n          if (this.ctrListDisplaySearching) {\n            this.ctx.results = [];\n          }\n\n          this.ctx.searching = true;\n          this.ctx.searchInitialized = true;\n          this.refreshTemplate();\n        }\n\n        if (this.clearTimer) {\n          this.clearTimer.unsubscribe();\n        }\n\n        this.searchTimer = timer(this.ctrListPause).pipe(take(1)).subscribe(function () {\n          _this13.searchTimerComplete(term);\n        });\n      } else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n        this.clear();\n        this.term = \"\";\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this14 = this;\n\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n      }\n\n      this.clearTimer = timer(CLEAR_TIMEOUT).pipe(take(1)).subscribe(function () {\n        _this14._clear();\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this.ctx.searchInitialized) {\n        this.search(\"\");\n      }\n\n      this.refreshTemplate();\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen(open) {\n      this.ctx.isOpen = open;\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n        this.searchTimer = null;\n      }\n\n      if (this.dataService) {\n        this.dataService.cancel();\n      }\n\n      this.viewContainer.clear();\n      this.viewRef = null;\n    }\n  }, {\n    key: \"searchTimerComplete\",\n    value: function searchTimerComplete(term) {\n      // Begin the search\n      if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n        this.ctx.searching = false;\n        return;\n      }\n\n      this.term = term;\n\n      if (this._dataService) {\n        this._dataService.search(term);\n      }\n    }\n  }, {\n    key: \"refreshTemplate\",\n    value: function refreshTemplate() {\n      // create the template if it doesn't exist\n      if (!this.viewRef) {\n        this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, this.ctx);\n      } else if (!this.viewRef.destroyed) {\n        // refresh the template\n        this.viewRef.context.isOpen = this.ctx.isOpen;\n        this.viewRef.context.results = this.ctx.results;\n        this.viewRef.context.searching = this.ctx.searching;\n        this.viewRef.context.searchInitialized = this.ctx.searchInitialized;\n        this.viewRef.detectChanges();\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"getBestMatchIndex\",\n    value: function getBestMatchIndex() {\n      var _this15 = this;\n\n      if (!this.ctx.results || !this.term) {\n        return null;\n      } // First try to find the exact term\n\n\n      var bestMatch = this.ctx.results.findIndex(function (item) {\n        return item.title.toLowerCase() === _this15.term.toLocaleLowerCase();\n      }); // If not try to find the first item that starts with the term\n\n      if (bestMatch < 0) {\n        bestMatch = this.ctx.results.findIndex(function (item) {\n          return item.title.toLowerCase().startsWith(_this15.term.toLocaleLowerCase());\n        });\n      } // If not try to find the first item that includes the term\n\n\n      if (bestMatch < 0) {\n        bestMatch = this.ctx.results.findIndex(function (item) {\n          return item.title.toLowerCase().includes(_this15.term.toLocaleLowerCase());\n        });\n      }\n\n      return bestMatch < 0 ? null : bestMatch;\n    }\n  }, {\n    key: \"dataServiceSubscribe\",\n    value: function dataServiceSubscribe() {\n      var _this16 = this;\n\n      if (this._dataService) {\n        this._dataService.subscribe(function (results) {\n          _this16.ctx.searchInitialized = true;\n          _this16.ctx.searching = false;\n          _this16.ctx.results = results;\n\n          if (_this16.ctrListAutoMatch && results && results.length === 1 && results[0].title && !isNil(_this16.term) && results[0].title.toLocaleLowerCase() === _this16.term.toLocaleLowerCase()) {\n            // Do automatch\n            _this16.completer.onSelected(results[0]);\n\n            return;\n          }\n\n          _this16.refreshTemplate();\n\n          if (_this16.ctrListAutoHighlight) {\n            _this16.completer.autoHighlightIndex = _this16.getBestMatchIndex();\n          }\n        }, function (error) {\n          // tslint:disable-next-line:no-console\n          console.error(error); // tslint:disable-next-line:no-console\n\n          console.error(\"Unexpected error in dataService: errors should be handled by the dataService Observable\");\n          return [];\n        });\n\n        if (this._dataService.dataSourceChange) {\n          this._dataService.dataSourceChange.subscribe(function () {\n            _this16.term = null;\n            _this16.ctx.searchInitialized = false;\n            _this16.ctx.searching = false;\n            _this16.ctx.results = [];\n\n            _this16.refreshTemplate();\n\n            _this16.completer.onDataSourceChange();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"dataService\",\n    set: function set(newService) {\n      this._dataService = newService;\n      this.dataServiceSubscribe();\n    }\n  }, {\n    key: \"initialValue\",\n    set: function set(value) {\n      var _this17 = this;\n\n      if (this._dataService && typeof this._dataService.convertToItem === \"function\") {\n        this.zone.run(function () {\n          var initialItem = _this17._dataService && _this17._dataService.convertToItem(value);\n\n          if (initialItem) {\n            _this17.completer.onSelected(initialItem, false);\n          }\n        });\n      } else if (!this._dataService) {\n        this._initialValue = value;\n      }\n    }\n  }]);\n\n  return CtrList;\n}();\n\nCtrList.ɵfac = function CtrList_Factory(t) {\n  return new (t || CtrList)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nCtrList.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CtrList,\n  selectors: [[\"\", \"ctrList\", \"\"]],\n  inputs: {\n    ctrListMinSearchLength: \"ctrListMinSearchLength\",\n    ctrListPause: \"ctrListPause\",\n    ctrListAutoMatch: \"ctrListAutoMatch\",\n    ctrListAutoHighlight: \"ctrListAutoHighlight\",\n    ctrListDisplaySearching: \"ctrListDisplaySearching\",\n    dataService: [\"ctrList\", \"dataService\"],\n    initialValue: [\"ctrListInitialValue\", \"initialValue\"]\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CtrList.prototype, \"ctrListMinSearchLength\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CtrList.prototype, \"ctrListPause\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CtrList.prototype, \"ctrListAutoMatch\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CtrList.prototype, \"ctrListAutoHighlight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CtrList.prototype, \"ctrListDisplaySearching\", void 0);\n\n__decorate([Input(\"ctrList\"), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], CtrList.prototype, \"dataService\", null);\n\n__decorate([Input(\"ctrListInitialValue\"), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], CtrList.prototype, \"initialValue\", null);\n\nCtrList = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [CtrCompleter, TemplateRef, ViewContainerRef, ChangeDetectorRef, NgZone])], CtrList);\n\nvar CtrRow = /*#__PURE__*/function () {\n  function CtrRow(el, renderer, dropdown) {\n    _classCallCheck(this, CtrRow);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.dropdown = dropdown;\n    this.selected = false;\n    this._rowIndex = 0;\n    this._item = null;\n  }\n\n  _createClass(CtrRow, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._rowIndex) {\n        this.dropdown.unregisterRow(this._rowIndex);\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.dropdown.onSelected(this._item);\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(event) {\n      this.dropdown.highlightRow(this._rowIndex);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.dropdown.rowMouseDown();\n    }\n  }, {\n    key: \"setHighlighted\",\n    value: function setHighlighted(selected) {\n      this.selected = selected;\n\n      if (this.selected) {\n        this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\n      } else {\n        this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\n      }\n    }\n  }, {\n    key: \"getNativeElement\",\n    value: function getNativeElement() {\n      return this.el.nativeElement;\n    }\n  }, {\n    key: \"getDataItem\",\n    value: function getDataItem() {\n      return this._item;\n    }\n  }, {\n    key: \"ctrRow\",\n    set: function set(index) {\n      this._rowIndex = index;\n      this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n    }\n  }, {\n    key: \"dataItem\",\n    set: function set(item) {\n      this._item = item;\n    }\n  }]);\n\n  return CtrRow;\n}();\n\nCtrRow.ɵfac = function CtrRow_Factory(t) {\n  return new (t || CtrRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(CtrDropdown, 1));\n};\n\nCtrRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CtrRow,\n  selectors: [[\"\", \"ctrRow\", \"\"]],\n  hostBindings: function CtrRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CtrRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"mouseenter\", function CtrRow_mouseenter_HostBindingHandler($event) {\n        return ctx.onMouseEnter($event);\n      })(\"mousedown\", function CtrRow_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n  },\n  inputs: {\n    ctrRow: \"ctrRow\",\n    dataItem: \"dataItem\"\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], CtrRow.prototype, \"ctrRow\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], CtrRow.prototype, \"dataItem\", null);\n\n__decorate([HostListener(\"click\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrRow.prototype, \"onClick\", null);\n\n__decorate([HostListener(\"mouseenter\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrRow.prototype, \"onMouseEnter\", null);\n\n__decorate([HostListener(\"mousedown\", [\"$event\"]), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CtrRow.prototype, \"onMouseDown\", null);\n\nCtrRow = __decorate([__param(2, Host()), __metadata(\"design:paramtypes\", [ElementRef, Renderer2, CtrDropdown])], CtrRow);\n\nvar CompleterListItemCmp = /*#__PURE__*/function () {\n  function CompleterListItemCmp() {\n    _classCallCheck(this, CompleterListItemCmp);\n\n    this.text = \"\";\n    this.searchStr = \"\";\n    this.matchClass = \"\";\n    this.type = \"\";\n    this.parts = [];\n  }\n\n  _createClass(CompleterListItemCmp, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!this.searchStr) {\n        this.parts.push({\n          isMatch: false,\n          text: this.text\n        });\n        return;\n      }\n\n      var matchStr = this.text.toLowerCase();\n      var matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n      var startIndex = 0;\n\n      while (matchPos >= 0) {\n        var matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n\n        if (matchPos === 0) {\n          this.parts.push({\n            isMatch: true,\n            text: matchText\n          });\n          startIndex += this.searchStr.length;\n        } else if (matchPos > 0) {\n          var matchPart = this.text.slice(startIndex, matchPos);\n          this.parts.push({\n            isMatch: false,\n            text: matchPart\n          });\n          this.parts.push({\n            isMatch: true,\n            text: matchText\n          });\n          startIndex += this.searchStr.length + matchPart.length;\n        }\n\n        matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n      }\n\n      if (startIndex < this.text.length) {\n        this.parts.push({\n          isMatch: false,\n          text: this.text.slice(startIndex, this.text.length)\n        });\n      }\n    }\n  }]);\n\n  return CompleterListItemCmp;\n}();\n\nCompleterListItemCmp.ɵfac = function CompleterListItemCmp_Factory(t) {\n  return new (t || CompleterListItemCmp)();\n};\n\nCompleterListItemCmp.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CompleterListItemCmp,\n  selectors: [[\"completer-list-item\"]],\n  inputs: {\n    text: \"text\",\n    searchStr: \"searchStr\",\n    matchClass: \"matchClass\",\n    type: \"type\"\n  },\n  decls: 2,\n  vars: 5,\n  consts: [[1, \"completer-list-item-holder\", 3, \"ngClass\"], [\"class\", \"completer-list-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-list-item\", 3, \"ngClass\"]],\n  template: function CompleterListItemCmp_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, CompleterListItemCmp_span_1_Template, 2, 2, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx.type === \"title\", ctx.type === \"description\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [ɵngcc3.NgClass, ɵngcc3.NgForOf],\n  encapsulation: 2\n});\n\n__decorate([Input(), __metadata(\"design:type\", String)], CompleterListItemCmp.prototype, \"text\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], CompleterListItemCmp.prototype, \"searchStr\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], CompleterListItemCmp.prototype, \"matchClass\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], CompleterListItemCmp.prototype, \"type\", void 0);\n\nvar noop = function noop() {\n  return;\n};\n\nvar COMPLETER_CONTROL_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return CompleterCmp;\n  })\n};\n\nvar CompleterCmp = /*#__PURE__*/function () {\n  function CompleterCmp(completerService, cdr) {\n    _classCallCheck(this, CompleterCmp);\n\n    this.completerService = completerService;\n    this.cdr = cdr;\n    this.inputName = \"\";\n    this.inputId = \"\";\n    this.pause = PAUSE;\n    this.minSearchLength = MIN_SEARCH_LENGTH;\n    this.maxChars = MAX_CHARS;\n    this.overrideSuggested = false;\n    this.clearSelected = false;\n    this.clearUnselected = false;\n    this.fillHighlighted = true;\n    this.placeholder = \"\";\n    this.autoMatch = false;\n    this.disableInput = false;\n    this.autofocus = false;\n    this.openOnFocus = false;\n    this.openOnClick = false;\n    this.selectOnClick = false;\n    this.selectOnFocus = false;\n    this.autoHighlight = false;\n    this.selected = new EventEmitter();\n    this.highlighted = new EventEmitter();\n    this.blurEvent = new EventEmitter();\n    this.click = new EventEmitter();\n    this.focusEvent = new EventEmitter();\n    this.opened = new EventEmitter();\n    this.keyup = new EventEmitter();\n    this.keydown = new EventEmitter();\n    this.control = new FormControl(\"\");\n    this.displaySearching = true;\n    this.displayNoResults = true;\n    this._textNoResults = TEXT_NO_RESULTS;\n    this._textSearching = TEXT_SEARCHING;\n    this._onTouchedCallback = noop;\n    this._onChangeCallback = noop;\n    this._focus = false;\n    this._open = false;\n    this._searchStr = \"\";\n  }\n\n  _createClass(CompleterCmp, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this18 = this;\n\n      if (this.autofocus) {\n        this._focus = true;\n      }\n\n      if (!this.completer) {\n        return;\n      }\n\n      this.completer.selected.subscribe(function (item) {\n        _this18.selected.emit(item);\n      });\n      this.completer.highlighted.subscribe(function (item) {\n        _this18.highlighted.emit(item);\n      });\n      this.completer.opened.subscribe(function (isOpen) {\n        _this18._open = isOpen;\n\n        _this18.opened.emit(isOpen);\n      });\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      var _this19 = this;\n\n      if (this._focus) {\n        setTimeout(function () {\n          if (!!_this19.ctrInput) {\n            _this19.ctrInput.nativeElement.focus();\n\n            _this19._focus = false;\n          }\n        }, 0);\n      }\n    }\n  }, {\n    key: \"onTouched\",\n    value: function onTouched() {\n      this._onTouchedCallback();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.searchStr = value;\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChangeCallback = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouchedCallback = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disableInput = isDisabled;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.blurEvent.emit();\n      this.onTouched();\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.focusEvent.emit();\n      this.onTouched();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.click.emit(event);\n      this.onTouched();\n    }\n  }, {\n    key: \"onKeyup\",\n    value: function onKeyup(event) {\n      this.keyup.emit(event);\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(event) {\n      this.keydown.emit(event);\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      this.value = value;\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this.completer) {\n        return;\n      }\n\n      this.completer.open();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.completer) {\n        return;\n      }\n\n      this.completer.clear();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.ctrInput) {\n        this.ctrInput.nativeElement.focus();\n      } else {\n        this._focus = true;\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this.ctrInput) {\n        this.ctrInput.nativeElement.blur();\n      } else {\n        this._focus = false;\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._open;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.searchStr;\n    },\n    set: function set(v) {\n      if (v !== this.searchStr) {\n        this.searchStr = v;\n      } // Propagate the change in any case\n\n\n      this._onChangeCallback(v);\n    }\n  }, {\n    key: \"searchStr\",\n    get: function get() {\n      return this._searchStr;\n    },\n    set: function set(value) {\n      if (typeof value === \"string\" || isNil(value)) {\n        this._searchStr = value;\n      } else {\n        this._searchStr = JSON.stringify(value);\n      }\n    }\n  }, {\n    key: \"datasource\",\n    set: function set(source) {\n      if (source) {\n        if (source instanceof Array) {\n          this.dataService = this.completerService.local(source);\n        } else if (typeof source === \"string\") {\n          this.dataService = this.completerService.remote(source);\n        } else {\n          this.dataService = source;\n        }\n      }\n    }\n  }, {\n    key: \"textNoResults\",\n    set: function set(text) {\n      if (this._textNoResults !== text) {\n        this._textNoResults = text;\n        this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n      }\n    }\n  }, {\n    key: \"textSearching\",\n    set: function set(text) {\n      if (this._textSearching !== text) {\n        this._textSearching = text;\n        this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n      }\n    }\n  }]);\n\n  return CompleterCmp;\n}();\n\nCompleterCmp.ɵfac = function CompleterCmp_Factory(t) {\n  return new (t || CompleterCmp)(ɵngcc0.ɵɵdirectiveInject(CompleterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nCompleterCmp.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CompleterCmp,\n  selectors: [[\"ng2-completer\"]],\n  viewQuery: function CompleterCmp_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CtrCompleter, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.completer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ctrInput = _t.first);\n    }\n  },\n  inputs: {\n    inputName: \"inputName\",\n    inputId: \"inputId\",\n    pause: \"pause\",\n    minSearchLength: \"minSearchLength\",\n    maxChars: \"maxChars\",\n    overrideSuggested: \"overrideSuggested\",\n    clearSelected: \"clearSelected\",\n    clearUnselected: \"clearUnselected\",\n    fillHighlighted: \"fillHighlighted\",\n    placeholder: \"placeholder\",\n    autoMatch: \"autoMatch\",\n    disableInput: \"disableInput\",\n    autofocus: \"autofocus\",\n    openOnFocus: \"openOnFocus\",\n    openOnClick: \"openOnClick\",\n    selectOnClick: \"selectOnClick\",\n    selectOnFocus: \"selectOnFocus\",\n    autoHighlight: \"autoHighlight\",\n    datasource: \"datasource\",\n    dataService: \"dataService\",\n    textNoResults: \"textNoResults\",\n    textSearching: \"textSearching\",\n    matchClass: \"matchClass\",\n    fieldTabindex: \"fieldTabindex\",\n    inputClass: \"inputClass\",\n    initialValue: \"initialValue\"\n  },\n  outputs: {\n    selected: \"selected\",\n    highlighted: \"highlighted\",\n    blurEvent: \"blur\",\n    click: \"click\",\n    focusEvent: \"focus\",\n    opened: \"opened\",\n    keyup: \"keyup\",\n    keydown: \"keydown\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([COMPLETER_CONTROL_VALUE_ACCESSOR])],\n  decls: 4,\n  vars: 23,\n  consts: [[\"ctrCompleter\", \"\", 1, \"completer-holder\"], [\"type\", \"search\", \"ctrInput\", \"\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"completer-input\", 3, \"ngClass\", \"ngModel\", \"placeholder\", \"tabindex\", \"disabled\", \"clearSelected\", \"clearUnselected\", \"overrideSuggested\", \"openOnFocus\", \"fillHighlighted\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"ngModelChange\", \"blur\", \"focus\", \"keyup\", \"keydown\", \"click\"], [\"ctrInput\", \"\"], [\"class\", \"completer-dropdown-holder\", 4, \"ctrList\", \"ctrListMinSearchLength\", \"ctrListPause\", \"ctrListAutoMatch\", \"ctrListInitialValue\", \"ctrListAutoHighlight\", \"ctrListDisplaySearching\"], [1, \"completer-dropdown-holder\"], [\"class\", \"completer-dropdown\", \"ctrDropdown\", \"\", 4, \"ngIf\"], [\"ctrDropdown\", \"\", 1, \"completer-dropdown\"], [\"class\", \"completer-searching\", 4, \"ngIf\"], [\"class\", \"completer-no-results\", 4, \"ngIf\"], [\"class\", \"completer-row-wrapper\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-searching\"], [1, \"completer-no-results\"], [1, \"completer-row-wrapper\"], [1, \"completer-row\", 3, \"ctrRow\", \"dataItem\"], [\"class\", \"completer-image-holder\", 4, \"ngIf\"], [1, \"completer-item-text\", 3, \"ngClass\"], [1, \"completer-title\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"], [\"class\", \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\", 4, \"ngIf\"], [1, \"completer-image-holder\"], [\"class\", \"completer-image\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"completer-image-default\", 4, \"ngIf\"], [1, \"completer-image\", 3, \"src\"], [1, \"completer-image-default\"], [1, \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"]],\n  template: function CompleterCmp_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) {\n        return ctx.searchStr = $event;\n      })(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) {\n        return ctx.onChange($event);\n      })(\"blur\", function CompleterCmp_Template_input_blur_1_listener() {\n        return ctx.onBlur();\n      })(\"focus\", function CompleterCmp_Template_input_focus_1_listener() {\n        return ctx.onFocus();\n      })(\"keyup\", function CompleterCmp_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyup($event);\n      })(\"keydown\", function CompleterCmp_Template_input_keydown_1_listener($event) {\n        return ctx.onKeydown($event);\n      })(\"click\", function CompleterCmp_Template_input_click_1_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_Template, 2, 1, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.searchStr)(\"placeholder\", ctx.placeholder)(\"tabindex\", ctx.fieldTabindex)(\"disabled\", ctx.disableInput)(\"clearSelected\", ctx.clearSelected)(\"clearUnselected\", ctx.clearUnselected)(\"overrideSuggested\", ctx.overrideSuggested)(\"openOnFocus\", ctx.openOnFocus)(\"fillHighlighted\", ctx.fillHighlighted)(\"openOnClick\", ctx.openOnClick)(\"selectOnClick\", ctx.selectOnClick)(\"selectOnFocus\", ctx.selectOnFocus);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId.length > 0 ? ctx.inputId : null)(\"name\", ctx.inputName)(\"maxlength\", ctx.maxChars);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ctrList\", ctx.dataService)(\"ctrListMinSearchLength\", ctx.minSearchLength)(\"ctrListPause\", ctx.pause)(\"ctrListAutoMatch\", ctx.autoMatch)(\"ctrListInitialValue\", ctx.initialValue)(\"ctrListAutoHighlight\", ctx.autoHighlight)(\"ctrListDisplaySearching\", ctx.displaySearching);\n    }\n  },\n  directives: [CtrCompleter, ɵngcc2.DefaultValueAccessor, CtrInput, ɵngcc3.NgClass, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc2.MaxLengthValidator, CtrList, ɵngcc3.NgIf, CtrDropdown, ɵngcc3.NgForOf, CtrRow, CompleterListItemCmp],\n  styles: [\".completer-dropdown[_ngcontent-%COMP%] {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row[_ngcontent-%COMP%] {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row[_ngcontent-%COMP%] {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description[_ngcontent-%COMP%] {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default[_ngcontent-%COMP%] {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder[_ngcontent-%COMP%] {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image[_ngcontent-%COMP%] {\\n        float: right;\\n        width: 90%;\\n    }\"]\n});\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"dataService\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"inputName\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], CompleterCmp.prototype, \"inputId\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"pause\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"minSearchLength\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"maxChars\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"overrideSuggested\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"clearSelected\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"clearUnselected\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"fillHighlighted\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"placeholder\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"matchClass\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"fieldTabindex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"autoMatch\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"disableInput\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"inputClass\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"autofocus\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"openOnFocus\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"openOnClick\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"selectOnClick\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"selectOnFocus\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"initialValue\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"autoHighlight\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"selected\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"highlighted\", void 0);\n\n__decorate([Output(\"blur\"), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"blurEvent\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"click\", void 0);\n\n__decorate([Output(\"focus\"), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"focusEvent\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"opened\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], CompleterCmp.prototype, \"keyup\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], CompleterCmp.prototype, \"keydown\", void 0);\n\n__decorate([ViewChild(CtrCompleter, {\n  static: false\n}), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"completer\", void 0);\n\n__decorate([ViewChild(\"ctrInput\", {\n  static: false\n}), __metadata(\"design:type\", Object)], CompleterCmp.prototype, \"ctrInput\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], CompleterCmp.prototype, \"datasource\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], CompleterCmp.prototype, \"textNoResults\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], CompleterCmp.prototype, \"textSearching\", null);\n\nCompleterCmp = __decorate([__metadata(\"design:paramtypes\", [CompleterService, ChangeDetectorRef])], CompleterCmp);\nvar Ng2CompleterModule_1;\nvar providers = [CompleterService, LocalDataFactory, RemoteDataFactory];\n\nvar Ng2CompleterModule = Ng2CompleterModule_1 = /*#__PURE__*/function () {\n  function Ng2CompleterModule() {\n    _classCallCheck(this, Ng2CompleterModule);\n  }\n\n  _createClass(Ng2CompleterModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot() {\n      return {\n        ngModule: Ng2CompleterModule_1,\n        providers: providers\n      };\n    }\n  }, {\n    key: \"forChild\",\n    value: function forChild() {\n      return {\n        ngModule: Ng2CompleterModule_1,\n        providers: providers\n      };\n    }\n  }]);\n\n  return Ng2CompleterModule;\n}();\n\nNg2CompleterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2CompleterModule\n});\nNg2CompleterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function Ng2CompleterModule_Factory(t) {\n    return new (t || Ng2CompleterModule)();\n  },\n  providers: providers,\n  imports: [[CommonModule, FormsModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LocalDataFactory, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RemoteDataFactory, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.HttpClient\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CompleterService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: LocalDataFactory\n    }, {\n      type: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CtrCompleter, [{\n    type: Directive,\n    args: [{\n      selector: \"[ctrCompleter]\"\n    }]\n  }], function () {\n    return [];\n  }, {\n    selected: [{\n      type: Output\n    }],\n    highlighted: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    dataSourceChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CtrDropdown, [{\n    type: Directive,\n    args: [{\n      selector: \"[ctrDropdown]\"\n    }]\n  }], function () {\n    return [{\n      type: CtrCompleter,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onMouseDown: [{\n      type: HostListener,\n      args: [\"mousedown\", [\"$event\"]]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CtrInput, [{\n    type: Directive,\n    args: [{\n      selector: \"[ctrInput]\"\n    }]\n  }], function () {\n    return [{\n      type: CtrCompleter,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc2.NgModel\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    clearSelected: [{\n      type: Input,\n      args: [\"clearSelected\"]\n    }],\n    clearUnselected: [{\n      type: Input,\n      args: [\"clearUnselected\"]\n    }],\n    overrideSuggested: [{\n      type: Input,\n      args: [\"overrideSuggested\"]\n    }],\n    fillHighlighted: [{\n      type: Input,\n      args: [\"fillHighlighted\"]\n    }],\n    openOnFocus: [{\n      type: Input,\n      args: [\"openOnFocus\"]\n    }],\n    openOnClick: [{\n      type: Input,\n      args: [\"openOnClick\"]\n    }],\n    selectOnClick: [{\n      type: Input,\n      args: [\"selectOnClick\"]\n    }],\n    selectOnFocus: [{\n      type: Input,\n      args: [\"selectOnFocus\"]\n    }],\n    ngModelChange: [{\n      type: Output\n    }],\n    keyupHandler: [{\n      type: HostListener,\n      args: [\"keyup\", [\"$event\"]]\n    }],\n    pasteHandler: [{\n      type: HostListener,\n      args: [\"paste\", [\"$event\"]]\n    }],\n    keydownHandler: [{\n      type: HostListener,\n      args: [\"keydown\", [\"$event\"]]\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: [\"blur\", [\"$event\"]]\n    }],\n    onfocus: [{\n      type: HostListener,\n      args: [\"focus\", []]\n    }],\n    onClick: [{\n      type: HostListener,\n      args: [\"click\", [\"$event\"]]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CtrList, [{\n    type: Directive,\n    args: [{\n      selector: \"[ctrList]\"\n    }]\n  }], function () {\n    return [{\n      type: CtrCompleter,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    ctrListMinSearchLength: [{\n      type: Input\n    }],\n    ctrListPause: [{\n      type: Input\n    }],\n    ctrListAutoMatch: [{\n      type: Input\n    }],\n    ctrListAutoHighlight: [{\n      type: Input\n    }],\n    ctrListDisplaySearching: [{\n      type: Input\n    }],\n    dataService: [{\n      type: Input,\n      args: [\"ctrList\"]\n    }],\n    initialValue: [{\n      type: Input,\n      args: [\"ctrListInitialValue\"]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CtrRow, [{\n    type: Directive,\n    args: [{\n      selector: \"[ctrRow]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: CtrDropdown,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  }, {\n    ctrRow: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: [\"click\", [\"$event\"]]\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: [\"mouseenter\", [\"$event\"]]\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: [\"mousedown\", [\"$event\"]]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CompleterListItemCmp, [{\n    type: Component,\n    args: [{\n      selector: \"completer-list-item\",\n      template: \"<span class=\\\"completer-list-item-holder\\\" [ngClass]= \\\"{'completer-title': type === 'title', 'completer-description': type === 'description'}\\\" >\\n        <span class=\\\"completer-list-item\\\" *ngFor=\\\"let part of parts\\\" [ngClass]= \\\"part.isMatch ? matchClass : null\\\">{{part.text}}</span>\\n    </span>\"\n    }]\n  }], function () {\n    return [];\n  }, {\n    text: [{\n      type: Input\n    }],\n    searchStr: [{\n      type: Input\n    }],\n    matchClass: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CompleterCmp, [{\n    type: Component,\n    args: [{\n      selector: \"ng2-completer\",\n      template: \"\\n        <div class=\\\"completer-holder\\\" ctrCompleter>\\n            <input #ctrInput [attr.id]=\\\"inputId.length > 0 ? inputId : null\\\" type=\\\"search\\\"\\n                class=\\\"completer-input\\\" ctrInput [ngClass]=\\\"inputClass\\\"\\n                [(ngModel)]=\\\"searchStr\\\" (ngModelChange)=\\\"onChange($event)\\\"\\n                [attr.name]=\\\"inputName\\\" [placeholder]=\\\"placeholder\\\"\\n                [attr.maxlength]=\\\"maxChars\\\" [tabindex]=\\\"fieldTabindex\\\" [disabled]=\\\"disableInput\\\"\\n                [clearSelected]=\\\"clearSelected\\\" [clearUnselected]=\\\"clearUnselected\\\"\\n                [overrideSuggested]=\\\"overrideSuggested\\\" [openOnFocus]=\\\"openOnFocus\\\" [fillHighlighted]=\\\"fillHighlighted\\\"\\n                [openOnClick]=\\\"openOnClick\\\" [selectOnClick]=\\\"selectOnClick\\\" [selectOnFocus]=\\\"selectOnFocus\\\"\\n                (blur)=\\\"onBlur()\\\" (focus)=\\\"onFocus()\\\" (keyup)=\\\"onKeyup($event)\\\"\\n                (keydown)=\\\"onKeydown($event)\\\" (click)=\\\"onClick($event)\\\"\\n                autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" />\\n\\n            <div class=\\\"completer-dropdown-holder\\\"\\n                *ctrList=\\\"dataService;\\n                    minSearchLength: minSearchLength;\\n                    pause: pause;\\n                    autoMatch: autoMatch;\\n                    initialValue: initialValue;\\n                    autoHighlight: autoHighlight;\\n                    displaySearching: displaySearching;\\n                    let items = results;\\n                    let searchActive = searching;\\n                    let isInitialized = searchInitialized;\\n                    let isOpen = isOpen;\\\">\\n                <div class=\\\"completer-dropdown\\\" ctrDropdown\\n                    *ngIf=\\\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\\\">\\n                    <div *ngIf=\\\"searchActive && displaySearching\\\" class=\\\"completer-searching\\\">{{ _textSearching }}</div>\\n                    <div *ngIf=\\\"!searchActive && (!items || items?.length === 0)\\\"\\n                    class=\\\"completer-no-results\\\">{{ _textNoResults }}</div>\\n                    <div class=\\\"completer-row-wrapper\\\" *ngFor=\\\"let item of items; let rowIndex=index\\\">\\n                        <div class=\\\"completer-row\\\" [ctrRow]=\\\"rowIndex\\\" [dataItem]=\\\"item\\\">\\n                            <div *ngIf=\\\"item.image || item.image === ''\\\" class=\\\"completer-image-holder\\\">\\n                                <img *ngIf=\\\"item.image != ''\\\" src=\\\"{{item.image}}\\\" class=\\\"completer-image\\\" />\\n                                <div *ngIf=\\\"item.image === ''\\\" class=\\\"completer-image-default\\\"></div>\\n                            </div>\\n                            <div class=\\\"completer-item-text\\\"\\n                            [ngClass]=\\\"{'completer-item-text-image': item.image || item.image === '' }\\\">\\n                                <completer-list-item\\n                                class=\\\"completer-title\\\" [text]=\\\"item.title\\\" [matchClass]=\\\"matchClass\\\"\\n                                [searchStr]=\\\"searchStr\\\" [type]=\\\"'title'\\\"></completer-list-item>\\n                                <completer-list-item *ngIf=\\\"item.description && item.description != ''\\\"\\n                                class=\\\"completer-description\\\" [text]=\\\"item.description\\\"\\n                                    [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'description'\\\">\\n                                </completer-list-item>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n      styles: [\"\\n    .completer-dropdown {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image {\\n        float: right;\\n        width: 90%;\\n    }\\n    \"],\n      providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: CompleterService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    inputName: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    pause: [{\n      type: Input\n    }],\n    minSearchLength: [{\n      type: Input\n    }],\n    maxChars: [{\n      type: Input\n    }],\n    overrideSuggested: [{\n      type: Input\n    }],\n    clearSelected: [{\n      type: Input\n    }],\n    clearUnselected: [{\n      type: Input\n    }],\n    fillHighlighted: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    autoMatch: [{\n      type: Input\n    }],\n    disableInput: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    openOnFocus: [{\n      type: Input\n    }],\n    openOnClick: [{\n      type: Input\n    }],\n    selectOnClick: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    selected: [{\n      type: Output\n    }],\n    highlighted: [{\n      type: Output\n    }],\n    blurEvent: [{\n      type: Output,\n      args: [\"blur\"]\n    }],\n    click: [{\n      type: Output\n    }],\n    focusEvent: [{\n      type: Output,\n      args: [\"focus\"]\n    }],\n    opened: [{\n      type: Output\n    }],\n    keyup: [{\n      type: Output\n    }],\n    keydown: [{\n      type: Output\n    }],\n    datasource: [{\n      type: Input\n    }],\n    dataService: [{\n      type: Input\n    }],\n    textNoResults: [{\n      type: Input\n    }],\n    textSearching: [{\n      type: Input\n    }],\n    matchClass: [{\n      type: Input\n    }],\n    fieldTabindex: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    completer: [{\n      type: ViewChild,\n      args: [CtrCompleter, {\n        static: false\n      }]\n    }],\n    ctrInput: [{\n      type: ViewChild,\n      args: [\"ctrInput\", {\n        static: false\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2CompleterModule, {\n    declarations: function declarations() {\n      return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2CompleterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp],\n      exports: [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp],\n      imports: [CommonModule, FormsModule],\n      providers: providers\n    }]\n  }], null, null);\n})();\n\nexport { CompleterCmp, CompleterListItemCmp, CompleterService, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, LocalData, LocalDataFactory, Ng2CompleterModule, RemoteData, RemoteDataFactory, CtrListContext as ɵa, CompleterBaseData as ɵb };","map":{"version":3,"sources":["../../../src/globals.ts","../../../src/services/completer-base-data.ts","../../../src/services/local-data.ts","../../../src/services/remote-data.ts","../../../src/services/local-data-factory.ts","../../../src/services/remote-data-factory.ts","../../../src/services/completer-service.ts","../../../src/directives/ctr-completer.ts","../../../src/directives/ctr-dropdown.ts","../../../src/directives/ctr-input.ts","../../../src/directives/ctr-list.ts","../../../src/directives/ctr-row.ts","../../../src/components/completer-list-item-cmp.ts","../../../src/components/completer-cmp.ts","../../../src/modules/ng2-completer.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,IAAM,SAAS,GAAG,MAAlB,C,CAAyB;;AACzB,IAAM,iBAAiB,GAAG,CAA1B;AACA,IAAM,KAAK,GAAG,EAAd;AACA,IAAM,cAAc,GAAG,cAAvB;AACA,IAAM,eAAe,GAAG,kBAAxB;AACA,IAAM,aAAa,GAAG,EAAtB;;AACP,SACgB,KADhB,CACsB,KADtB,EACgC;AAC5B,SAAO,OAAO,KAAP,KAAiB,WAAjB,IAAgC,KAAK,KAAK,IAAjD;AACJ;;ICJsB,iB;;;;;AAOlB,+BAAA;AAAA;;AAAA;;AACI;AANM,UAAA,aAAA,GAA+B,IAA/B;AACA,UAAA,WAAA,GAA6B,IAA7B;AACA,UAAA,iBAAA,GAAwC,SAAxC;AACA,UAAA,WAAA,GAAkC,SAAlC;AAEV;AAEC;;;;6BAIY;AACT;AACH;;;iCAEmB,a,EAA2B;AAC3C,WAAK,aAAL,GAAqB,aAArB;AACA,aAAO,IAAP;AACH;;;+BAEiB,W,EAAyB;AACvC,WAAK,WAAL,GAAmB,WAAnB;AACA,aAAO,IAAP;AACH;;;qCAEuB,iB,EAAwB;AAC5C,WAAK,iBAAL,GAAyB,iBAAzB;AACA,aAAO,IAAP;AACH;;;+BAEiB,W,EAAkB;AAChC,WAAK,WAAL,GAAmB,WAAnB;AACA,aAAO,IAAP;AACH;;;kCAEoB,I,EAAS;AAC1B,UAAI,KAAK,GAAkB,IAA3B;AACA,UAAI,aAAJ;AACA,UAAI,aAAa,GAAkB,IAAnC;;AAEA,UAAI,KAAK,WAAT,EAAsB;AAClB,QAAA,aAAa,GAAG,KAAK,YAAL,CAAkB,IAAlB,CAAhB;AACH,OAFD,MAEO;AACH,QAAA,aAAa,GAAG,IAAhB;AACH;;AAED,UAAI,OAAO,aAAP,KAAyB,QAA7B,EAAuC;AACnC,QAAA,aAAa,GAAG,IAAI,CAAC,SAAL,CAAe,aAAf,CAAhB;AACH;;AAED,UAAI,KAAK,iBAAT,EAA4B;AACxB,QAAA,aAAa,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAK,iBAA7B,CAAhB;AACH;;AAED,UAAI,KAAK,WAAT,EAAsB;AAClB,QAAA,KAAK,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAK,WAA7B,CAAR;AACH;;AAED,UAAI,KAAK,CAAC,aAAD,CAAT,EAA0B;AACtB,eAAO,IAAP;AACH;;AAED,aAAO;AACH,QAAA,WAAW,EAAE,aADV;AAEH,QAAA,KAAK,EAAL,KAFG;AAGH,QAAA,cAAc,EAAE,IAHb;AAIH,QAAA,KAAK,EAAE;AAJJ,OAAP;AAOH;;;mCAEwB,I,EAAa,I,EAAY;AAAA;;AAC9C,UAAI,OAAO,GAAU,EAArB;AACA,UAAM,YAAY,GAAG,KAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,KAAnB,CAAyB,GAAzB,CAArB,GAAqD,IAA1E;;AACA,UAAI,KAAK,aAAL,KAAuB,IAAvB,IAA+B,KAAK,aAAL,KAAuB,SAAtD,IAAmE,IAAI,KAAK,EAAhF,EAAoF;AAChF,QAAA,OAAO,GAAG,IAAI,CAAC,MAAL,CAAY,UAAC,IAAD,EAAK;AACvB,cAAM,MAAM,GAAU,YAAY,GAAG,MAAI,CAAC,qBAAL,CAA2B,YAA3B,EAAyC,IAAzC,CAAH,GAAoD,CAAC,IAAD,CAAtF;AACA,iBAAO,MAAM,CAAC,IAAP,CAAY,UAAC,KAAD;AAAA,mBAAW,KAAK,CAC9B,QADyB,GAEzB,WAFyB,GAGzB,OAHyB,CAGjB,IAAI,CAAC,QAAL,GAAgB,WAAhB,EAHiB,KAGiB,CAH5B;AAAA,WAAZ,CAAP;AAKH,SAPS,CAAV;AAQH,OATD,MASO;AACH,QAAA,OAAO,GAAG,IAAV;AACH;;AAED,aAAO,OAAP;AACH;;;iCAEsB,I,EAAS;AAAA;;AACpC;AACQ,UAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,eAAO,EAAP;AACH;;AAED,aAAO,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB,EACF,GADE,CACE,UAAC,KAAD,EAAM;AACP,eAAO,MAAI,CAAC,YAAL,CAAkB,IAAlB,EAAwB,KAAxB,CAAP;AACH,OAHE,EAIF,MAJE,CAIK,UAAC,GAAD,EAAM,SAAN;AAAA,eAAoB,GAAG,aAAM,GAAN,cAAa,SAAb,IAA2B,SAAlD;AAAA,OAJL,CAAP;AAKH;;;iCAEsB,G,EAAU,G,EAAkB;AAC/C,UAAI,IAAJ;AACA,UAAI,MAAJ;;AACA,UAAI,GAAJ,EAAS;AACL,QAAA,IAAI,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAP;AACA,QAAA,MAAM,GAAG,GAAT;;AAFK,mDAGO,IAHP;AAAA;;AAAA;AAGL,8DAAkB;AAAb,YAAA,GAAa;;AACd,gBAAI,MAAJ,EAAY;AACR,cAAA,MAAM,GAAG,MAAM,CAAC,GAAD,CAAf;AACH;AACJ;AAPI;AAAA;AAAA;AAAA;AAAA;AAQR,OARD,MAQO;AACH,QAAA,MAAM,GAAG,GAAT;AACH;;AACD,aAAO,MAAP;AACH;;;mCAEwB,O,EAAiB;AACtC,UAAI,CAAJ;AACA,UAAM,OAAO,GAAoB,EAAjC;;AAEA,UAAI,OAAO,IAAI,OAAO,CAAC,MAAR,GAAiB,CAAhC,EAAmC;AAC/B,aAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,OAAO,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC;AACjC,cAAM,IAAI,GAAG,KAAK,aAAL,CAAmB,OAAO,CAAC,CAAD,CAA1B,CAAb;;AACA,cAAI,IAAJ,EAAU;AACN,YAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACH;AACJ;AACJ;;AACD,aAAO,OAAP;AACH;;;0CAE6B,Y,EAAwB,I,EAAS;AAAA;;AAC3D,aAAO,YAAY,CACd,GADE,CACE,UAAC,WAAD;AAAA,eAAiB,MAAI,CAAC,YAAL,CAAkB,IAAlB,EAAwB,WAAxB,CAAjB;AAAA,OADF,EACyD,MADzD,CACgE,UAAC,KAAD;AAAA,eAAW,CAAC,CAAC,KAAb;AAAA,OADhE,CAAP;AAEH;;;;EA5I2C,O;;ICCnC,S;;;;;AAOT,uBAAA;AAAA;;AAAA;;AACI;AANG,WAAA,gBAAA,GAAuC,IAAI,YAAJ,EAAvC;AAEG,WAAA,KAAA,GAAe,EAAf;AACA,WAAA,SAAA,GAA2B,IAA3B;AAEV;AAEC;;;;yBAEW,K,EAA+B;AAAA;;AACvC,UAAI,KAAI,YAAY,UAApB,EAAgC;AAC5B,YAAM,KAAK,GAAG,KAAd;AACA,QAAA,KAAK,CACA,IADL,CACU,UAAU,CAAC;AAAA,iBAAM,EAAN;AAAA,SAAD,CADpB,EAEK,SAFL,CAEe,UAAC,GAAD,EAAI;AACX,UAAA,MAAI,CAAC,KAAL,GAAa,GAAb;;AACA,cAAI,MAAI,CAAC,SAAT,EAAoB;AAChB,YAAA,MAAI,CAAC,MAAL,CAAY,MAAI,CAAC,SAAjB;AACH;;AACD,UAAA,MAAI,CAAC,gBAAL,CAAsB,IAAtB;AACH,SARL;AASH,OAXD,MAWO;AACH,aAAK,KAAL,GAAa,KAAb;AACH;;AAED,WAAK,gBAAL,CAAsB,IAAtB;AAEA,aAAO,IAAP;AACH;;;2BAEa,I,EAAY;AACtB,UAAI,CAAC,KAAK,KAAV,EAAiB;AACb,aAAK,SAAL,GAAiB,IAAjB;AACH,OAFD,MAEO;AACH,aAAK,SAAL,GAAiB,IAAjB;AACA,YAAM,OAAO,GAAU,KAAK,cAAL,CAAoB,KAAK,KAAzB,EAAgC,IAAhC,CAAvB;AACA,aAAK,IAAL,CAAU,KAAK,cAAL,CAAoB,OAApB,CAAV;AACH;AACJ;;;kCAEoB,I,EAAS;AAC1B,0FAA2B,IAA3B;AACH;;;;EA5C0B,iB;;ICClB,U;;;;;AAST,sBAAoB,IAApB,EAAoC;AAAA;;AAAA;;AAChC;AADgB,WAAA,IAAA,GAAA,IAAA;AARb,WAAA,gBAAA,GAAuC,IAAI,YAAJ,EAAvC;AAEC,WAAA,UAAA,GAA4B,IAA5B;AACA,WAAA,YAAA,GAAoC,IAApC;AACA,WAAA,YAAA,GAAkD,IAAlD;AACA,WAAA,UAAA,GAA4B,IAA5B;AAG4B;AAEnC;;;;8BAEgB,U,EAAwB;AACrC,WAAK,UAAL,GAAkB,UAAlB;AACA,WAAK,gBAAL,CAAsB,IAAtB;AAEA,aAAO,IAAP;AACH;;;gCAEkB,Y,EAAqC;AACpD,WAAK,YAAL,GAAoB,YAApB;AACH;;;8BAEgB,U,EAAiB;AAC9B,WAAK,UAAL,GAAkB,UAAlB;AACH;;;mCAEqB,e,EAAmB;AACrC,WAAK,eAAL,GAAuB,eAAvB;AACH;;;2BAEa,I,EAAY;AAAA;;AACtB,WAAK,MAAL,GADsB,CAE9B;;AACQ,UAAI,GAAG,GAAG,EAAV;;AACA,UAAI,KAAK,YAAT,EAAuB;AACnB,QAAA,GAAG,GAAG,KAAK,YAAL,CAAkB,IAAlB,CAAN;AACH,OAFD,MAEO;AACH,QAAA,GAAG,GAAG,KAAK,UAAL,GAAkB,kBAAkB,CAAC,IAAD,CAA1C;AACH;;AAED,WAAK,YAAL,GAAoB,KAAK,IAAL,CACf,GADe,CACX,GADW,EACN,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAK,eAAvB,CADM,EAEf,IAFe,CAGZ,GAAG,CAAC,UAAC,IAAD,EAAU;AACV,YAAM,OAAO,GAAG,MAAI,CAAC,YAAL,CAAkB,IAAlB,EAAwB,MAAI,CAAC,UAA7B,CAAhB;;AACA,eAAO,MAAI,CAAC,cAAL,CAAoB,OAApB,EAA6B,IAA7B,CAAP;AACH,OAHE,CAHS,EAOZ,UAAU,CAAC;AAAA,eAAM,EAAN;AAAA,OAAD,CAPE,EASf,SATe,CASL,UAAC,OAAD,EAAe;AACtB,YAAM,OAAO,GAAG,MAAI,CAAC,cAAL,CAAoB,OAApB,CAAhB;;AACA,QAAA,MAAI,CAAC,IAAL,CAAU,OAAV;AACH,OAZe,CAApB;AAaH;;;6BAEY;AACT,UAAI,KAAK,YAAT,EAAuB;AACnB,aAAK,YAAL,CAAkB,WAAlB;AACH;AACJ;;;kCAEoB,I,EAAS;AAC1B,2FAA2B,IAA3B;AACH;;;;EAjE2B,iB;;AAmE/B,ICtEY,gBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACiB;AACT,aAAO,IAAI,SAAJ,EAAP;AACH;AAHL;;AAAA;AAAA,GDsEC;;ACtEY,gBAAgB,CAAA,IAAhB,GAAgB,SAD5B,wBAC4B,CAAhB,CAAgB,EAAhB;AAAA,SAIZ,KAAA,CAAA,IAAA,gBAAA,GAJY;AAIZ,CAJY;;;;;;AAKb;;;AAAE,ICHW,iBAAb;AACI,6BAAoB,IAApB,EAAoC;AAAA;;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAqB;;AAD7C;AAAA;AAAA,6BAGiB;AACT,aAAO,IAAI,UAAJ,CAAe,KAAK,IAApB,CAAP;AACH;AALL;;AAAA;AAAA,GDGE;;;;;;;;;;ACGD;;AANY,iBAAiB,GAAA,UAAA,CAA1B,CADH,UAAA,CAAA,mBAAA,EAAY,CAEiB,UAFjB,CAAZ,CACG,CAA0B,EAAjB,iBAAiB,CAAjB;;AAOX,ICLW,gBAAb;AACI,4BACY,gBADZ,EAC8C;AAClC,EAAA,iBAFZ,CAEgD;AAFhD,IAGJ;AAAA;;AAFgB,SAAA,gBAAA,GAAA,gBAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACP;;AAJT;AAAA;AAAA,0BAOQ,IAPR,EASsC;AAAA,UAD9B,YAC8B,uEADA,EACA;AAAA,UAA9B,UAA8B,uEAAF,EAAE;AAG9B,UAAM,SAAS,GAAG,KAAK,gBAAL,CAAsB,MAAtB,EAAlB;AACA,aAAO,SAAS,CACX,IADE,CACG,IADH,EAEF,YAFE,CAEW,YAFX,EAGF,UAHE,CAGS,UAHT,CAAP;AAIH;AAjBL;AAAA;AAAA,2BAmBkB,GAnBlB,EAmBsG;AAAA,UAAhE,YAAgE,uEAAlC,EAAkC;AAAA,UAA9B,UAA8B,uEAAF,EAAE;AAE9F,UAAM,UAAU,GAAG,KAAK,iBAAL,CAAuB,MAAvB,EAAnB;AACA,aAAO,UAAU,CACZ,SADE,CACQ,GADR,EAEF,YAFE,CAEW,YAFX,EAGF,UAHE,CAGS,UAHT,CAAP;AAIH;AA1BL;;AAAA;AAAA,GDKE;;;;;;;;;;;ACsBD;;AA3BY,gBAAgB,GAAA,UAAA,CAAzB,CADH,UAAA,CAAA,mBAAA,EAAY,CAGqB,gBAHrB,EAIsB,iBAJtB,CAIuC;AAJvC,CAAZ,CACG,CAAyB,EAAhB,gBAAgB,CAAhB;;AA4BX,ICfW,YAAb;AAAA,0BAAA;AAAA;;AACqB,SAAA,QAAA,GAAW,IAAI,YAAJ,EAAX;AACA,SAAA,WAAA,GAAc,IAAI,YAAJ,EAAd;AACA,SAAA,MAAA,GAAS,IAAI,YAAJ,EAAT;AACA,SAAA,gBAAA,GAAmB,IAAI,YAAJ,EAAnB;AAET,SAAA,IAAA,GAA6B,IAA7B;AACA,SAAA,QAAA,GAAqC,IAArC;AACA,SAAA,eAAA,GAAkB,KAAlB;AACA,SAAA,YAAA,GAAe,KAAf;AACA,SAAA,WAAA,GAAc,KAAd;AACA,SAAA,OAAA,GAAU,KAAV;AACA,SAAA,mBAAA,GAAqC,IAArC;AAuHX;;AAnID;AAAA;AAAA,iCAcwB,IAdxB,EAc2C;AACnC,WAAK,IAAL,GAAY,IAAZ;AACH;AAhBL;AAAA;AAAA,qCAkB4B,QAlB5B,EAkB8D;AACtD,WAAK,QAAL,GAAgB,QAAhB;AACH;AApBL;AAAA;AAAA,kCAsByB,IAtBzB,EAsBmD;AAC3C,WAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACA,WAAK,eAAL,GAAuB,CAAC,CAAC,IAAzB;AACH;AAzBL;AAAA;AAAA,+BA2BsB,IA3BtB,EA2BkE;AAAA,UAAhB,SAAgB,uEAAJ,IAAI;AAC1D,WAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;;AACA,UAAI,IAAJ,EAAU;AACN,aAAK,YAAL,GAAoB,IAApB;AACH;;AACD,UAAI,SAAJ,EAAe;AACX,aAAK,KAAL;AACH;AACJ;AAnCL;AAAA;AAAA,yCAqC6B;AACrB,UAAI,KAAK,WAAT,EAAsB;AAClB,aAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACA,aAAK,YAAL,GAAoB,KAApB;AACH;;AACD,WAAK,gBAAL,CAAsB,IAAtB;AACH;AA3CL;AAAA;AAAA,2BA6CkB,IA7ClB,EA6C8B;AACtB,UAAI,KAAK,YAAT,EAAuB;AACnB,aAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACA,aAAK,YAAL,GAAoB,KAApB;AACH;;AACD,UAAI,KAAK,IAAT,EAAe;AACX,aAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACH;AACJ;AArDL;AAAA;AAAA,4BAuDgB;AACR,WAAK,eAAL,GAAuB,KAAvB;AACA,WAAK,MAAL,GAAc,KAAd;;AAEA,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,KAAd;AACH;;AAED,UAAI,KAAK,IAAT,EAAe;AACX,aAAK,IAAL,CAAU,KAAV;AACH;AACJ;AAlEL;AAAA;AAAA,oCAoEwB;AAChB,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,aAAd;AACH;AACJ;AAxEL;AAAA;AAAA,8BA0EkB;AACV,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,OAAd;AACH;AACJ;AA9EL;AAAA;AAAA,8BAgFkB;AACV,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,OAAd;AACH;AACJ;AApFL;AAAA;AAAA,qCAsFyB;AACjB,aAAO,KAAK,eAAZ;AACH;AAxFL;AAAA;AAAA,+BA0FsB,MA1FtB,EA0FqC;AAC7B,WAAK,WAAL,GAAmB,MAAnB;AACH;AA5FL;AAAA;AAAA,mCA8FuB;AACf,aAAO,KAAK,WAAZ;AACH;AAhGL;AAAA;AAAA,2BAkGe;AACP,UAAI,CAAC,KAAK,OAAN,IAAiB,CAAC,CAAC,KAAK,IAA5B,EAAkC;AAC9B,aAAK,MAAL,GAAc,IAAd;AACA,aAAK,IAAL,CAAU,IAAV;AACH;AACJ;AAvGL;AAAA;AAAA,wBAyGqB;AACb,aAAO,KAAK,OAAZ;AACH,KA3GL;AAAA,sBA6GsB,IA7GtB,EA6GmC;AAC3B,WAAK,OAAL,GAAe,IAAf;AACA,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,OAAtB;;AACA,UAAI,KAAK,IAAT,EAAe;AACX,aAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACH;AACJ;AAnHL;AAAA;AAAA,wBAqHiC;AACzB,aAAO,KAAK,mBAAZ;AACH,KAvHL;AAAA,sBAyHkC,KAzHlC,EAyHsD;AAC9C,WAAK,mBAAL,GAA2B,KAA3B;;AACA,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,mBAAhC;AACH;AACJ;AA9HL;AAAA;AAAA,wBAgI0B;AAClB,aAAO,KAAK,YAAZ;AACH;AAlIL;;AAAA;AAAA,GDeE;;;;;;;;;;;;;sBCoHD;;;;AAlIa,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,UAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,aAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,QAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,kBAAvC,EAAuC,KAAA,CAAvC,CAAA;;IAJW,U,GAHxB,oBCNsB,GDMtB,EAAU,KAAV,ECN8D;AAAA;;ADOnD,OAAE,GAAF,GCPW,GDOX;AACX,OAAC,KAAD,GCRiD,KDQjD;ACRmE,C;;AAEpE,IAIa,WAAb;AAOI,uBAA6B,SAA7B,EAA8D,EAA9D,EAAsF,IAAtF,EAAkG;AAAA;;AAArE,SAAA,SAAA,GAAA,SAAA;AAAiC,SAAA,EAAA,GAAA,EAAA;AAAwB,SAAA,IAAA,GAAA,IAAA;AAL9E,SAAA,IAAA,GAAqB,EAArB;AAEA,SAAA,UAAA,GAAsB,KAAtB;AACA,SAAA,aAAA,GAAyB,KAAzB;AAGJ,SAAK,SAAL,CAAe,gBAAf,CAAgC,IAAhC;AACH;;AATL;AAAA;AAAA,kCAWsB;AACd,WAAK,SAAL,CAAe,gBAAf,CAAgC,IAAhC;AACH;AAbL;AAAA;AAAA,sCAe0B;AAAA;;AAClB,UAAM,GAAG,GAAG,gBAAgB,CAAC,KAAK,EAAL,CAAQ,aAAT,CAA5B;AACA,UAAM,kBAAkB,GAAG,KAAK,SAAL,CAAe,kBAA1C;AAEA,WAAK,UAAL,GAAkB,CAAC,CAAC,GAAG,CAAC,SAAN,IAAmB,GAAG,CAAC,SAAJ,KAAkB,MAAvD;;AACA,UAAI,kBAAJ,EAAwB;AACpB,aAAK,IAAL,CAAU,GAAV,CACI,YAAA;AACI,UAAA,MAAI,CAAC,YAAL,CAAkB,kBAAlB;AACH,SAHL;AAKH;AACJ;AA3BL;AAAA;AAAA,gCA6B8D,KA7B9D,EA6BwE;AAAA;;AACxE;AACQ,UAAI,CAAC,KAAK,aAAV,EAAyB;AACrB,aAAK,SAAL,CAAe,UAAf,CAA0B,IAA1B;AACA,aAAK,IAAL,CAAU,GAAV,CACI,YAAA;AACI,UAAA,OAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,KAA1B;AACH,SAHL;AAKH,OAPD,MAOO;AACH,aAAK,aAAL,GAAqB,KAArB;AACH;AACJ;AAzCL;AAAA;AAAA,gCA2CuB,GA3CvB,EA2CsC;AAC9B,UAAM,QAAQ,GAAG,KAAK,IAAL,CAAU,SAAV,CAAoB,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,KAAL,KAAe,GAAG,CAAC,KAAvB;AAAA,OAAxB,CAAjB;;AACA,UAAI,QAAQ,IAAI,CAAhB,EAAmB;AACf,aAAK,IAAL,CAAU,QAAV,IAAsB,GAAtB;AACH,OAFD,MAEO;AACH,aAAK,IAAL,CAAU,IAAV,CAAe,GAAf;AACH;AACJ;AAlDL;AAAA;AAAA,kCAoDyB,QApDzB,EAoDyC;AACjC,UAAM,QAAQ,GAAG,KAAK,IAAL,CAAU,SAAV,CAAoB,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,KAAL,KAAe,QAAnB;AAAA,OAAxB,CAAjB;AACA,WAAK,IAAL,CAAU,MAAV,CAAiB,QAAjB,EAA2B,CAA3B;;AACA,UAAI,KAAK,eAAL,IAAwB,QAAQ,KAAK,KAAK,eAAL,CAAqB,KAA9D,EAAqE;AACjE,aAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AA1DL;AAAA;AAAA,iCA4DwB,KA5DxB,EA4D4C;AACpC,UAAM,WAAW,GAAG,KAAK,IAAL,CAAU,IAAV,CAAe,UAAA,GAAG;AAAA,eAAI,GAAG,CAAC,KAAJ,KAAc,KAAlB;AAAA,OAAlB,CAApB;;AAEA,UAAI,KAAK,CAAC,KAAD,CAAL,IAAgB,KAAM,GAAG,CAA7B,EAAgC;AAC5B,YAAI,KAAK,eAAT,EAA0B;AACtB,eAAK,eAAL,CAAqB,GAArB,CAAyB,cAAzB,CAAwC,KAAxC;AACH;;AACD,aAAK,eAAL,GAAuB,SAAvB;AACA,aAAK,SAAL,CAAe,aAAf,CAA6B,IAA7B;AACA;AACH;;AAED,UAAI,CAAC,WAAL,EAAkB;AACd;AACH;;AAED,UAAI,KAAK,eAAT,EAA0B;AACtB,aAAK,eAAL,CAAqB,GAArB,CAAyB,cAAzB,CAAwC,KAAxC;AACH;;AAED,WAAK,eAAL,GAAuB,WAAvB;AACA,WAAK,eAAL,CAAqB,GAArB,CAAyB,cAAzB,CAAwC,IAAxC;AACA,WAAK,SAAL,CAAe,aAAf,CAA6B,KAAK,eAAL,CAAqB,GAArB,CAAyB,WAAzB,EAA7B;;AAEA,UAAI,KAAK,UAAL,IAAmB,KAAK,eAA5B,EAA6C;AACzC,YAAM,MAAM,GAAG,KAAK,cAAL,EAAf;;AAEA,YAAI,CAAC,MAAL,EAAa;AACT;AACH;;AAED,YAAI,MAAM,GAAG,CAAb,EAAgB;AACZ,eAAK,mBAAL,CAAyB,MAAM,GAAG,CAAlC;AACH,SAFD,MAEO;AACH,cAAM,GAAG,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,gBAAzB,EAAZ;;AACA,cAAI,KAAK,cAAL,KAAwB,GAAG,CAAC,qBAAJ,GAA4B,MAAxD,EAAgE;AAC5D,iBAAK,mBAAL,CAAyB,KAAK,uBAAL,CAA6B,GAA7B,CAAzB;;AACA,gBAAI,KAAK,EAAL,CAAQ,aAAR,CAAsB,qBAAtB,GAA8C,MAA9C,GAAuD,KAAK,uBAAL,CAA6B,GAA7B,CAAvD,GAA2F,GAAG,CAAC,qBAAJ,GAA4B,GAA3H,EAAgI;AAC5H,mBAAK,mBAAL,CAAyB,GAAG,CAAC,qBAAJ,GAA4B,GAA5B,IAAmC,KAAK,EAAL,CAAQ,aAAR,CAAsB,qBAAtB,GAA8C,GAA9C,GAAoD,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAL,CAAQ,aAAT,CAAhB,CAAwC,UAAzC,EAA+D,EAA/D,CAA/F,CAAzB;AACH;AACJ;AACJ;AACJ;AACJ;AAvGL;AAAA;AAAA,4BAyGgB;AACR,WAAK,IAAL,GAAY,EAAZ;AACH;AA3GL;AAAA;AAAA,+BA6GsB,IA7GtB,EA6GgD;AACxC,WAAK,SAAL,CAAe,UAAf,CAA0B,IAA1B;AACH;AA/GL;AAAA;AAAA,mCAiHuB;AACf,WAAK,aAAL,GAAqB,IAArB;AACH;AAnHL;AAAA;AAAA,oCAqHwB;AAChB,UAAI,CAAC,CAAC,KAAK,eAAP,IAA0B,CAAC,CAAC,KAAK,eAAL,CAAqB,GAArD,EAA0D;AACtD,aAAK,UAAL,CAAgB,KAAK,eAAL,CAAqB,GAArB,CAAyB,WAAzB,EAAhB;AACH,OAFD,MAEO,IAAI,KAAK,IAAL,CAAU,MAAV,GAAmB,CAAvB,EAA0B;AAC7B,aAAK,UAAL,CAAgB,KAAK,IAAL,CAAU,CAAV,EAAa,GAAb,CAAiB,WAAjB,EAAhB;AACH;AAEJ;AA5HL;AAAA;AAAA,8BA8HkB;AACV,UAAI,YAAY,GAAG,CAAnB;;AAEA,UAAI,KAAK,eAAT,EAA0B;AACtB,QAAA,YAAY,GAAG,KAAK,eAAL,CAAqB,KAArB,GAA6B,CAA5C;AACH;;AAED,WAAK,YAAL,CAAkB,YAAlB;AACH;AAtIL;AAAA;AAAA,8BAwIkB;AACV,UAAI,YAAY,GAAG,CAAC,CAApB;;AAEA,UAAI,KAAK,eAAT,EAA0B;AACtB,QAAA,YAAY,GAAG,KAAK,eAAL,CAAqB,KAArB,GAA6B,CAA5C;AACH;;AAED,WAAK,YAAL,CAAkB,YAAlB;AACH;AAhJL;AAAA;AAAA,wCAkJgC,MAlJhC,EAkJ2C;AACnC,WAAK,EAAL,CAAQ,aAAR,CAAsB,SAAtB,GAAkC,KAAK,EAAL,CAAQ,aAAR,CAAsB,SAAtB,GAAkC,MAApE;AACH;AApJL;AAAA;AAAA,qCAsJ0B;AAClB,UAAI,CAAC,KAAK,eAAV,EAA2B;AACvB;AACH;;AAED,aAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,gBAAzB,GAA4C,qBAA5C,GAAoE,GAApE,IACF,KAAK,EAAL,CAAQ,aAAR,CAAsB,qBAAtB,GAA8C,GAA9C,GACG,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAL,CAAQ,aAAT,CAAhB,CAAwC,UAAzC,EAA+D,EAA/D,CAFT,CAAP;AAGH;AA9JL;AAAA;AAAA,qCAgK0B;AAClB,aAAO,KAAK,EAAL,CAAQ,aAAR,CAAsB,qBAAtB,GAA8C,GAA9C,GACH,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAL,CAAQ,aAAT,CAAhB,CAAwC,SAAzC,EAA8D,EAA9D,CADZ;AAEH;AAnKL;AAAA;AAAA,4CAqKoC,GArKpC,EAqK4C;AACpC,UAAM,GAAG,GAAG,gBAAgB,CAAC,GAAG,CAAC,aAAL,CAA5B;AACA,aAAO,GAAG,CAAC,aAAJ,CAAkB,YAAlB,GACH,QAAQ,CAAC,GAAG,CAAC,SAAL,EAA0B,EAA1B,CADL,GACqC,QAAQ,CAAC,GAAG,CAAC,YAAL,EAA6B,EAA7B,CADpD;AAEH;AAzKL;;AAAA;AAAA,GAJA;;;;;;;;;;;;;;;AA8KC;;;AA7I0C,UAAA,CAAA,CAAtC,YAAY,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd,CAA0B,EAAC,UAAA,CAAA,aAAA,EAAA,QAAA,CAAD,EAClC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADkC,EACa,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CADb,CAAA,EAGnC,WAAA,CAAA,SAHmC,EAGnC,aAHmC,EAGnC,IAHmC,CAAA;;AA7B9B,WAAW,GAAA,UAAA,CAApB,CAHH,OAAA,CAAA,CAAA,EAAS,IAUY,EAVrB,CAGG,EAFA,UAAU,CAAA,mBAAA,EACb,CAQ2C,YAR3C,EAQqE,UARrE,EAQ+F,MAR/F,CADa,CAEV,CAAoB,EAAX,WAAW,CAAX,C,CCTb;;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,OAAO,GAAG,CAAhB;AACA,IAAM,MAAM,GAAG,CAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,EAAf;AACA,IAAM,MAAM,GAAG,GAAf;AACA,IAAM,OAAO,GAAG,GAAhB;;AACA,IAIa,QAAb;AAgBI,oBAA6B,SAA7B,EAA8D,OAA9D,EAAwF,EAAxF,EAAsG;AAAA;;AAAA;;AAAzE,SAAA,SAAA,GAAA,SAAA;AAAiC,SAAA,OAAA,GAAA,OAAA;AAA0B,SAAA,EAAA,GAAA,EAAA;AAfzD,SAAA,aAAA,GAAgB,KAAhB;AACE,SAAA,eAAA,GAAkB,KAAlB;AACE,SAAA,iBAAA,GAAoB,KAApB;AACF,SAAA,eAAA,GAAkB,IAAlB;AACJ,SAAA,WAAA,GAAc,KAAd;AACA,SAAA,WAAA,GAAc,KAAd;AACE,SAAA,aAAA,GAAgB,KAAhB;AACA,SAAA,aAAA,GAAgB,KAAhB;AAEd,SAAA,aAAA,GAAmC,IAAI,YAAJ,EAAnC;AAET,SAAA,UAAA,GAAa,EAAb;AACA,SAAA,WAAA,GAAc,EAAd;AACA,SAAA,SAAA,GAAiC,IAAjC;AAGJ,SAAK,SAAL,CAAe,QAAf,CAAwB,SAAxB,CAAkC,UAAC,IAAD,EAAoB;AAClD,UAAI,CAAC,IAAL,EAAW;AACP;AACH;;AACD,UAAI,OAAI,CAAC,aAAT,EAAwB;AACpB,QAAA,OAAI,CAAC,SAAL,GAAiB,EAAjB;AACH,OAFD,MAEO;AACH,QAAA,OAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,KAAtB;AACH;;AACD,MAAA,OAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,OAAI,CAAC,SAA7B;AACH,KAVD;AAYA,SAAK,SAAL,CAAe,WAAf,CAA2B,SAA3B,CAAqC,UAAC,IAAD,EAAoB;AACrD,UAAI,OAAI,CAAC,eAAT,EAA0B;AACtB,YAAI,IAAJ,EAAU;AACN,UAAA,OAAI,CAAC,WAAL,GAAmB,IAAI,CAAC,KAAxB;;AACA,UAAA,OAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,IAAI,CAAC,KAA7B;AACH,SAHD,MAGO;AACH,UAAA,OAAI,CAAC,WAAL,GAAmB,OAAI,CAAC,SAAxB;;AACA,UAAA,OAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,OAAI,CAAC,SAA7B;AACH;AACJ;AACJ,KAVD;AAYA,SAAK,SAAL,CAAe,gBAAf,CAAgC,SAAhC,CAA0C,YAAA;AACtC,MAAA,OAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,OAAI,CAAC,SAA3B;AACH,KAFD;;AAIA,QAAI,KAAK,OAAL,CAAa,YAAjB,EAA+B;AAC3B,WAAK,OAAL,CAAa,YAAb,CAA0B,SAA1B,CAAoC,UAAC,KAAD,EAAW;AAC3C,YAAI,CAAC,KAAK,CAAC,KAAD,CAAN,IAAiB,OAAI,CAAC,WAAL,KAAqB,KAA1C,EAAiD;AAC7C,cAAI,OAAI,CAAC,SAAL,KAAmB,KAAvB,EAA8B;AAC1B,YAAA,OAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,KAAtB;AACH;;AACD,UAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;AACH;AACJ,OAPD;AAQH;AACJ;;AAvDL;AAAA;AAAA,iCA0DwB,KA1DxB,EA0DkC;AAC1B,UAAI,KAAK,CAAC,OAAN,KAAkB,MAAlB,IAA4B,KAAK,CAAC,OAAN,KAAkB,MAA9C,IAAwD,KAAK,CAAC,OAAN,KAAkB,OAA9E,EAAuF;AAC/F;AACY;AACH;;AAED,UAAI,KAAK,CAAC,OAAN,KAAkB,MAAlB,IAA4B,KAAK,CAAC,OAAN,KAAkB,MAAlD,EAA0D;AACtD,QAAA,KAAK,CAAC,cAAN;AACH,OAFD,MAEO,IAAI,KAAK,CAAC,OAAN,KAAkB,MAAtB,EAA8B;AACjC,QAAA,KAAK,CAAC,cAAN;AACA,aAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,SAA3B;AACH,OAHM,MAGA,IAAI,KAAK,CAAC,OAAN,KAAkB,MAAtB,EAA8B;AACjC,YAAI,KAAK,SAAL,CAAe,MAAnB,EAA2B;AACvB,eAAK,kBAAL;AACA,eAAK,SAAL,CAAe,KAAf;AACA,UAAA,KAAK,CAAC,eAAN;AACA,UAAA,KAAK,CAAC,cAAN;AACH;AACJ;AACJ;AA7EL;AAAA;AAAA,iCAgFwB,KAhFxB,EAgFkC;AAC1B,WAAK,SAAL,CAAe,IAAf;AACH;AAlFL;AAAA;AAAA,mCAqF0B,KArF1B,EAqFoC;AAC5B,UAAM,OAAO,GAAG,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,KAAvC;;AACA,UAAI,OAAO,KAAK,MAAhB,EAAwB;AACpB,YAAI,KAAK,SAAL,CAAe,cAAf,EAAJ,EAAqC;AACjC,UAAA,KAAK,CAAC,cAAN;AACH;;AACD,aAAK,eAAL;AACH,OALD,MAKO,IAAI,OAAO,KAAK,MAAhB,EAAwB;AAC3B,QAAA,KAAK,CAAC,cAAN;AACA,aAAK,SAAL,CAAe,IAAf;AACA,aAAK,SAAL,CAAe,OAAf;AACH,OAJM,MAIA,IAAI,OAAO,KAAK,MAAhB,EAAwB;AAC3B,QAAA,KAAK,CAAC,cAAN;AACA,aAAK,SAAL,CAAe,OAAf;AACH,OAHM,MAGA,IAAI,OAAO,KAAK,OAAhB,EAAyB;AAC5B,aAAK,eAAL;AACH,OAFM,MAEA,IAAI,OAAO,KAAK,MAAhB,EAAwB;AAC3B,aAAK,SAAL,CAAe,IAAf;AACH,OAFM,MAEA,IAAI,OAAO,KAAK,MAAhB,EAAwB;AACvC;AACA;AACY,QAAA,KAAK,CAAC,cAAN;;AACA,YAAI,KAAK,SAAL,CAAe,MAAnB,EAA2B;AACvB,UAAA,KAAK,CAAC,eAAN;AACH;AACJ,OAPM,MAOA;AACH,YAAI,OAAO,KAAK,CAAZ,IAAiB,OAAO,KAAK,MAA7B,IAAuC,OAAO,KAAK,MAAnD,KACC,OAAO,IAAI,MAAX,IAAqB,OAAO,IAAI,OADjC,KAEA,CAAC,KAAK,CAAC,OAFP,IAEkB,CAAC,KAAK,CAAC,OAFzB,IAEoC,CAAC,KAAK,CAAC,MAF/C,EAGE;AACE,eAAK,SAAL,CAAe,IAAf;AACH;AACJ;AACJ;AAtHL;AAAA;AAAA,2BAyHkB,KAzHlB,EAyH4B;AAAA;;AAC5B;AACQ,UAAI,KAAK,SAAL,CAAe,YAAf,EAAJ,EAAmC;AAC/B,QAAA,UAAU,CACN,YAAA;AAChB;AACoB,UAAA,OAAI,CAAC,EAAL,CAAQ,aAAR,CAAsB,KAAtB;AACH,SAJK,EAKN,CALM,CAAV;AAOA;AACH;;AAED,UAAI,KAAK,SAAL,CAAe,MAAnB,EAA2B;AACvB,aAAK,SAAL,GAAiB,KAAK,CAAC,GAAD,CAAL,CAAW,IAAX,CAAgB,IAAI,CAAC,CAAD,CAApB,EAAyB,SAAzB,CAAmC;AAAA,iBAAM,OAAI,CAAC,MAAL,EAAN;AAAA,SAAnC,CAAjB;AACH;AACJ;AAzIL;AAAA;AAAA,8BA4IkB;AACV,UAAI,KAAK,SAAT,EAAoB;AAChB,aAAK,SAAL,CAAe,WAAf;AACA,aAAK,SAAL,GAAiB,IAAjB;AACH;;AAED,UAAI,KAAK,aAAT,EAAwB;AACpB,aAAK,EAAL,CAAQ,aAAR,CAAsB,MAAtB;AACH;;AAED,UAAI,KAAK,WAAT,EAAsB;AAClB,aAAK,SAAL,CAAe,IAAf;AACH;AACJ;AAzJL;AAAA;AAAA,4BA4JmB,KA5JnB,EA4J6B;AACrB,UAAI,KAAK,aAAT,EAAwB;AACpB,aAAK,EAAL,CAAQ,aAAR,CAAsB,MAAtB;AACH;;AAED,UAAI,KAAK,WAAT,EAAsB;AAClB,YAAI,KAAK,SAAL,CAAe,MAAnB,EAA2B;AACvB,eAAK,SAAL,CAAe,KAAf;AACH,SAFD,MAEO;AACH,eAAK,SAAL,CAAe,IAAf;AACH;AACJ;AACJ;AAxKL;AAAA;AAAA,sCAmL2B;AACnB,UAAI,KAAK,SAAL,CAAe,cAAf,EAAJ,EAAqC;AACjC,aAAK,UAAL,GAAkB,EAAlB;AACA,aAAK,SAAL,CAAe,aAAf;AACH,OAHD,MAGO,IAAI,KAAK,iBAAT,EAA4B;AAC/B,aAAK,SAAL,CAAe,UAAf,CAA0B;AAAE,UAAA,KAAK,EAAE,KAAK,SAAd;AAAyB,UAAA,cAAc,EAAE;AAAzC,SAA1B;AACH,OAFM,MAEA;AACH,YAAI,KAAK,eAAL,IAAwB,CAAC,KAAK,SAAL,CAAe,WAA5C,EAAyD;AACrD,eAAK,SAAL,GAAiB,EAAjB;AACA,eAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,SAA7B;AACH;;AACD,aAAK,SAAL,CAAe,KAAf;AACH;AACJ;AAhML;AAAA;AAAA,yCAkM8B;AACtB,UAAI,KAAK,eAAT,EAA0B;AACtB,YAAI,KAAK,WAAL,KAAqB,KAAK,SAA9B,EAAyC;AACrC,eAAK,WAAL,GAAmB,KAAK,SAAxB;AACA,eAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,SAA7B;AACH;AACJ;AACJ;AAzML;AAAA;AAAA,6BA2MkB;AACV,UAAI,KAAK,SAAT,EAAoB;AAChB,aAAK,SAAL,CAAe,WAAf;AACA,aAAK,SAAL,GAAiB,IAAjB;AACH;;AAED,UAAI,KAAK,iBAAT,EAA4B;AACxB,aAAK,SAAL,CAAe,UAAf,CAA0B;AAAE,UAAA,KAAK,EAAE,KAAK,SAAd;AAAyB,UAAA,cAAc,EAAE;AAAzC,SAA1B;AACH,OAFD,MAEO;AACH,YAAI,KAAK,eAAL,IAAwB,CAAC,KAAK,SAAL,CAAe,WAA5C,EAAyD;AACrD,eAAK,SAAL,GAAiB,EAAjB;AACA,eAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,SAA7B;AACH,SAHD,MAGO;AACH,eAAK,kBAAL;AACH;AACJ;;AAED,WAAK,SAAL,CAAe,KAAf;AACH;AA7NL;AAAA;AAAA,wBA0KwB;AAChB,aAAO,KAAK,UAAZ;AACH,KA5KL;AAAA,sBA8KyB,IA9KzB,EA8KqC;AAC7B,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,WAAL,GAAmB,IAAnB;AACH;AAjLL;;AAAA;AAAA,GAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAkOC;;;;AA7N2B,UAAA,CAAA,CAAvB,KAAK,CAAC,eAAD,CAAkB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACnB,QAAA,CAAA,SADmB,EACnB,eADmB,EACnB,KADgD,CAA7B,CAAA;;AACE,UAAA,CAAA,CAAzB,KAAK,CAAC,iBAAD,CAAoB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACvB,QAAA,CAAA,SADuB,EACvB,iBADuB,EACvB,KADsD,CAA/B,CAAA;;AACE,UAAA,CAAA,CAA3B,KAAK,CAAC,mBAAD,CAAsB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAC3B,QAAA,CAAA,SAD2B,EAC3B,mBAD2B,EAC3B,KAD4D,CAAjC,CAAA;;AACF,UAAA,CAAA,CAAzB,KAAK,CAAC,iBAAD,CAAoB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACtB,QAAA,CAAA,SADsB,EACtB,iBADsB,EACtB,KADoD,CAA9B,CAAA;;AACJ,UAAA,CAAA,CAArB,KAAK,CAAC,aAAD,CAAgB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACf,QAAA,CAAA,SADe,EACf,aADe,EACf,KAD0C,CAA3B,CAAA;;AACA,UAAA,CAAA,CAArB,KAAK,CAAC,aAAD,CAAgB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACf,QAAA,CAAA,SADe,EACf,aADe,EACf,KAD0C,CAA3B,CAAA;;AACE,UAAA,CAAA,CAAvB,KAAK,CAAC,eAAD,CAAkB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACnB,QAAA,CAAA,SADmB,EACnB,eADmB,EACnB,KADgD,CAA7B,CAAA;;AACA,UAAA,CAAA,CAAvB,KAAK,CAAC,eAAD,CAAkB,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEpB,QAAA,CAAA,SAFoB,EAEpB,eAFoB,EAEpB,KAFiD,CAA7B,CAAA;;AAEd,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAqB,YAArB,CAAD,CAAA,EAAoC,QAAA,CAAA,SAApC,EAAoC,eAApC,EAAoC,KAAA,CAApC,CAAA;;AAgDV,UAAA,CAAA,CADC,YAAY,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADA,EAC+C,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAD/C,CAAA,EAC2F,QAAA,CAAA,SAD3F,EAC2F,cAD3F,EAC2F,IAD3F,CAAA;;AAsBA,UAAA,CAAA,CADC,YAAY,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADA,EAIS,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAJT,CAAA,EAKY,QAAA,CAAA,SALZ,EAKY,cALZ,EAEC,IAFD,CAAA;;AAKA,UAAA,CAAA,CADC,YAAY,CAAC,SAAD,EAAY,CAAC,QAAD,CAAZ,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACF,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADE,EAC6C,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAD7C,CAAA,EAGC,QAAA,CAAA,SAHD,EAGC,gBAHD,EAGC,IAHD,CAAA;;AAoCA,UAAA,CAAA,CADC,YAAY,CAAC,MAAD,EAAS,CAAC,QAAD,CAAT,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACM,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADN,EAEG,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAFH,CAAA,EAGE,QAAA,CAAA,SAHF,EAGE,QAHF,EAGE,IAHF,CAAA;;AAmBA,UAAA,CAAA,CADC,YAAY,CAAC,OAAD,EAAU,EAAV,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACe,UAAA,CAAA,mBAAA,EAAA,EAAA,CADf,EAE0B,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAF1B,CAAA,EAG4B,QAAA,CAAA,SAH5B,EAG4B,SAH5B,EAG4B,IAH5B,CAAA;;AAgBA,UAAA,CAAA,CADC,YAAY,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV,CACb,EAAH,UAAA,CAAA,aAAA,EAAA,QAAA,CAAG,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADL,EAEkB,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAFlB,CAAA,EAKO,QAAA,CAAA,SALP,EAKO,SALP,EAKO,IALP,CAAA;;AA5JS,QAAQ,GAAA,UAAA,CAAjB,CAHH,OAAA,CAAA,CAAA,EAAS,IAmBY,EAnBrB,CAGG,EAFA,UAAU,CAAA,mBAAA,EACZ,CAiB0C,YAjB1C,EAiByE,OAjBzE,EAiB8F,UAjB9F,CADY,CAEV,CAAiB,EAAR,QAAQ,CAAR;;ICTA,c,GACX,wBACS,OADT,EAES,SAFT,EAGS,iBAHT,EAIS,MAJT,EAIwB;AAAA;;AAHf,OAAA,OAAA,GAAA,OAAA;AACA,OAAA,SAAA,GAAA,SAAA;AACA,OAAA,iBAAA,GAAA,iBAAA;AACA,OAAA,MAAA,GAAA,MAAA;AACL,C;;AAEN,IAIa,OAAb;AAiBE,mBACkB,SADlB,EAEU,WAFV,EAGU,aAHV,EAIU,EAJV,EAKU,IALV,EAKsB;AAAA;;AAJJ,SAAA,SAAA,GAAA,SAAA;AACR,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,EAAA,GAAA,EAAA;AACA,SAAA,IAAA,GAAA,IAAA;AArBM,SAAA,sBAAA,GAAyB,iBAAzB;AACA,SAAA,YAAA,GAAe,KAAf;AACA,SAAA,gBAAA,GAAmB,KAAnB;AACA,SAAA,oBAAA,GAAuB,KAAvB;AACA,SAAA,uBAAA,GAA0B,IAA1B;AAER,SAAA,YAAA,GAAqC,IAArC,CAec,CAdxB;;AACU,SAAA,IAAA,GAAsB,IAAtB,CAac,CAZxB;;AACU,SAAA,WAAA,GAAmC,IAAnC;AACA,SAAA,UAAA,GAAkC,IAAlC;AACA,SAAA,GAAA,GAAM,IAAI,cAAJ,CAAmB,EAAnB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,CAAN;AACA,SAAA,aAAA,GAAqB,IAArB;AACA,SAAA,OAAA,GAAkD,IAAlD;AAQJ;;AAvBN;AAAA;AAAA,+BAyBiB;AACb,WAAK,SAAL,CAAe,YAAf,CAA4B,IAA5B;AACA,WAAK,OAAL,GAAe,KAAK,aAAL,CAAmB,kBAAnB,CACb,KAAK,WADQ,EAEb,IAAI,cAAJ,CAAmB,EAAnB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,CAFa,CAAf;AAID;AA/BH;AAAA;AAAA,2BAyDgB,IAzDhB,EAyD4B;AAAA;;AACxB,UACE,CAAC,KAAK,CAAC,IAAD,CAAN,IACA,IAAI,CAAC,MAAL,IAAe,KAAK,sBADpB,IAEA,KAAK,IAAL,KAAc,IAHhB,EAIE;AACA,YAAI,KAAK,WAAT,EAAsB;AACpB,eAAK,WAAL,CAAiB,WAAjB;AACA,eAAK,WAAL,GAAmB,IAAnB;AACD;;AACD,YAAI,CAAC,KAAK,GAAL,CAAS,SAAd,EAAyB;AACvB,cAAI,KAAK,uBAAT,EAAkC;AAChC,iBAAK,GAAL,CAAS,OAAT,GAAmB,EAAnB;AACD;;AACD,eAAK,GAAL,CAAS,SAAT,GAAqB,IAArB;AACA,eAAK,GAAL,CAAS,iBAAT,GAA6B,IAA7B;AACA,eAAK,eAAL;AACD;;AACD,YAAI,KAAK,UAAT,EAAqB;AACnB,eAAK,UAAL,CAAgB,WAAhB;AACD;;AACD,aAAK,WAAL,GAAmB,KAAK,CAAC,KAAK,YAAN,CAAL,CAChB,IADgB,CACX,IAAI,CAAC,CAAD,CADO,EAEhB,SAFgB,CAEN,YAAA;AACT,UAAA,OAAI,CAAC,mBAAL,CAAyB,IAAzB;AACD,SAJgB,CAAnB;AAKD,OAzBD,MAyBO,IAAI,CAAC,KAAK,CAAC,IAAD,CAAN,IAAgB,IAAI,CAAC,MAAL,GAAc,KAAK,sBAAvC,EAA+D;AACpE,aAAK,KAAL;AACA,aAAK,IAAL,GAAY,EAAZ;AACD;AACF;AAvFH;AAAA;AAAA,4BAyFc;AAAA;;AACV,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,WAAL,CAAiB,WAAjB;AACD;;AACD,WAAK,UAAL,GAAkB,KAAK,CAAC,aAAD,CAAL,CACf,IADe,CACV,IAAI,CAAC,CAAD,CADM,EAEf,SAFe,CAEL,YAAA;AACT,QAAA,OAAI,CAAC,MAAL;AACD,OAJe,CAAlB;AAKD;AAlGH;AAAA;AAAA,2BAoGa;AACT,UAAI,CAAC,KAAK,GAAL,CAAS,iBAAd,EAAiC;AAC/B,aAAK,MAAL,CAAY,EAAZ;AACD;;AACD,WAAK,eAAL;AACD;AAzGH;AAAA;AAAA,2BA2GgB,IA3GhB,EA2G6B;AACzB,WAAK,GAAL,CAAS,MAAT,GAAkB,IAAlB;AACD;AA7GH;AAAA;AAAA,6BA+GgB;AACZ,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,WAAL,CAAiB,WAAjB;AACA,aAAK,WAAL,GAAmB,IAAnB;AACD;;AACD,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,WAAL,CAAiB,MAAjB;AACD;;AAED,WAAK,aAAL,CAAmB,KAAnB;AACA,WAAK,OAAL,GAAe,IAAf;AACD;AA1HH;AAAA;AAAA,wCA4H8B,IA5H9B,EA4H0C;AAC1C;AACI,UAAI,KAAK,CAAC,IAAD,CAAL,IAAe,IAAI,CAAC,MAAL,GAAc,KAAK,sBAAtC,EAA8D;AAC5D,aAAK,GAAL,CAAS,SAAT,GAAqB,KAArB;AACA;AACD;;AACD,WAAK,IAAL,GAAY,IAAZ;;AAEA,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,YAAL,CAAkB,MAAlB,CAAyB,IAAzB;AACD;AACF;AAvIH;AAAA;AAAA,sCAyIyB;AACzB;AACI,UAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,aAAK,OAAL,GAAe,KAAK,aAAL,CAAmB,kBAAnB,CACb,KAAK,WADQ,EAEb,KAAK,GAFQ,CAAf;AAID,OALD,MAKO,IAAI,CAAC,KAAK,OAAL,CAAa,SAAlB,EAA6B;AACxC;AACM,aAAK,OAAL,CAAc,OAAd,CAAsB,MAAtB,GAA+B,KAAK,GAAL,CAAS,MAAxC;AACA,aAAK,OAAL,CAAc,OAAd,CAAsB,OAAtB,GAAgC,KAAK,GAAL,CAAS,OAAzC;AACA,aAAK,OAAL,CAAc,OAAd,CAAsB,SAAtB,GAAkC,KAAK,GAAL,CAAS,SAA3C;AACA,aAAK,OAAL,CAAc,OAAd,CAAsB,iBAAtB,GAA0C,KAAK,GAAL,CAAS,iBAAnD;AACA,aAAK,OAAL,CAAa,aAAb;AACD;;AACD,WAAK,EAAL,CAAQ,YAAR;AACD;AAzJH;AAAA;AAAA,wCA2J2B;AAAA;;AACvB,UAAI,CAAC,KAAK,GAAL,CAAS,OAAV,IAAqB,CAAC,KAAK,IAA/B,EAAqC;AACnC,eAAO,IAAP;AACD,OAHsB,CAI3B;;;AAEI,UAAI,SAAS,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,SAAjB,CACd,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,KAAL,CAAW,WAAX,OAA6B,OAAI,CAAC,IAAL,CAAW,iBAAX,EAAvC;AAAA,OADc,CAAhB,CANuB,CAS3B;;AACI,UAAI,SAAS,GAAG,CAAhB,EAAmB;AACjB,QAAA,SAAS,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,SAAjB,CAA2B,UAAC,IAAD;AAAA,iBACrC,IAAI,CAAC,KAAL,CAAW,WAAX,GAAyB,UAAzB,CAAoC,OAAI,CAAC,IAAL,CAAW,iBAAX,EAApC,CADqC;AAAA,SAA3B,CAAZ;AAGD,OAdsB,CAe3B;;;AACI,UAAI,SAAS,GAAG,CAAhB,EAAmB;AACjB,QAAA,SAAS,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,SAAjB,CAA2B,UAAC,IAAD;AAAA,iBACrC,IAAI,CAAC,KAAL,CAAW,WAAX,GAAyB,QAAzB,CAAkC,OAAI,CAAC,IAAL,CAAW,iBAAX,EAAlC,CADqC;AAAA,SAA3B,CAAZ;AAGD;;AAED,aAAO,SAAS,GAAG,CAAZ,GAAgB,IAAhB,GAAuB,SAA9B;AACD;AAlLH;AAAA;AAAA,2CAoL8B;AAAA;;AAC1B,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,YAAL,CAAkB,SAAlB,CACE,UAAC,OAAD,EAAQ;AACN,UAAA,OAAI,CAAC,GAAL,CAAS,iBAAT,GAA6B,IAA7B;AACA,UAAA,OAAI,CAAC,GAAL,CAAS,SAAT,GAAqB,KAArB;AACA,UAAA,OAAI,CAAC,GAAL,CAAS,OAAT,GAAmB,OAAnB;;AAEA,cACE,OAAI,CAAC,gBAAL,IACA,OADA,IAEA,OAAO,CAAC,MAAR,KAAmB,CAFnB,IAGA,OAAO,CAAC,CAAD,CAAP,CAAW,KAHX,IAIA,CAAC,KAAK,CAAC,OAAI,CAAC,IAAN,CAJN,IAKA,OAAO,CAAC,CAAD,CAAP,CAAW,KAAX,CAAiB,iBAAjB,OACE,OAAI,CAAC,IAAL,CAAW,iBAAX,EAPJ,EAQE;AACZ;AACY,YAAA,OAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,OAAO,CAAC,CAAD,CAAjC;;AACA;AACD;;AAED,UAAA,OAAI,CAAC,eAAL;;AAEA,cAAI,OAAI,CAAC,oBAAT,EAA+B;AAC7B,YAAA,OAAI,CAAC,SAAL,CAAe,kBAAf,GAAoC,OAAI,CAAC,iBAAL,EAApC;AACD;AACF,SAzBH,EA0BE,UAAC,KAAD,EAAW;AACnB;AACU,UAAA,OAAO,CAAC,KAAR,CAAc,KAAd,EAFS,CAGnB;;AACU,UAAA,OAAO,CAAC,KAAR,CACE,yFADF;AAGA,iBAAO,EAAP;AACD,SAlCH;;AAqCA,YAAI,KAAK,YAAL,CAAkB,gBAAtB,EAAwC;AACtC,eAAK,YAAL,CAAkB,gBAAlB,CAAmC,SAAnC,CAA6C,YAAA;AAC3C,YAAA,OAAI,CAAC,IAAL,GAAY,IAAZ;AACA,YAAA,OAAI,CAAC,GAAL,CAAS,iBAAT,GAA6B,KAA7B;AACA,YAAA,OAAI,CAAC,GAAL,CAAS,SAAT,GAAqB,KAArB;AACA,YAAA,OAAI,CAAC,GAAL,CAAS,OAAT,GAAmB,EAAnB;;AACA,YAAA,OAAI,CAAC,eAAL;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,kBAAf;AACD,WAPD;AAQD;AACF;AACF;AAtOH;AAAA;AAAA,sBAkCyB,UAlCzB,EAkCkD;AAC9C,WAAK,YAAL,GAAoB,UAApB;AACA,WAAK,oBAAL;AACD;AArCH;AAAA;AAAA,sBAwC0B,KAxC1B,EAwCoC;AAAA;;AAChC,UACE,KAAK,YAAL,IACA,OAAO,KAAK,YAAL,CAAkB,aAAzB,KAA2C,UAF7C,EAGE;AACA,aAAK,IAAL,CAAU,GAAV,CAAc,YAAA;AACZ,cAAM,WAAW,GACf,OAAI,CAAC,YAAL,IAAqB,OAAI,CAAC,YAAL,CAAkB,aAAlB,CAAiC,KAAjC,CADvB;;AAEA,cAAI,WAAJ,EAAiB;AACf,YAAA,OAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,WAA1B,EAAuC,KAAvC;AACD;AACF,SAND;AAOD,OAXD,MAWO,IAAI,CAAC,KAAK,YAAV,EAAwB;AAC7B,aAAK,aAAL,GAAqB,KAArB;AACD;AACF;AAvDH;;AAAA;AAAA,GAJA;;;;;;;;;;;;;;;;0CA2OC,c;;;;AAtOU,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,OAAA,CAAA,SAAvC,EAAuC,wBAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACD,OAAA,CAAA,SADC,EACD,cADC,EACD,KAD6B,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACL,OAAA,CAAA,SADK,EACL,kBADK,EACL,KADqC,CAAhC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACT,OAAA,CAAA,SADS,EACT,sBADS,EACT,KAD6C,CAApC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACX,OAAA,CAAA,SADW,EACX,yBADW,EACX,KADiD,CAAtC,CAAA;;AA6BT,UAAA,CAAA,CADC,KAAK,CAAC,SAAD,CACN,EAAD,UAAA,CAAA,aAAA,EAAA,MAAA,CAAC,EAAsC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAAtC,CAAA,EAC8B,OAAA,CAAA,SAD9B,EAC8B,aAD9B,EAC8B,IAD9B,CAAA;;AAMA,UAAA,CAAA,CADC,KAAK,CAAC,qBAAD,CACN,EAAD,UAAA,CAAA,aAAA,EAAA,MAAA,CAAC,EACF,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADE,CAAA,EAGQ,OAAA,CAAA,SAHR,EAGQ,cAHR,EAGQ,IAHR,CAAA;;AAxCW,OAAO,GAAA,UAAA,CAAhB,CAHH,OAAA,CAAA,CAAA,EAAS,IAqBD,EArBR,CAGG,EAFF,UAAU,CAAA,mBAAA,EACV,CAmB6B,YAnB7B,EAoBuB,WApBvB,EAqByB,gBArBzB,EAsBc,iBAtBd,EAuBgB,MAvBhB,CADU,CAER,CAAgB,EAAP,OAAO,CAAP;;AAwOX,IC9PW,MAAb;AAMI,kBAAoB,EAApB,EAA4C,QAA5C,EAAiF,QAAjF,EAAsG;AAAA;;AAAlF,SAAA,EAAA,GAAA,EAAA;AAAwB,SAAA,QAAA,GAAA,QAAA;AAAqC,SAAA,QAAA,GAAA,QAAA;AAJzE,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,SAAA,GAAoB,CAApB;AACA,SAAA,KAAA,GAA8B,IAA9B;AAEmG;;AAN/G;AAAA;AAAA,kCAQsB;AACd,UAAI,KAAK,SAAT,EAAoB;AAChB,aAAK,QAAL,CAAc,aAAd,CAA4B,KAAK,SAAjC;AACH;AACJ;AAZL;AAAA;AAAA,4BAyBsD,KAzBtD,EAyBgE;AACxD,WAAK,QAAL,CAAc,UAAd,CAAyB,KAAK,KAA9B;AACH;AA3BL;AAAA;AAAA,iCA6BgE,KA7BhE,EA6B0E;AAClE,WAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,SAAhC;AACH;AA/BL;AAAA;AAAA,gCAiC8D,KAjC9D,EAiCwE;AAChE,WAAK,QAAL,CAAc,YAAd;AACH;AAnCL;AAAA;AAAA,mCAqC0B,QArC1B,EAqC2C;AACnC,WAAK,QAAL,GAAgB,QAAhB;;AACA,UAAI,KAAK,QAAT,EAAmB;AACjB,aAAK,QAAL,CAAc,QAAd,CAAuB,KAAK,EAAL,CAAQ,aAA/B,EAA8C,wBAA9C;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,EAAL,CAAQ,aAAlC,EAAiD,wBAAjD;AACD;AACJ;AA5CL;AAAA;AAAA,uCA8C2B;AACnB,aAAO,KAAK,EAAL,CAAQ,aAAf;AACH;AAhDL;AAAA;AAAA,kCAkDsB;AACd,aAAO,KAAK,KAAZ;AACH;AApDL;AAAA;AAAA,sBAee,KAff,EAe4B;AACpB,WAAK,SAAL,GAAiB,KAAjB;AACA,WAAK,QAAL,CAAc,WAAd,CAA0B,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,SAA1B,CAA1B;AACH;AAlBL;AAAA;AAAA,sBAqBiB,IArBjB,EAqBoC;AAC5B,WAAK,KAAL,GAAa,IAAb;AACH;AAvBL;;AAAA;AAAA,GD8PE;;;;;;;;;;;;;;;;;;;;;;cCzMD;;;;AAtCG,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,EACI,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADJ,CAAA,EAEkB,MAAA,CAAA,SAFlB,EAEkB,QAFlB,EAEkB,IAFlB,CAAA;;AAMA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,EACJ,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADI,CAAA,EAIQ,MAAA,CAAA,SAJR,EAIQ,UAJR,EAEC,IAFD,CAAA;;AAImC,UAAA,CAAA,CAAlC,YAAY,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV,CAAsB,EAAC,UAAA,CAAA,aAAA,EAAA,QAAA,CAAD,EAC1B,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAD0B,EAIhC,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAJgC,CAAA,EAIY,MAAA,CAAA,SAJZ,EAIY,SAJZ,EAElC,IAFkC,CAAA;;AAIK,UAAA,CAAA,CAAvC,YAAY,CAAC,YAAD,EAAe,CAAC,QAAD,CAAf,CAA2B,EAAC,UAAA,CAAA,aAAA,EAAA,QAAA,CAAD,EACpC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADoC,EAEzC,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAFyC,CAAA,EAIJ,MAAA,CAAA,SAJI,EAIJ,cAJI,EAEvC,IAFuC,CAAA;;AAID,UAAA,CAAA,CAAtC,YAAY,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd,CAA0B,EAAC,UAAA,CAAA,aAAA,EAAA,QAAA,CAAD,EAClC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADkC,EAIhC,UAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,CAJgC,CAAA,EAKnC,MAAA,CAAA,SALmC,EAKnC,aALmC,EAEtC,IAFsC,CAAA;;AAjC9B,MAAM,GAAA,UAAA,CAAf,CAHH,OAAA,CAAA,CAAA,EAAS,IASgE,EATzE,CAGG,EAFA,UAAU,CAAA,mBAAA,EACZ,CAO0B,UAP1B,EAOwD,SAPxD,EAO6F,WAP7F,CADY,CAEV,CAAe,EAAN,MAAM,CAAN;;AAsDX,IChDW,oBAAb;AAAA,kCAAA;AAAA;;AAEW,SAAA,IAAA,GAAe,EAAf;AAEA,SAAA,SAAA,GAAoB,EAApB;AAEA,SAAA,UAAA,GAAqB,EAArB;AAEA,SAAA,IAAA,GAAe,EAAf;AAEA,SAAA,KAAA,GAAqB,EAArB;AA0BV;;AApCD;AAAA;AAAA,+BAWmB;AACX,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB,aAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,UAAA,OAAO,EAAE,KAAX;AAAkB,UAAA,IAAI,EAAE,KAAK;AAA7B,SAAhB;AACA;AACH;;AACD,UAAM,QAAQ,GAAG,KAAK,IAAL,CAAU,WAAV,EAAjB;AACA,UAAI,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,KAAK,SAAL,CAAe,WAAf,EAAjB,CAAf;AACA,UAAI,UAAU,GAAG,CAAjB;;AACA,aAAO,QAAQ,IAAI,CAAnB,EAAsB;AAClB,YAAM,SAAS,GAAG,KAAK,IAAL,CAAU,KAAV,CAAgB,QAAhB,EAA0B,QAAQ,GAAG,KAAK,SAAL,CAAe,MAApD,CAAlB;;AACA,YAAI,QAAQ,KAAK,CAAjB,EAAoB;AAChB,eAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,YAAA,OAAO,EAAE,IAAX;AAAiB,YAAA,IAAI,EAAE;AAAvB,WAAhB;AACA,UAAA,UAAU,IAAI,KAAK,SAAL,CAAe,MAA7B;AACH,SAHD,MAGO,IAAI,QAAQ,GAAG,CAAf,EAAkB;AACrB,cAAM,SAAS,GAAG,KAAK,IAAL,CAAU,KAAV,CAAgB,UAAhB,EAA4B,QAA5B,CAAlB;AACA,eAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,YAAA,OAAO,EAAE,KAAX;AAAkB,YAAA,IAAI,EAAE;AAAxB,WAAhB;AACA,eAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,YAAA,OAAO,EAAE,IAAX;AAAiB,YAAA,IAAI,EAAE;AAAvB,WAAhB;AACA,UAAA,UAAU,IAAI,KAAK,SAAL,CAAe,MAAf,GAAwB,SAAS,CAAC,MAAhD;AACH;;AACD,QAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,KAAK,SAAL,CAAe,WAAf,EAAjB,EAA+C,UAA/C,CAAX;AACH;;AACD,UAAI,UAAU,GAAG,KAAK,IAAL,CAAU,MAA3B,EAAmC;AAC/B,aAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,UAAA,OAAO,EAAE,KAAX;AAAkB,UAAA,IAAI,EAAE,KAAK,IAAL,CAAU,KAAV,CAAgB,UAAhB,EAA4B,KAAK,IAAL,CAAU,MAAtC;AAAxB,SAAhB;AACH;AACJ;AAnCL;;AAAA;AAAA,GDgDE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBCZD;;;AAlCG,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,CAAA,EACK,oBAAA,CAAA,SADL,EACK,MADL,EACK,KADoB,CAAzB,CAAA;;AAEA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,CAAA,EACA,oBAAA,CAAA,SADA,EACA,WADA,EACA,KAD8B,CAA9B,CAAA;;AAEA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,CAAA,EACD,oBAAA,CAAA,SADC,EACD,YADC,EACD,KADgC,CAA/B,CAAA;;AAEA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,CAAA,EAEI,oBAAA,CAAA,SAFJ,EAEI,MAFJ,EAEI,KAFqB,CAAzB,CAAA;;ACXJ,IAAM,IAAI,GAAG,SAAP,IAAO,GDGoB;ACF7B;AACH,CAFD;;ADHC,IAAS,gCCO4B,GAAG;AACrC,EAAA,KAAK,EAAE,IAD8B;AAErC,EAAA,ODPQ,EAAE,iBCK2B;AAGrC,EAAA,WAAW,EAAE,UAAU,CAAC;AAAA,WAAM,YAAN;AAAA,GAAD;AAHc,CDPxC;;ACYD,IA2Ga,YAAb;AAiDI,wBAAoB,gBAApB,EAAgE,GAAhE,EAAsF;AAAA;;AAAlE,SAAA,gBAAA,GAAA,gBAAA;AAA4C,SAAA,GAAA,GAAA,GAAA;AA/ChD,SAAA,SAAA,GAAY,EAAZ;AACA,SAAA,OAAA,GAAkB,EAAlB;ADtHR,SAAA,KAAA,GAEC,KAFD;ACwHQ,SDtHa,eCsHb,GAAkB,iBAAlB;AACA,SAAA,QAAA,GAAW,SAAX;AACA,SAAA,iBAAA,GAAoB,KAApB;AACA,SAAA,aAAA,GAAgB,KAAhB;AACA,SAAA,eAAA,GAAkB,KAAlB;AACA,SAAA,eAAA,GAAkB,IAAlB;AACA,SAAA,WAAA,GAAc,EAAd;AAGA,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,YAAA,GAAe,KAAf;AAEA,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,WAAA,GAAc,KAAd;AACA,SAAA,WAAA,GAAc,KAAd;AACA,SAAA,aAAA,GAAgB,KAAhB;AACA,SAAA,aAAA,GAAgB,KAAhB;AAEA,SAAA,aAAA,GAAgB,KAAhB;AAEC,SAAA,QAAA,GAAW,IAAI,YAAJ,EAAX;AACA,SAAA,WAAA,GAAc,IAAI,YAAJ,EAAd;AACM,SAAA,SAAA,GAAY,IAAI,YAAJ,EAAZ;AACN,SAAA,KAAA,GAAQ,IAAI,YAAJ,EAAR;AACO,SAAA,UAAA,GAAa,IAAI,YAAJ,EAAb;AACP,SAAA,MAAA,GAAS,IAAI,YAAJ,EAAT;AACA,SAAA,KAAA,GAA2B,IAAI,YAAJ,EAA3B;AACA,SAAA,OAAA,GAA6B,IAAI,YAAJ,EAA7B;AAKV,SAAA,OAAA,GAAU,IAAI,WAAJ,CAAgB,EAAhB,CAAV;AACA,SAAA,gBAAA,GAAmB,IAAnB;AACA,SAAA,gBAAA,GAAmB,IAAnB;AACA,SAAA,cAAA,GAAiB,eAAjB;AACA,SAAA,cAAA,GAAiB,cAAjB;AAEC,SAAA,kBAAA,GAAiC,IAAjC;AACA,SAAA,iBAAA,GAAsC,IAAtC;AACA,SAAA,MAAA,GAAkB,KAAlB;AACA,SAAA,KAAA,GAAiB,KAAjB;AACA,SAAA,UAAA,GAAa,EAAb;AAEmF;;AAjD/F;AAAA;AAAA,sCAyE0B;AAAA;;AAClB,UAAI,KAAK,SAAT,EAAoB;AAChB,aAAK,MAAL,GAAc,IAAd;AACH;;AAED,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB;AACH;;AAED,WAAK,SAAL,CAAe,QAAf,CAAwB,SAAxB,CAAkC,UAAC,IAAD,EAAoB;AAClD,QAAA,OAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACH,OAFD;AAGA,WAAK,SAAL,CAAe,WAAf,CAA2B,SAA3B,CAAqC,UAAC,IAAD,EAAoB;AACrD,QAAA,OAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACH,OAFD;AAGA,WAAK,SAAL,CAAe,MAAf,CAAsB,SAAtB,CAAgC,UAAC,MAAD,EAAgB;AAC5C,QAAA,OAAI,CAAC,KAAL,GAAa,MAAb;;AACA,QAAA,OAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,MAAjB;AACH,OAHD;AAIH;AA5FL;AAAA;AAAA,yCA8F6B;AAAA;;AACrB,UAAI,KAAK,MAAT,EAAiB;AACb,QAAA,UAAU,CACN,YAAA;AACI,cAAI,CAAC,CAAC,OAAI,CAAC,QAAX,EAAqB;AACjB,YAAA,OAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,KAA5B;;AACA,YAAA,OAAI,CAAC,MAAL,GAAc,KAAd;AACH;AACJ,SANK,EAON,CAPM,CAAV;AASH;AACJ;AA1GL;AAAA;AAAA,gCA4GoB;AACZ,WAAK,kBAAL;AACH;AA9GL;AAAA;AAAA,+BAgHsB,KAhHtB,EAgHgC;AACxB,WAAK,SAAL,GAAiB,KAAjB;AACH;AAlHL;AAAA;AAAA,qCAoH4B,EApH5B,EAoHmC;AAC3B,WAAK,iBAAL,GAAyB,EAAzB;AACH;AAtHL;AAAA;AAAA,sCAwH6B,EAxH7B,EAwHoC;AAC5B,WAAK,kBAAL,GAA0B,EAA1B;AACH;AA1HL;AAAA;AAAA,qCA4H4B,UA5H5B,EA4H+C;AACvC,WAAK,YAAL,GAAoB,UAApB;AACH;AA9HL;AAAA;AAAA,6BA6JiB;AACT,WAAK,SAAL,CAAe,IAAf;AACA,WAAK,SAAL;AACA,WAAK,GAAL,CAAS,aAAT;AACH;AAjKL;AAAA;AAAA,8BAmKkB;AACV,WAAK,UAAL,CAAgB,IAAhB;AACA,WAAK,SAAL;AACH;AAtKL;AAAA;AAAA,4BAwKmB,KAxKnB,EAwK6B;AACrB,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB;AACA,WAAK,SAAL;AACH;AA3KL;AAAA;AAAA,4BA6KmB,KA7KnB,EA6K6B;AACrB,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB;AACA,MAAA,KAAK,CAAC,eAAN;AACH;AAhLL;AAAA;AAAA,8BAkLqB,KAlLrB,EAkL+B;AACvB,WAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACA,MAAA,KAAK,CAAC,eAAN;AACH;AArLL;AAAA;AAAA,6BAuLoB,KAvLpB,EAuLiC;AACzB,WAAK,KAAL,GAAa,KAAb;AACH;AAzLL;AAAA;AAAA,2BA2Le;AACP,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB;AACH;;AAED,WAAK,SAAL,CAAe,IAAf;AACH;AAjML;AAAA;AAAA,4BAmMgB;AACR,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB;AACH;;AAED,WAAK,SAAL,CAAe,KAAf;AACH;AAzML;AAAA;AAAA,4BA2MgB;AACR,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,aAAd,CAA4B,KAA5B;AACH,OAFD,MAEO;AACH,aAAK,MAAL,GAAc,IAAd;AACH;AACJ;AAjNL;AAAA;AAAA,2BAmNe;AACP,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,aAAd,CAA4B,IAA5B;AACH,OAFD,MAEO;AACH,aAAK,MAAL,GAAc,KAAd;AACH;AACJ;AAzNL;AAAA;AAAA,6BA2NiB;AACT,aAAO,KAAK,KAAZ;AACH;AA7NL;AAAA;AAAA,wBAmDoB;AAAU,aAAO,KAAK,SAAZ;AAAwB,KAnDtD;AAAA,sBAqDqB,CArDrB,EAqD2B;AACnB,UAAI,CAAC,KAAK,KAAK,SAAf,EAA0B;AACtB,aAAK,SAAL,GAAiB,CAAjB;AACH,OAHkB,CAI3B;;;AACQ,WAAK,iBAAL,CAAuB,CAAvB;AACH;AA3DL;AAAA;AAAA,wBA6DwB;AAChB,aAAO,KAAK,UAAZ;AACH,KA/DL;AAAA,sBAiEyB,KAjEzB,EAiEsC;AAC9B,UAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,CAAC,KAAD,CAAtC,EAA+C;AAC3C,aAAK,UAAL,GAAkB,KAAlB;AACH,OAFD,MAEO;AACH,aAAK,UAAL,GAAkB,IAAI,CAAC,SAAL,CAAe,KAAf,CAAlB;AACH;AACJ;AAvEL;AAAA;AAAA,sBAiI0B,MAjI1B,EAiIgE;AACxD,UAAI,MAAJ,EAAY;AACR,YAAI,MAAM,YAAY,KAAtB,EAA6B;AACzB,eAAK,WAAL,GAAmB,KAAK,gBAAL,CAAsB,KAAtB,CAA4B,MAA5B,CAAnB;AACH,SAFD,MAEO,IAAI,OAAQ,MAAR,KAAoB,QAAxB,EAAkC;AACrC,eAAK,WAAL,GAAmB,KAAK,gBAAL,CAAsB,MAAtB,CAA6B,MAA7B,CAAnB;AACH,SAFM,MAEA;AACH,eAAK,WAAL,GAAmB,MAAnB;AACH;AACJ;AACJ;AA3IL;AAAA;AAAA,sBA8I6B,IA9I7B,EA8IyC;AACjC,UAAI,KAAK,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,aAAK,cAAL,GAAsB,IAAtB;AACA,aAAK,gBAAL,GAAwB,CAAC,CAAC,KAAK,cAAP,IAAyB,KAAK,cAAL,KAAwB,OAAzE;AACH;AACJ;AAnJL;AAAA;AAAA,sBAsJ6B,IAtJ7B,EAsJyC;AACjC,UAAI,KAAK,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,aAAK,cAAL,GAAsB,IAAtB;AACA,aAAK,gBAAL,GAAwB,CAAC,CAAC,KAAK,cAAP,IAAyB,KAAK,cAAL,KAAwB,OAAzE;AACH;AACJ;AA3JL;;AAAA;AAAA,GA3GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAyUC,knC;;;AA7NY,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,aAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACG,YAAA,CAAA,SADH,EACG,WADH,EACG,KADmB,CAAtB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACH,YAAA,CAAA,SADG,EACH,SADG,EACH,KAD+B,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACI,YAAA,CAAA,SADJ,EACI,OADJ,EACI,KADiB,CAArB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,iBAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACH,YAAA,CAAA,SADG,EACH,UADG,EACH,KAD+B,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACR,YAAA,CAAA,SADQ,EACR,mBADQ,EACR,KADyC,CAAjC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACJ,YAAA,CAAA,SADI,EACJ,eADI,EACJ,KADiC,CAA7B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACN,YAAA,CAAA,SADM,EACN,iBADM,EACN,KADqC,CAA/B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACL,YAAA,CAAA,SADK,EACL,iBADK,EACL,KADmC,CAA9B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACC,YAAA,CAAA,SADD,EACC,aADD,EACC,KADuB,CAAxB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACb,YAAA,CAAA,SADa,EACb,YADa,EACb,KADmD,CAAtC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,eAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACA,YAAA,CAAA,SADA,EACA,WADA,EACA,KADyB,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACH,YAAA,CAAA,SADG,EACH,cADG,EACH,KAD+B,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACb,YAAA,CAAA,SADa,EACb,YADa,EACb,KADmD,CAAtC,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACA,YAAA,CAAA,SADA,EACA,WADA,EACA,KADyB,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACF,YAAA,CAAA,SADE,EACF,aADE,EACF,KAD6B,CAA3B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACF,YAAA,CAAA,SADE,EACF,aADE,EACF,KAD6B,CAA3B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACJ,YAAA,CAAA,SADI,EACJ,eADI,EACJ,KADiC,CAA7B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACJ,YAAA,CAAA,SADI,EACJ,eADI,EACJ,KADiC,CAA7B,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACA,YAAA,CAAA,SADA,EACA,cADA,EACA,KADyB,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEL,YAAA,CAAA,SAFK,EAEL,eAFK,EAEL,KAFkC,CAA7B,CAAA;;AAEC,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,UAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,aAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACM,UAAA,CAAA,CAAf,MAAM,CAAC,MAAD,CAAS,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,WAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACN,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,OAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACO,UAAA,CAAA,CAAhB,MAAM,CAAC,OAAD,CAAU,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,YAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACP,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,QAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAa,YAAb,CAAD,CAAA,EAA4B,YAAA,CAAA,SAA5B,EAA4B,OAA5B,EAA4B,KAAA,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAT,MAAM,EAAG,EAAC,UAAA,CAAA,aAAA,EAAe,YAAf,CAAD,CAAA,EAA8B,YAAA,CAAA,SAA9B,EAA8B,SAA9B,EAA8B,KAAA,CAA9B,CAAA;;AAEkC,UAAA,CAAA,CAA3C,SAAS,CAAC,YAAD,EAAe;AAAE,EAAA,MAAM,EAAE;AAAV,CAAf,CAAkC,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,WAAvC,EAAuC,KAAA,CAAvC,CAAA;;AACF,UAAA,CAAA,CAAzC,SAAS,CAAC,UAAD,EAAa;AAAE,EAAA,MAAM,EAAE;AAAV,CAAb,CAAgC,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAAuC,YAAA,CAAA,SAAvC,EAAuC,UAAvC,EAAuC,KAAA,CAAvC,CAAA;;AA8F1C,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,EAAoC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAApC,CAAA,EACc,YAAA,CAAA,SADd,EACc,YADd,EACc,IADd,CAAA;;AAaA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,EAAoC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAApC,CAAA,EACqC,YAAA,CAAA,SADrC,EACqC,eADrC,EACqC,IADrC,CAAA;;AAQA,UAAA,CAAA,CADC,KAAK,EACN,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAG,EAAoC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAApC,CAAA,EACqC,YAAA,CAAA,SADrC,EACqC,eADrC,EACqC,IADrC,CAAA;;AAtJS,YAAY,GAAA,UAAA,CAArB,CAzGH,UAAA,CAAA,mBAAA,EACW,CAAE,gBAAF,EACR,iBADQ,CADX,CAyGG,CAAqB,EAAZ,YAAY,CAAZ;AA+NX,IAAA,oBAAA;AAA0B,IC9UtB,SAAS,GAAG,CACd,gBADc,EAEd,gBAFc,EAGd,iBAHc,CD8UU;;ACzU5B,IA0Ba,kBAAkB,GAAA,oBAA/B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8BAEyB;AACjB,aAAO;AACH,QAAA,QAAQ,EAAE,oBADP;AAEH,QAAA,SAAS,EAAT;AAFG,OAAP;AAIH;AAPL;AAAA;AAAA,+BAS0B;AAClB,aAAO;AACH,QAAA,QAAQ,EAAE,oBADP;AAEH,QAAA,SAAS,EAAT;AAFG,OAAP;AAIH;AAdL;;AAAA;AAAA,GA1BA;;AA0Ba,kBAAkB,CAAA,IAAlB,GAAkB,MAAA,CAAA,gBAAA,CAAA;AAAA,EAAA,IAAA,EAzB9B;AAyB8B,CAAA,CAAlB;AAxBG,kBAAE,CAAA,IAAF,GAAE,MACV,CAAA,gBADU,CACU;AAAA,EAAA,OAAA,EACpB,SAAA,0BAAA,CACA,CADA,EACW;AAAA,WAAA,KACX,CAAA,IAAA,kBADW,GAAA;AAEJ,GAJa;AAIb,EAAA,SAAA,EACP,SALoB;AAKd,EAAA,OAAA,EACN,CAAA,CAAY,YAAZ,EAEK,WAFL,CAAA;AANoB,CADV,CAAF;AAUY;;AAAA,CAAA,YACpB;AAAA,EAAA,MAAY,CAAA,iBAAZ,CACA,gBADA,EAEA,CAAA;AAAQ,IAAA,IAAA,EAAA;AAAR,GAAA,CAFA,EAGO,IAHP,EAIA,IAJA;AAIM,CALc;AAMpB;;;AAAA,CAAA,YAAY;AACf,EAAA,MAAA,CAAA,iBAAA,CACQ,iBADR,EAEG,CAAY;QACZ,EAAA;AADY,GAAZ,CAFH,EAIA,YACD;AAAA,WAAS,CAAA;AAAA,MAAA,IACX,EACW,MAAA,CAAA;AAFA,KAAA,CAAT;AAiBH,GAtBI,EAsBJ,IAtBI;AAsBJ,CAvBO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADqCH,MAAA,IAAA,EAAA,CAAA,OAAA,EACD,CAAA,QAAA,CADC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgDA,EAAC;;AACO,IAAA,oBAAG,EAAA,CAAA;AAAiC,MAAA,IAAA,EAC/C;AADc,KAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DhB,C;;AAAE,SAAA,YAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,cAAA,IAAA,EAAA,EAAA,iBAAA,IAAA,EAAA","sourcesContent":["\nexport const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\nexport const MIN_SEARCH_LENGTH = 3;\nexport const PAUSE = 10;\nexport const TEXT_SEARCHING = \"Searching...\";\nexport const TEXT_NO_RESULTS = \"No results found\";\nexport const CLEAR_TIMEOUT = 50;\n\nexport function isNil(value: any) {\n    return typeof value === \"undefined\" || value === null;\n}\n","import { Subject } from \"rxjs\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CompleterData } from \"./completer-data\";\nimport { isNil } from \"../globals\";\n\nexport abstract class CompleterBaseData extends Subject<CompleterItem[] | null> implements CompleterData {\n\n    protected _searchFields: string | null = null;\n    protected _titleField: string | null = null;\n    protected _descriptionField: string | undefined = undefined;\n    protected _imageField: string | undefined = undefined;\n\n    constructor() {\n        super();\n    }\n\n    public abstract search(term: string): void;\n\n    public cancel() {\n        return;\n    }\n\n    public searchFields(searchFields: string | null) {\n        this._searchFields = searchFields;\n        return this;\n    }\n\n    public titleField(titleField: string | null) {\n        this._titleField = titleField;\n        return this;\n    }\n\n    public descriptionField(descriptionField: string) {\n        this._descriptionField = descriptionField;\n        return this;\n    }\n\n    public imageField(imageField: string) {\n        this._imageField = imageField;\n        return this;\n    }\n\n    public convertToItem(data: any) {\n        let image: string | null = null;\n        let formattedText: string;\n        let formattedDesc: string | null = null;\n\n        if (this._titleField) {\n            formattedText = this.extractTitle(data);\n        } else {\n            formattedText = data;\n        }\n\n        if (typeof formattedText !== \"string\") {\n            formattedText = JSON.stringify(formattedText);\n        }\n\n        if (this._descriptionField) {\n            formattedDesc = this.extractValue(data, this._descriptionField);\n        }\n\n        if (this._imageField) {\n            image = this.extractValue(data, this._imageField);\n        }\n\n        if (isNil(formattedText)) {\n            return null;\n        }\n\n        return {\n            description: formattedDesc,\n            image,\n            originalObject: data,\n            title: formattedText\n        } as CompleterItem;\n\n    }\n\n    protected extractMatches(data: any[], term: string) {\n        let matches: any[] = [];\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n            matches = data.filter((item) => {\n                const values: any[] = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\n                return values.some((value) => value\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(term.toString().toLowerCase()) >= 0\n                );\n            });\n        } else {\n            matches = data;\n        }\n\n        return matches;\n    }\n\n    protected extractTitle(item: any) {\n        // split title fields and run extractValue for each and join with ' '\n        if (!this._titleField) {\n            return \"\";\n        }\n\n        return this._titleField.split(\",\")\n            .map((field) => {\n                return this.extractValue(item, field);\n            })\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n    }\n\n    protected extractValue(obj: any, key: string | null) {\n        let keys: string[];\n        let result: any;\n        if (key) {\n            keys = key.split(\".\");\n            result = obj;\n            for (key of keys) {\n                if (result) {\n                    result = result[key];\n                }\n            }\n        } else {\n            result = obj;\n        }\n        return result;\n    }\n\n    protected processResults(matches: string[]): CompleterItem[] {\n        let i: number;\n        const results: CompleterItem[] = [];\n\n        if (matches && matches.length > 0) {\n            for (i = 0; i < matches.length; i++) {\n                const item = this.convertToItem(matches[i]);\n                if (item) {\n                    results.push(item);\n                }\n            }\n        }\n        return results;\n    }\n\n    private extractBySearchFields(searchFields: string[], item: any) {\n        return searchFields\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\n    }\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\nimport { CompleterBaseData } from \"./completer-base-data\";\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport class LocalData extends CompleterBaseData {\n\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\n\n    protected _data: any[] = [];\n    protected savedTerm: string | null = null;\n\n    constructor() {\n        super();\n    }\n\n    public data(data: any[] | Observable<any[]>) {\n        if (data instanceof Observable) {\n            const data$ = data as Observable<any[]>;\n            data$\n                .pipe(catchError(() => []))\n                .subscribe((res) => {\n                    this._data = res;\n                    if (this.savedTerm) {\n                        this.search(this.savedTerm);\n                    }\n                    this.dataSourceChange.emit();\n                });\n        } else {\n            this._data = data;\n        }\n\n        this.dataSourceChange.emit();\n\n        return this;\n    }\n\n    public search(term: string): void {\n        if (!this._data) {\n            this.savedTerm = term;\n        } else {\n            this.savedTerm = null;\n            const matches: any[] = this.extractMatches(this._data, term);\n            this.next(this.processResults(matches));\n        }\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n        return super.convertToItem(data);\n    }\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subscription } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { CompleterBaseData } from \"./completer-base-data\";\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport class RemoteData extends CompleterBaseData {\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\n\n    private _remoteUrl: string | null = null;\n    private remoteSearch: Subscription | null = null;\n    private _urlFormater: ((term: string) => string) | null = null;\n    private _dataField: string | null = null;\n    private _requestOptions: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    public remoteUrl(remoteUrl: string | null) {\n        this._remoteUrl = remoteUrl;\n        this.dataSourceChange.emit();\n\n        return this;\n    }\n\n    public urlFormater(urlFormater: (term: string) => string) {\n        this._urlFormater = urlFormater;\n    }\n\n    public dataField(dataField: string) {\n        this._dataField = dataField;\n    }\n\n    public requestOptions(requestOptions: any) {\n        this._requestOptions = requestOptions;\n    }\n\n    public search(term: string): void {\n        this.cancel();\n        // let params = {};\n        let url = \"\";\n        if (this._urlFormater) {\n            url = this._urlFormater(term);\n        } else {\n            url = this._remoteUrl + encodeURIComponent(term);\n        }\n\n        this.remoteSearch = this.http\n            .get(url, Object.assign({}, this._requestOptions))\n            .pipe(\n                map((data: any) => {\n                    const matches = this.extractValue(data, this._dataField);\n                    return this.extractMatches(matches, term);\n                }),\n                catchError(() => [])\n            )\n            .subscribe((matches: any[]) => {\n                const results = this.processResults(matches);\n                this.next(results);\n            });\n    }\n\n    public cancel() {\n        if (this.remoteSearch) {\n            this.remoteSearch.unsubscribe();\n        }\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n        return super.convertToItem(data);\n    }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LocalData } from \"./local-data\";\n\n@Injectable()\nexport class LocalDataFactory {\n    public create() {\n        return new LocalData();\n    }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { RemoteData } from \"./remote-data\";\n\n@Injectable()\nexport class RemoteDataFactory {\n    constructor(private http: HttpClient) { }\n\n    public create() {\n        return new RemoteData(this.http);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { LocalData } from \"./local-data\";\nimport { RemoteData } from \"./remote-data\";\nimport { LocalDataFactory } from \"./local-data-factory\";\nimport { RemoteDataFactory } from \"./remote-data-factory\";\n\n@Injectable()\nexport class CompleterService {\n    constructor(\n        private localDataFactory: LocalDataFactory, // Using any instead of () => LocalData because of AoT errors\n        private remoteDataFactory: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ) { }\n\n    public local(\n        data: any[] | Observable<any>,\n        searchFields: string | null = \"\",\n        titleField: string | null = \"\"\n    ): LocalData {\n\n        const localData = this.localDataFactory.create();\n        return localData\n            .data(data)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n\n    public remote(url: string | null, searchFields: string | null = \"\", titleField: string | null = \"\"): RemoteData {\n\n        const remoteData = this.remoteDataFactory.create();\n        return remoteData\n            .remoteUrl(url)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport interface CompleterList {\n    search(term: string): void;\n    open(): void;\n    isOpen(open: boolean): void;\n    clear(): void;\n}\n\nexport interface CompleterDropdown {\n    clear(): void;\n    selectCurrent(): void;\n    nextRow(): void;\n    prevRow(): void;\n    highlightRow(index: number | null): void;\n}\n\n@Directive({\n    selector: \"[ctrCompleter]\",\n})\nexport class CtrCompleter {\n    @Output() public selected = new EventEmitter<CompleterItem | null>();\n    @Output() public highlighted = new EventEmitter<CompleterItem | null>();\n    @Output() public opened = new EventEmitter<boolean>();\n    @Output() public dataSourceChange = new EventEmitter<void>();\n\n    private list: CompleterList | null = null;\n    private dropdown: CompleterDropdown | null = null;\n    private _hasHighlighted = false;\n    private _hasSelected = false;\n    private _cancelBlur = false;\n    private _isOpen = false;\n    private _autoHighlightIndex: number | null = null;\n\n    public registerList(list: CompleterList) {\n        this.list = list;\n    }\n\n    public registerDropdown(dropdown: CompleterDropdown | null) {\n        this.dropdown = dropdown;\n    }\n\n    public onHighlighted(item: CompleterItem | null) {\n        this.highlighted.emit(item);\n        this._hasHighlighted = !!item;\n    }\n\n    public onSelected(item: CompleterItem | null, clearList = true) {\n        this.selected.emit(item);\n        if (item) {\n            this._hasSelected = true;\n        }\n        if (clearList) {\n            this.clear();\n        }\n    }\n\n    public onDataSourceChange() {\n        if (this.hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        this.dataSourceChange.emit();\n    }\n\n    public search(term: string) {\n        if (this._hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        if (this.list) {\n            this.list.search(term);\n        }\n    }\n\n    public clear() {\n        this._hasHighlighted = false;\n        this.isOpen = false;\n\n        if (this.dropdown) {\n            this.dropdown.clear();\n        }\n\n        if (this.list) {\n            this.list.clear();\n        }\n    }\n\n    public selectCurrent() {\n        if (this.dropdown) {\n            this.dropdown.selectCurrent();\n        }\n    }\n\n    public nextRow() {\n        if (this.dropdown) {\n            this.dropdown.nextRow();\n        }\n    }\n\n    public prevRow() {\n        if (this.dropdown) {\n            this.dropdown.prevRow();\n        }\n    }\n\n    public hasHighlighted() {\n        return this._hasHighlighted;\n    }\n\n    public cancelBlur(cancel: boolean) {\n        this._cancelBlur = cancel;\n    }\n\n    public isCancelBlur() {\n        return this._cancelBlur;\n    }\n\n    public open() {\n        if (!this._isOpen && !!this.list) {\n            this.isOpen = true;\n            this.list.open();\n        }\n    }\n\n    public get isOpen() {\n        return this._isOpen;\n    }\n\n    public set isOpen(open: boolean) {\n        this._isOpen = open;\n        this.opened.emit(this._isOpen);\n        if (this.list) {\n            this.list.isOpen(open);\n        }\n    }\n\n    public get autoHighlightIndex() {\n        return this._autoHighlightIndex;\n    }\n\n    public set autoHighlightIndex(index: number | null) {\n        this._autoHighlightIndex = index;\n        if (this.dropdown) {\n            this.dropdown.highlightRow(this._autoHighlightIndex);\n        }\n    }\n\n    public get hasSelected() {\n        return this._hasSelected;\n    }\n}\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, NgZone } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrCompleter, CompleterDropdown } from \"./ctr-completer\";\nimport { isNil } from \"../globals\";\n\nexport interface CtrRowElement {\n    setHighlighted(selected: boolean): void;\n    getNativeElement(): any;\n    getDataItem(): CompleterItem | null;\n}\n\nexport class CtrRowItem {\n    constructor(public row: CtrRowElement, public index: number) { }\n}\n\n@Directive({\n    selector: \"[ctrDropdown]\",\n})\nexport class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {\n\n    private rows: CtrRowItem[] = [];\n    private currHighlighted: CtrRowItem | undefined;\n    private isScrollOn: boolean = false;\n    private _rowMouseDown: boolean = false;\n\n    constructor( @Host() private completer: CtrCompleter, private el: ElementRef, private zone: NgZone) {\n        this.completer.registerDropdown(this);\n    }\n\n    public ngOnDestroy() {\n        this.completer.registerDropdown(null);\n    }\n\n    public ngAfterViewInit() {\n        const css = getComputedStyle(this.el.nativeElement);\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\n\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n        if (autoHighlightIndex) {\n            this.zone.run(\n                () => {\n                    this.highlightRow(autoHighlightIndex);\n                }\n            );\n        }\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\n        // Support for canceling blur on IE (issue #158)\n        if (!this._rowMouseDown) {\n            this.completer.cancelBlur(true);\n            this.zone.run(\n                () => {\n                    this.completer.cancelBlur(false);\n                }\n            );\n        } else {\n            this._rowMouseDown = false;\n        }\n    }\n\n    public registerRow(row: CtrRowItem) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\n        if (arrIndex >= 0) {\n            this.rows[arrIndex] = row;\n        } else {\n            this.rows.push(row);\n        }\n    }\n\n    public unregisterRow(rowIndex: number) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\n        this.rows.splice(arrIndex, 1);\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n            this.highlightRow(null);\n        }\n    }\n\n    public highlightRow(index: number | null) {\n        const highlighted = this.rows.find(row => row.index === index);\n\n        if (isNil(index) || index! < 0) {\n            if (this.currHighlighted) {\n                this.currHighlighted.row.setHighlighted(false);\n            }\n            this.currHighlighted = undefined;\n            this.completer.onHighlighted(null);\n            return;\n        }\n\n        if (!highlighted) {\n            return;\n        }\n\n        if (this.currHighlighted) {\n            this.currHighlighted.row.setHighlighted(false);\n        }\n\n        this.currHighlighted = highlighted;\n        this.currHighlighted.row.setHighlighted(true);\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n\n        if (this.isScrollOn && this.currHighlighted) {\n            const rowTop = this.dropdownRowTop();\n\n            if (!rowTop) {\n                return;\n            }\n\n            if (rowTop < 0) {\n                this.dropdownScrollTopTo(rowTop - 1);\n            } else {\n                const row = this.currHighlighted.row.getNativeElement();\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10)));\n                    }\n                }\n            }\n        }\n    }\n\n    public clear() {\n        this.rows = [];\n    }\n\n    public onSelected(item: CompleterItem | null) {\n        this.completer.onSelected(item);\n    }\n\n    public rowMouseDown() {\n        this._rowMouseDown = true;\n    }\n\n    public selectCurrent() {\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\n            this.onSelected(this.currHighlighted.row.getDataItem());\n        } else if (this.rows.length > 0) {\n            this.onSelected(this.rows[0].row.getDataItem());\n        }\n\n    }\n\n    public nextRow() {\n        let nextRowIndex = 0;\n\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index + 1;\n        }\n\n        this.highlightRow(nextRowIndex);\n    }\n\n    public prevRow() {\n        let nextRowIndex = -1;\n\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index - 1;\n        }\n\n        this.highlightRow(nextRowIndex);\n    }\n\n    private dropdownScrollTopTo(offset: any) {\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n    }\n\n    private dropdownRowTop() {\n        if (!this.currHighlighted) {\n            return;\n        }\n\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n            (this.el.nativeElement.getBoundingClientRect().top +\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10));\n    }\n\n    private dropdownHeight() {\n        return this.el.nativeElement.getBoundingClientRect().top +\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight as string, 10);\n    }\n\n    private dropdownRowOffsetHeight(row: any) {\n        const css = getComputedStyle(row.parentElement);\n        return row.parentElement.offsetHeight +\n            parseInt(css.marginTop as string, 10) + parseInt(css.marginBottom as string, 10);\n    }\n}\n","import { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from \"@angular/core\";\nimport { NgModel } from \"@angular/forms\";\nimport { Subscription, timer } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrCompleter } from \"./ctr-completer\";\nimport { isNil } from \"../globals\";\n\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\nconst KEY_BK = 8;\nconst KEY_SH = 16;\nconst KEY_CL = 20;\nconst KEY_F1 = 112;\nconst KEY_F12 = 123;\n\n@Directive({\n    selector: \"[ctrInput]\",\n})\nexport class CtrInput {\n    @Input(\"clearSelected\") public clearSelected = false;\n    @Input(\"clearUnselected\") public clearUnselected = false;\n    @Input(\"overrideSuggested\") public overrideSuggested = false;\n    @Input(\"fillHighlighted\") public fillHighlighted = true;\n    @Input(\"openOnFocus\") public openOnFocus = false;\n    @Input(\"openOnClick\") public openOnClick = false;\n    @Input(\"selectOnClick\") public selectOnClick = false;\n    @Input(\"selectOnFocus\") public selectOnFocus = false;\n\n    @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\n\n    private _searchStr = \"\";\n    private _displayStr = \"\";\n    private blurTimer: Subscription | null = null;\n\n    constructor( @Host() private completer: CtrCompleter, private ngModel: NgModel, private el: ElementRef) {\n        this.completer.selected.subscribe((item: CompleterItem) => {\n            if (!item) {\n                return;\n            }\n            if (this.clearSelected) {\n                this.searchStr = \"\";\n            } else {\n                this.searchStr = item.title;\n            }\n            this.ngModelChange.emit(this.searchStr);\n        });\n\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\n            if (this.fillHighlighted) {\n                if (item) {\n                    this._displayStr = item.title;\n                    this.ngModelChange.emit(item.title);\n                } else {\n                    this._displayStr = this.searchStr;\n                    this.ngModelChange.emit(this.searchStr);\n                }\n            }\n        });\n\n        this.completer.dataSourceChange.subscribe(() => {\n            this.completer.search(this.searchStr);\n        });\n\n        if (this.ngModel.valueChanges) {\n            this.ngModel.valueChanges.subscribe((value: any) => {\n                if (!isNil(value) && this._displayStr !== value) {\n                    if (this.searchStr !== value) {\n                        this.completer.search(value);\n                    }\n                    this.searchStr = value;\n                }\n            });\n        }\n    }\n\n    @HostListener(\"keyup\", [\"$event\"])\n    public keyupHandler(event: any) {\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n            // do nothing\n            return;\n        }\n\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n            event.preventDefault();\n        } else if (event.keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.search(this.searchStr);\n        } else if (event.keyCode === KEY_ES) {\n            if (this.completer.isOpen) {\n                this.restoreSearchValue();\n                this.completer.clear();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n\n    @HostListener(\"paste\", [\"$event\"])\n    public pasteHandler(event: any) {\n        this.completer.open();\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public keydownHandler(event: any) {\n        const keyCode = event.keyCode || event.which;\n        if (keyCode === KEY_EN) {\n            if (this.completer.hasHighlighted()) {\n                event.preventDefault();\n            }\n            this.handleSelection();\n        } else if (keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.open();\n            this.completer.nextRow();\n        } else if (keyCode === KEY_UP) {\n            event.preventDefault();\n            this.completer.prevRow();\n        } else if (keyCode === KEY_TAB) {\n            this.handleSelection();\n        } else if (keyCode === KEY_BK) {\n            this.completer.open();\n        } else if (keyCode === KEY_ES) {\n            // This is very specific to IE10/11 #272\n            // without this, IE clears the input text\n            event.preventDefault();\n            if (this.completer.isOpen) {\n                event.stopPropagation();\n            }\n        } else {\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\n                !event.ctrlKey && !event.metaKey && !event.altKey\n            ) {\n                this.completer.open();\n            }\n        }\n    }\n\n    @HostListener(\"blur\", [\"$event\"])\n    public onBlur(event: any) {\n        // Check if we need to cancel Blur for IE\n        if (this.completer.isCancelBlur()) {\n            setTimeout(\n                () => {\n                    // get the focus back\n                    this.el.nativeElement.focus();\n                },\n                0\n            );\n            return;\n        }\n\n        if (this.completer.isOpen) {\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\n        }\n    }\n\n    @HostListener(\"focus\", [])\n    public onfocus() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n\n        if (this.selectOnFocus) {\n            this.el.nativeElement.select();\n        }\n\n        if (this.openOnFocus) {\n            this.completer.open();\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event: any) {\n        if (this.selectOnClick) {\n            this.el.nativeElement.select();\n        }\n\n        if (this.openOnClick) {\n            if (this.completer.isOpen) {\n                this.completer.clear();\n            } else {\n                this.completer.open();\n            }\n        }\n    }\n\n    public get searchStr() {\n        return this._searchStr;\n    }\n\n    public set searchStr(term: string) {\n        this._searchStr = term;\n        this._displayStr = term;\n    }\n\n    private handleSelection() {\n        if (this.completer.hasHighlighted()) {\n            this._searchStr = \"\";\n            this.completer.selectCurrent();\n        } else if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            this.completer.clear();\n        }\n    }\n\n    private restoreSearchValue() {\n        if (this.fillHighlighted) {\n            if (this._displayStr !== this.searchStr) {\n                this._displayStr = this.searchStr;\n                this.ngModelChange.emit(this.searchStr);\n            }\n        }\n    }\n\n    private doBlur() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n\n        if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            } else {\n                this.restoreSearchValue();\n            }\n        }\n\n        this.completer.clear();\n    }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Host,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n  NgZone,\n} from \"@angular/core\";\nimport { Subscription, timer } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CLEAR_TIMEOUT, isNil, MIN_SEARCH_LENGTH, PAUSE } from \"../globals\";\nimport { CompleterData } from \"../services/completer-data\";\nimport { CompleterList, CtrCompleter } from \"./ctr-completer\";\n\nexport class CtrListContext {\n  constructor(\n    public results: CompleterItem[] | null,\n    public searching: boolean,\n    public searchInitialized: boolean,\n    public isOpen: boolean\n  ) {}\n}\n\n@Directive({\n  selector: \"[ctrList]\",\n})\nexport class CtrList implements OnInit, CompleterList {\n  @Input() public ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public ctrListPause = PAUSE;\n  @Input() public ctrListAutoMatch = false;\n  @Input() public ctrListAutoHighlight = false;\n  @Input() public ctrListDisplaySearching = true;\n\n  private _dataService: CompleterData | null = null;\n  // private results: CompleterItem[] = [];\n  private term: string | null = null;\n  // private searching = false;\n  private searchTimer: Subscription | null = null;\n  private clearTimer: Subscription | null = null;\n  private ctx = new CtrListContext([], false, false, false);\n  private _initialValue: any = null;\n  private viewRef: EmbeddedViewRef<CtrListContext> | null = null;\n\n  constructor(\n    @Host() private completer: CtrCompleter,\n    private templateRef: TemplateRef<CtrListContext>,\n    private viewContainer: ViewContainerRef,\n    private cd: ChangeDetectorRef,\n    private zone: NgZone\n  ) {}\n\n  public ngOnInit() {\n    this.completer.registerList(this);\n    this.viewRef = this.viewContainer.createEmbeddedView(\n      this.templateRef,\n      new CtrListContext([], false, false, false)\n    );\n  }\n\n  @Input(\"ctrList\")\n  public set dataService(newService: CompleterData) {\n    this._dataService = newService;\n    this.dataServiceSubscribe();\n  }\n\n  @Input(\"ctrListInitialValue\")\n  public set initialValue(value: any) {\n    if (\n      this._dataService &&\n      typeof this._dataService.convertToItem === \"function\"\n    ) {\n      this.zone.run(() => {\n        const initialItem =\n          this._dataService && this._dataService.convertToItem!(value);\n        if (initialItem) {\n          this.completer.onSelected(initialItem, false);\n        }\n      });\n    } else if (!this._dataService) {\n      this._initialValue = value;\n    }\n  }\n\n  public search(term: string) {\n    if (\n      !isNil(term) &&\n      term.length >= this.ctrListMinSearchLength &&\n      this.term !== term\n    ) {\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n        this.searchTimer = null;\n      }\n      if (!this.ctx.searching) {\n        if (this.ctrListDisplaySearching) {\n          this.ctx.results = [];\n        }\n        this.ctx.searching = true;\n        this.ctx.searchInitialized = true;\n        this.refreshTemplate();\n      }\n      if (this.clearTimer) {\n        this.clearTimer.unsubscribe();\n      }\n      this.searchTimer = timer(this.ctrListPause)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.searchTimerComplete(term);\n        });\n    } else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n      this.clear();\n      this.term = \"\";\n    }\n  }\n\n  public clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n    }\n    this.clearTimer = timer(CLEAR_TIMEOUT)\n      .pipe(take(1))\n      .subscribe(() => {\n        this._clear();\n      });\n  }\n\n  public open() {\n    if (!this.ctx.searchInitialized) {\n      this.search(\"\");\n    }\n    this.refreshTemplate();\n  }\n\n  public isOpen(open: boolean) {\n    this.ctx.isOpen = open;\n  }\n\n  private _clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n      this.searchTimer = null;\n    }\n    if (this.dataService) {\n      this.dataService.cancel();\n    }\n\n    this.viewContainer.clear();\n    this.viewRef = null;\n  }\n\n  private searchTimerComplete(term: string) {\n    // Begin the search\n    if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n      this.ctx.searching = false;\n      return;\n    }\n    this.term = term;\n\n    if (this._dataService) {\n      this._dataService.search(term);\n    }\n  }\n\n  private refreshTemplate() {\n    // create the template if it doesn't exist\n    if (!this.viewRef) {\n      this.viewRef = this.viewContainer.createEmbeddedView(\n        this.templateRef,\n        this.ctx\n      );\n    } else if (!this.viewRef.destroyed) {\n      // refresh the template\n      this.viewRef!.context.isOpen = this.ctx.isOpen;\n      this.viewRef!.context.results = this.ctx.results;\n      this.viewRef!.context.searching = this.ctx.searching;\n      this.viewRef!.context.searchInitialized = this.ctx.searchInitialized;\n      this.viewRef.detectChanges();\n    }\n    this.cd.markForCheck();\n  }\n\n  private getBestMatchIndex() {\n    if (!this.ctx.results || !this.term) {\n      return null;\n    }\n\n    // First try to find the exact term\n    let bestMatch = this.ctx.results.findIndex(\n      (item) => item.title.toLowerCase() === this.term!.toLocaleLowerCase()\n    );\n    // If not try to find the first item that starts with the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex((item) =>\n        item.title.toLowerCase().startsWith(this.term!.toLocaleLowerCase())\n      );\n    }\n    // If not try to find the first item that includes the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex((item) =>\n        item.title.toLowerCase().includes(this.term!.toLocaleLowerCase())\n      );\n    }\n\n    return bestMatch < 0 ? null : bestMatch;\n  }\n\n  private dataServiceSubscribe() {\n    if (this._dataService) {\n      this._dataService.subscribe(\n        (results) => {\n          this.ctx.searchInitialized = true;\n          this.ctx.searching = false;\n          this.ctx.results = results;\n\n          if (\n            this.ctrListAutoMatch &&\n            results &&\n            results.length === 1 &&\n            results[0].title &&\n            !isNil(this.term) &&\n            results[0].title.toLocaleLowerCase() ===\n              this.term!.toLocaleLowerCase()\n          ) {\n            // Do automatch\n            this.completer.onSelected(results[0]);\n            return;\n          }\n\n          this.refreshTemplate();\n\n          if (this.ctrListAutoHighlight) {\n            this.completer.autoHighlightIndex = this.getBestMatchIndex();\n          }\n        },\n        (error: any) => {\n          // tslint:disable-next-line:no-console\n          console.error(error);\n          // tslint:disable-next-line:no-console\n          console.error(\n            \"Unexpected error in dataService: errors should be handled by the dataService Observable\"\n          );\n          return [];\n        }\n      );\n\n      if (this._dataService.dataSourceChange) {\n        this._dataService.dataSourceChange.subscribe(() => {\n          this.term = null;\n          this.ctx.searchInitialized = false;\n          this.ctx.searching = false;\n          this.ctx.results = [];\n          this.refreshTemplate();\n          this.completer.onDataSourceChange();\n        });\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnDestroy } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrDropdown, CtrRowElement, CtrRowItem } from \"./ctr-dropdown\";\n\n@Directive({\n    selector: \"[ctrRow]\",\n})\nexport class CtrRow implements CtrRowElement, OnDestroy {\n\n    private selected = false;\n    private _rowIndex: number = 0;\n    private _item: CompleterItem | null = null;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: CtrDropdown) { }\n\n    public ngOnDestroy() {\n        if (this._rowIndex) {\n            this.dropdown.unregisterRow(this._rowIndex);\n        }\n    }\n\n    @Input()\n    set ctrRow(index: number) {\n        this._rowIndex = index;\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n    }\n\n    @Input()\n    set dataItem(item: CompleterItem) {\n        this._item = item;\n    }\n\n    @HostListener(\"click\", [\"$event\"]) public onClick(event: any) {\n        this.dropdown.onSelected(this._item);\n    }\n\n    @HostListener(\"mouseenter\", [\"$event\"]) public onMouseEnter(event: any) {\n        this.dropdown.highlightRow(this._rowIndex);\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\n        this.dropdown.rowMouseDown();\n    }\n\n    public setHighlighted(selected: boolean) {\n        this.selected = selected;\n        if (this.selected) {\n          this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\n        } else {\n          this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n    }\n\n    public getNativeElement() {\n        return this.el.nativeElement;\n    }\n\n    public getDataItem() {\n        return this._item;\n    }\n}\n","\"use strict\";\nimport { Component, Input, OnInit } from \"@angular/core\";\n\nexport interface MatchPart {\n    isMatch: boolean;\n    text: string;\n}\n\n@Component({\n    selector: \"completer-list-item\",\n    template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\n    </span>`\n})\nexport class CompleterListItemCmp implements OnInit {\n    @Input()\n    public text: string = \"\";\n    @Input()\n    public searchStr: string = \"\";\n    @Input()\n    public matchClass: string = \"\";\n    @Input()\n    public type: string = \"\";\n\n    public parts: MatchPart[] = [];\n    public ngOnInit() {\n        if (!this.searchStr) {\n            this.parts.push({ isMatch: false, text: this.text });\n            return;\n        }\n        const matchStr = this.text.toLowerCase();\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n        let startIndex = 0;\n        while (matchPos >= 0) {\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n            if (matchPos === 0) {\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length;\n            } else if (matchPos > 0) {\n                const matchPart = this.text.slice(startIndex, matchPos);\n                this.parts.push({ isMatch: false, text: matchPart });\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length + matchPart.length;\n            }\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n        }\n        if (startIndex < this.text.length) {\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n        }\n    }\n}","\"use strict\";\nimport { AfterViewChecked, ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, ViewChild, forwardRef, AfterViewInit, ElementRef } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { CtrCompleter } from \"../directives/ctr-completer\";\nimport { CompleterData } from \"../services/completer-data\";\nimport { CompleterService } from \"../services/completer-service\";\nimport { CompleterItem } from \"./completer-item\";\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS, isNil } from \"../globals\";\n\n\nconst noop = () => {\n    return;\n};\n\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CompleterCmp),\n};\n\n\n@Component({\n    selector: \"ng2-completer\",\n    template: `\n        <div class=\"completer-holder\" ctrCompleter>\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\n\n            <div class=\"completer-dropdown-holder\"\n                *ctrList=\"dataService;\n                    minSearchLength: minSearchLength;\n                    pause: pause;\n                    autoMatch: autoMatch;\n                    initialValue: initialValue;\n                    autoHighlight: autoHighlight;\n                    displaySearching: displaySearching;\n                    let items = results;\n                    let searchActive = searching;\n                    let isInitialized = searchInitialized;\n                    let isOpen = isOpen;\">\n                <div class=\"completer-dropdown\" ctrDropdown\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\n                            </div>\n                            <div class=\"completer-item-text\"\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\n                                <completer-list-item\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\n                                class=\"completer-description\" [text]=\"item.description\"\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\n                                </completer-list-item>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n    .completer-dropdown {\n        border-color: #ececec;\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 2px;\n        width: 250px;\n        padding: 6px;\n        cursor: pointer;\n        z-index: 9999;\n        position: absolute;\n        margin-top: -6px;\n        background-color: #ffffff;\n    }\n\n    .completer-row {\n        padding: 5px;\n        color: #000000;\n        margin-bottom: 4px;\n        clear: both;\n        display: inline-block;\n        width: 103%;\n    }\n\n    .completer-selected-row {\n        background-color: lightblue;\n        color: #ffffff;\n    }\n\n    .completer-description {\n        font-size: 14px;\n    }\n\n    .completer-image-default {\n        width: 16px;\n        height: 16px;\n        background-image: url(\"demo/res/img/default.png\");\n    }\n\n    .completer-image-holder {\n        float: left;\n        width: 10%;\n    }\n    .completer-item-text-image {\n        float: right;\n        width: 90%;\n    }\n    `],\n    providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n})\nexport class CompleterCmp implements ControlValueAccessor, AfterViewChecked, AfterViewInit {\n    @Input() public dataService: CompleterData | undefined;\n    @Input() public inputName = \"\";\n    @Input() public inputId: string = \"\";\n    @Input() public pause = PAUSE;\n    @Input() public minSearchLength = MIN_SEARCH_LENGTH;\n    @Input() public maxChars = MAX_CHARS;\n    @Input() public overrideSuggested = false;\n    @Input() public clearSelected = false;\n    @Input() public clearUnselected = false;\n    @Input() public fillHighlighted = true;\n    @Input() public placeholder = \"\";\n    @Input() public matchClass: string | undefined;\n    @Input() public fieldTabindex: number | undefined;\n    @Input() public autoMatch = false;\n    @Input() public disableInput = false;\n    @Input() public inputClass: string | undefined;\n    @Input() public autofocus = false;\n    @Input() public openOnFocus = false;\n    @Input() public openOnClick = false;\n    @Input() public selectOnClick = false;\n    @Input() public selectOnFocus = false;\n    @Input() public initialValue: any;\n    @Input() public autoHighlight = false;\n\n    @Output() public selected = new EventEmitter<CompleterItem>();\n    @Output() public highlighted = new EventEmitter<CompleterItem>();\n    @Output(\"blur\") public blurEvent = new EventEmitter<void>();\n    @Output() public click = new EventEmitter<void>();\n    @Output(\"focus\") public focusEvent = new EventEmitter<void>();\n    @Output() public opened = new EventEmitter<boolean>();\n    @Output() public keyup: EventEmitter<any> = new EventEmitter();\n    @Output() public keydown: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(CtrCompleter, { static: false }) public completer: CtrCompleter | undefined;\n    @ViewChild(\"ctrInput\", { static: false }) public ctrInput: ElementRef | undefined;\n\n    public control = new FormControl(\"\");\n    public displaySearching = true;\n    public displayNoResults = true;\n    public _textNoResults = TEXT_NO_RESULTS;\n    public _textSearching = TEXT_SEARCHING;\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n    private _focus: boolean = false;\n    private _open: boolean = false;\n    private _searchStr = \"\";\n\n    constructor(private completerService: CompleterService, private cdr: ChangeDetectorRef) { }\n\n    public get value(): any { return this.searchStr; };\n\n    public set value(v: any) {\n        if (v !== this.searchStr) {\n            this.searchStr = v;\n        }\n        // Propagate the change in any case\n        this._onChangeCallback(v);\n    }\n\n    public get searchStr() {\n        return this._searchStr;\n    }\n\n    public set searchStr(value: string) {\n        if (typeof value === \"string\" || isNil(value)) {\n            this._searchStr = value;\n        } else {\n            this._searchStr = JSON.stringify(value);\n        }\n    }\n\n    public ngAfterViewInit() {\n        if (this.autofocus) {\n            this._focus = true;\n        }\n        \n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.selected.subscribe((item: CompleterItem) => {\n            this.selected.emit(item);\n        });\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\n            this.highlighted.emit(item);\n        });\n        this.completer.opened.subscribe((isOpen: boolean) => {\n            this._open = isOpen;\n            this.opened.emit(isOpen);\n        });\n    }\n\n    public ngAfterViewChecked(): void {\n        if (this._focus) {\n            setTimeout(\n                () => {\n                    if (!!this.ctrInput) {\n                        this.ctrInput.nativeElement.focus();\n                        this._focus = false;\n                    }\n                },\n                0\n            );\n        }\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(value: any) {\n        this.searchStr = value;\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disableInput = isDisabled;\n    }\n\n    @Input()\n    public set datasource(source: CompleterData | string | any[]) {\n        if (source) {\n            if (source instanceof Array) {\n                this.dataService = this.completerService.local(source);\n            } else if (typeof (source) === \"string\") {\n                this.dataService = this.completerService.remote(source);\n            } else {\n                this.dataService = source as CompleterData;\n            }\n        }\n    }\n\n    @Input()\n    public set textNoResults(text: string) {\n        if (this._textNoResults !== text) {\n            this._textNoResults = text;\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n        }\n    }\n\n    @Input()\n    public set textSearching(text: string) {\n        if (this._textSearching !== text) {\n            this._textSearching = text;\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n        }\n    }\n\n    public onBlur() {\n        this.blurEvent.emit();\n        this.onTouched();\n        this.cdr.detectChanges();\n    }\n\n    public onFocus() {\n        this.focusEvent.emit();\n        this.onTouched();\n    }\n\n    public onClick(event: any) {\n        this.click.emit(event);\n        this.onTouched();\n    }\n\n    public onKeyup(event: any) {\n        this.keyup.emit(event);\n        event.stopPropagation();\n    }\n\n    public onKeydown(event: any) {\n        this.keydown.emit(event);\n        event.stopPropagation();\n    }\n\n    public onChange(value: string) {\n        this.value = value;\n    }\n\n    public open() {\n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.open();\n    }\n\n    public close() {\n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.clear();\n    }\n\n    public focus(): void {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.focus();\n        } else {\n            this._focus = true;\n        }\n    }\n\n    public blur(): void {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.blur();\n        } else {\n            this._focus = false;\n        }\n    }\n\n    public isOpen() {\n        return this._open;\n    }\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { CompleterCmp } from \"../components/completer-cmp\";\nimport { CompleterListItemCmp } from \"../components/completer-list-item-cmp\";\nimport { LocalDataFactory } from \"../services/local-data-factory\";\nimport { RemoteDataFactory } from \"../services/remote-data-factory\";\nimport { CompleterService } from \"../services/completer-service\";\n\nimport { CtrCompleter } from \"../directives/ctr-completer\";\nimport { CtrDropdown } from \"../directives/ctr-dropdown\";\nimport { CtrInput } from \"../directives/ctr-input\";\nimport { CtrList } from \"../directives/ctr-list\";\nimport { CtrRow } from \"../directives/ctr-row\";\n\nconst providers = [\n    CompleterService,\n    LocalDataFactory,\n    RemoteDataFactory\n];\n\n@NgModule({\n    declarations: [\n        CompleterListItemCmp,\n        CtrCompleter,\n        CtrDropdown,\n        CtrInput,\n        CtrList,\n        CtrRow,\n        CompleterCmp\n    ],\n    exports: [\n        CompleterListItemCmp,\n        CtrCompleter,\n        CtrDropdown,\n        CtrInput,\n        CtrList,\n        CtrRow,\n        CompleterCmp\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    providers\n})\nexport class Ng2CompleterModule {\n\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: Ng2CompleterModule,\n            providers\n        };\n    }\n\n    public static forChild(): ModuleWithProviders {\n        return {\n            ngModule: Ng2CompleterModule,\n            providers\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}