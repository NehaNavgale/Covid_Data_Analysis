{"ast":null,"code":"/**\n * Funnel tick module.\n */\nimport * as tslib_1 from \"tslib\";\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\nimport { Tick } from \"../elements/Tick\";\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { registry } from \"../../core/Registry\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Draws an tick line for a funnel slice connecting it to a related label.\n *\n * @see {@link IFunnelTickEvents} for a list of available events\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\n */\n\nvar FunnelTick =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FunnelTick, _super);\n  /**\n   * Constructor\n   */\n\n\n  function FunnelTick() {\n    var _this = _super.call(this) || this;\n    /**\n     * A label element this tick is attached to.\n     */\n\n\n    _this._label = new MutableValueDisposer();\n    /**\n     * A slice element this tick is attached to.\n     */\n\n    _this._slice = new MutableValueDisposer();\n    _this.className = \"FunnelTick\";\n    _this.element = _this.paper.add(\"path\");\n\n    _this._disposers.push(_this._label);\n\n    _this._disposers.push(_this._slice);\n\n    _this.setPropertyValue(\"locationX\", 0);\n\n    _this.setPropertyValue(\"locationY\", 0);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\n   * Draws the tick element.\n   *\n   * @ignore Exclude from docs\n   */\n\n\n  FunnelTick.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    var slice = this.slice;\n    var point = slice.getPoint(this.locationX, this.locationY);\n\n    if (point) {\n      var label = this.label;\n      var series = slice.dataItem.component;\n\n      if (series.orientation == \"vertical\") {\n        var x1 = label.pixelX;\n        var y1 = label.pixelY;\n\n        if (!series.labelsOpposite) {\n          x1 += label.maxRight;\n        }\n\n        var p0 = $utils.spritePointToSprite(point, slice, this.parent);\n        var p1 = $utils.spritePointToSprite({\n          x: x1,\n          y: y1\n        }, label.parent, this.parent);\n        this.path = $path.moveTo(p0) + $path.lineTo(p1);\n      } else {\n        var x1 = label.pixelX;\n        var y1 = label.pixelY;\n\n        if (!series.labelsOpposite) {\n          y1 += label.maxBottom;\n        }\n\n        var p0 = $utils.spritePointToSprite(point, slice, this.parent);\n        var p1 = $utils.spritePointToSprite({\n          x: x1,\n          y: y1\n        }, label.parent, this.parent);\n        this.path = $path.moveTo(p0) + $path.lineTo(p1);\n      }\n    }\n  };\n\n  Object.defineProperty(FunnelTick.prototype, \"slice\", {\n    /**\n     * @return FunnelSlice\n     */\n    get: function get() {\n      return this._slice.get();\n    },\n\n    /**\n     * [[FunnelSlice]] element tick is attached to.\n     *\n     * @param slice  Slice\n     */\n    set: function set(slice) {\n      this._slice.set(slice, new MultiDisposer([slice.events.on(\"transformed\", this.invalidate, this, false), slice.events.on(\"validated\", this.invalidate, this, false)]));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelTick.prototype, \"label\", {\n    /**\n     * @return Label\n     */\n    get: function get() {\n      return this._label.get();\n    },\n\n    /**\n     * [[Label]] element tick is attached to.\n     *\n     * @param label  Label\n     */\n    set: function set(label) {\n      this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelTick.prototype, \"locationX\", {\n    /**\n     * @return Location (0-1)\n     */\n    get: function get() {\n      return this.getPropertyValue(\"locationX\");\n    },\n\n    /**\n     * A relative horizontal position within target element a tick is pointing\n     * to.\n     *\n     * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\n     *\n     * You can also set any value in-between (e.g. 0.5 will point to the middle\n     * of the slice), or outside 0-1 range, which will put tick anchor position\n     * outside target element.\n     *\n     * @param value  Location (0-1)\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"locationX\", value, false, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelTick.prototype, \"locationY\", {\n    /**\n     * @return Location (0-1)\n     */\n    get: function get() {\n      return this.getPropertyValue(\"locationY\");\n    },\n\n    /**\n     * A relative vertical position within target element a tick is pointing\n     * to.\n     *\n     * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\n     *\n     * You can also set any value in-between (e.g. 0.5 will point to the middle\n     * of the slice), or outside 0-1 range, which will put tick anchor position\n     * outside target element.\n     *\n     * @param value  Location (0-1)\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"locationY\", value, false, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelTick;\n}(Tick);\n\nexport { FunnelTick };\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\n\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;","map":{"version":3,"sources":["../../../../../src/.internal/charts/elements/FunnelTick.ts"],"names":[],"mappings":"AAAA;;AAEG;;AAEH;;;;;AAKG;;AACH,SAAS,IAAT,QAAkE,kBAAlE;AAGA,SAAS,oBAAT,EAA+B,aAA/B,QAAoD,2BAApD;AAEA,SAAS,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAK,MAAZ,MAAwB,wBAAxB;AACA,OAAO,KAAK,KAAZ,MAAuB,2BAAvB;AAgCA;;;;;AAKG;;AAEH;;;;;AAKG;;AACH,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;AA2B/B;;AAEG;;;AACH,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;AAbA;;AAEG;;;AACO,IAAA,KAAA,CAAA,MAAA,GAAS,IAAI,oBAAJ,EAAT;AAEV;;AAEG;;AACO,IAAA,KAAA,CAAA,MAAA,GAAS,IAAI,oBAAJ,EAAT;AAOT,IAAA,KAAI,CAAC,SAAL,GAAiB,YAAjB;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,MAAf,CAAf;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,KAAI,CAAC,MAA1B;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,KAAI,CAAC,MAA1B;;AAEA,IAAA,KAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,CAAnC;;AACA,IAAA,KAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,CAAnC;;AAEA,IAAA,KAAI,CAAC,UAAL;;;AACA;AAED;;;;AAIG;;;AACI,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV;;AAEA,QAAI,KAAK,GAAgB,KAAK,KAA9B;AACA,QAAI,KAAK,GAAG,KAAK,CAAC,QAAN,CAAe,KAAK,SAApB,EAA+B,KAAK,SAApC,CAAZ;;AAEA,QAAI,KAAJ,EAAW;AACV,UAAI,KAAK,GAAG,KAAK,KAAjB;AAEA,UAAI,MAAM,GAAiB,KAAK,CAAC,QAAN,CAAe,SAA1C;;AAEA,UAAI,MAAM,CAAC,WAAP,IAAsB,UAA1B,EAAsC;AAErC,YAAI,EAAE,GAAG,KAAK,CAAC,MAAf;AACA,YAAI,EAAE,GAAG,KAAK,CAAC,MAAf;;AAEA,YAAG,CAAC,MAAM,CAAC,cAAX,EAA0B;AACzB,UAAA,EAAE,IAAI,KAAK,CAAC,QAAZ;AACA;;AAED,YAAI,EAAE,GAAG,MAAM,CAAC,mBAAP,CAA2B,KAA3B,EAAkC,KAAlC,EAAyC,KAAK,MAA9C,CAAT;AACA,YAAI,EAAE,GAAG,MAAM,CAAC,mBAAP,CAA2B;AAAE,UAAA,CAAC,EAAE,EAAL;AAAS,UAAA,CAAC,EAAE;AAAZ,SAA3B,EAA6C,KAAK,CAAC,MAAnD,EAA2D,KAAK,MAAhE,CAAT;AAEA,aAAK,IAAL,GAAY,KAAK,CAAC,MAAN,CAAa,EAAb,IAAmB,KAAK,CAAC,MAAN,CAAa,EAAb,CAA/B;AACA,OAbD,MAcK;AACJ,YAAI,EAAE,GAAG,KAAK,CAAC,MAAf;AACA,YAAI,EAAE,GAAG,KAAK,CAAC,MAAf;;AAEA,YAAG,CAAC,MAAM,CAAC,cAAX,EAA0B;AACzB,UAAA,EAAE,IAAI,KAAK,CAAC,SAAZ;AACA;;AAED,YAAI,EAAE,GAAG,MAAM,CAAC,mBAAP,CAA2B,KAA3B,EAAkC,KAAlC,EAAyC,KAAK,MAA9C,CAAT;AACA,YAAI,EAAE,GAAG,MAAM,CAAC,mBAAP,CAA2B;AAAE,UAAA,CAAC,EAAE,EAAL;AAAS,UAAA,CAAC,EAAE;AAAZ,SAA3B,EAA6C,KAAK,CAAC,MAAnD,EAA2D,KAAK,MAAhE,CAAT;AAEA,aAAK,IAAL,GAAY,KAAK,CAAC,MAAN,CAAa,EAAb,IAAmB,KAAK,CAAC,MAAN,CAAa,EAAb,CAA/B;AACA;AACD;AACD,GAvCM;;AA8CP,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;AAOhB;;AAEG;SACH,eAAA;AACC,aAAO,KAAK,MAAL,CAAY,GAAZ,EAAP;AACA,KAZe;;AALhB;;;;AAIG;SACH,aAAiB,KAAjB,EAAmC;AAClC,WAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,EAAuB,IAAI,aAAJ,CAAkB,CACxC,KAAK,CAAC,MAAN,CAAa,EAAb,CAAgB,aAAhB,EAA+B,KAAK,UAApC,EAAgD,IAAhD,EAAsD,KAAtD,CADwC,EAExC,KAAK,CAAC,MAAN,CAAa,EAAb,CAAgB,WAAhB,EAA6B,KAAK,UAAlC,EAA8C,IAA9C,EAAoD,KAApD,CAFwC,CAAlB,CAAvB;AAIA,KALe;oBAAA;;AAAA,GAAhB;AAmBA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;AAIhB;;AAEG;SACH,eAAA;AACC,aAAO,KAAK,MAAL,CAAY,GAAZ,EAAP;AACA,KATe;;AALhB;;;;AAIG;SACH,aAAiB,KAAjB,EAA6B;AAC5B,WAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,EAAuB,KAAK,CAAC,MAAN,CAAa,EAAb,CAAgB,aAAhB,EAA+B,KAAK,UAApC,EAAgD,IAAhD,EAAsD,KAAtD,CAAvB;AACA,KAFe;oBAAA;;AAAA,GAAhB;AAuBA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;AAIpB;;AAEG;SACH,eAAA;AACC,aAAO,KAAK,gBAAL,CAAsB,WAAtB,CAAP;AACA,KATmB;;AAZpB;;;;;;;;;;;AAWG;SACH,aAAqB,KAArB,EAAkC;AACjC,WAAK,gBAAL,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,KAA1C,EAAiD,IAAjD;AACA,KAFmB;oBAAA;;AAAA,GAApB;AAuBA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;AAIpB;;AAEG;SACH,eAAA;AACC,aAAO,KAAK,gBAAL,CAAsB,WAAtB,CAAP;AACA,KATmB;;AAZpB;;;;;;;;;;;AAWG;SACH,aAAqB,KAArB,EAAkC;AACjC,WAAK,gBAAL,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,KAA1C,EAAiD,IAAjD;AACA,KAFmB;oBAAA;;AAAA,GAApB;AAWD,SAAA,UAAA;AAAC,CA1KD,CAAgC,IAAhC,CAAA;;;AA4KA;;;;;AAKG;;AACH,QAAQ,CAAC,iBAAT,CAA2B,YAA3B,IAA2C,UAA3C","sourcesContent":["/**\r\n * Funnel tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickProperties extends ITickProperties {\r\n\tlocationX?: number;\r\n\r\n\tlocationY?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelTickAdapters extends ITickAdapters, IFunnelTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nexport class FunnelTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<Label>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<FunnelSlice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelTick\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\r\n\t\tthis.setPropertyValue(\"locationX\", 0);\r\n\t\tthis.setPropertyValue(\"locationY\", 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: FunnelSlice = this.slice;\r\n\t\tlet point = slice.getPoint(this.locationX, this.locationY);\r\n\r\n\t\tif (point) {\r\n\t\t\tlet label = this.label;\r\n\r\n\t\t\tlet series = <FunnelSeries>slice.dataItem.component;\r\n\r\n\t\t\tif (series.orientation == \"vertical\") {\r\n\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tx1 += label.maxRight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tlet p1 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\r\n\t\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\ty1 += label.maxBottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tlet p1 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\r\n\t\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [[FunnelSlice]] element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: FunnelSlice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this, false),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return FunnelSlice\r\n\t */\r\n\tpublic get slice(): FunnelSlice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tthis.setPropertyValue(\"locationX\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tthis.setPropertyValue(\"locationY\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}