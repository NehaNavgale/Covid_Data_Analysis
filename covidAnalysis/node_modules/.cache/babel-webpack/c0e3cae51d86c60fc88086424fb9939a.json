{"ast":null,"code":"/**\n * Axis Tick module\n */\nimport * as tslib_1 from \"tslib\";\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\nimport { Tick } from \"../elements/Tick\";\nimport { registry } from \"../../core/Registry\";\n/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Draws an axis tick\n * @see {@link IAxisTickEvents} for a list of available events\n * @see {@link IAxisTickAdapters} for a list of available Adapters\n */\n\nvar AxisTick =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(AxisTick, _super);\n\n  function AxisTick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisTick\";\n    _this.element = _this.paper.add(\"path\");\n    _this.location = 0.5;\n    _this.isMeasured = false;\n    _this.pixelPerfect = true;\n    _this.strokeOpacity = 0;\n    _this.length = 5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisTick.prototype, \"location\", {\n    get: function get() {\n      return this.getPropertyValue(\"location\");\n    },\n    set: function set(value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisTick.prototype, \"inside\", {\n    get: function get() {\n      return this.getPropertyValue(\"inside\");\n    },\n    set: function set(value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @ignore\n   */\n\n  AxisTick.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n\n    return changed;\n  };\n\n  return AxisTick;\n}(Tick);\n\nexport { AxisTick };\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\n\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;","map":{"version":3,"sources":["../../../../../src/.internal/charts/axes/AxisTick.ts"],"names":[],"mappings":"AAAA;;AAEG;;AAEH;;;;;AAKG;;AACH,SAAS,IAAT,QAAkE,kBAAlE;AAEA,SAAS,QAAT,QAAyB,qBAAzB;AAgCA;;;;;AAKG;;AAEH;;;;AAIG;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,OAAA,CAAA,SAAA,CAAA,QAAA,EAAA,MAAA;;AAwB7B,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGC,IAAA,KAAI,CAAC,SAAL,GAAiB,UAAjB;AAEA,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,MAAf,CAAf;AAEA,IAAA,KAAI,CAAC,QAAL,GAAgB,GAAhB;AAEA,IAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;AAEA,IAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AAEA,IAAA,KAAI,CAAC,aAAL,GAAqB,CAArB;AAEA,IAAA,KAAI,CAAC,MAAL,GAAc,CAAd;;AAEA,IAAA,KAAI,CAAC,UAAL;;;AACA;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAIZ,eAAA;AACC,aAAO,KAAK,gBAAL,CAAsB,UAAtB,CAAP;AACA,KANW;SAAZ,aAAa,KAAb,EAAoC;AACnC,WAAK,gBAAL,CAAsB,UAAtB,EAAkC,KAAlC,EAAyC,IAAzC;AACA,KAFW;oBAAA;;AAAA,GAAZ;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAIV,eAAA;AACC,aAAO,KAAK,gBAAL,CAAsB,QAAtB,CAAP;AACA,KANS;SAAV,aAAW,KAAX,EAAyB;AACxB,WAAK,gBAAL,CAAsB,QAAtB,EAAgC,KAAhC,EAAuC,IAAvC;AACA,KAFS;oBAAA;;AAAA,GAAV;AASA;;AAEG;;AACO,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAoC;AACnC,QAAI,OAAO,GAAG,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,KAAlB,CAAd;;AACA,QAAG,KAAK,IAAR,EAAa;AACZ,WAAK,IAAL,CAAU,mBAAV;AACA;;AACD,WAAO,OAAP;AACA,GANS;;AAOX,SAAA,QAAA;AAAC,CAvED,CAA8B,IAA9B,CAAA;;;AA0EA;;;;;AAKG;;AACH,QAAQ,CAAC,iBAAT,CAA2B,UAA3B,IAAyC,QAAzC","sourcesContent":["/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\tlocation?: number;\r\n\tinside?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tset location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\tget location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\tset inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\tget inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}