{"ast":null,"code":"import _get from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { EventEmitter, Component, Input, Output, ComponentFactoryResolver, ViewChild, ViewContainerRef, ChangeDetectionStrategy, NgModule, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { CompleterService, Ng2CompleterModule } from 'ng2-completer';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { debounceTime, map, distinctUntilChanged, skip, takeUntil } from 'rxjs/operators';\nimport { HttpParams } from '@angular/common/http';\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng2-completer';\nimport * as ɵngcc3 from '@angular/forms';\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nvar _c0 = [\"dynamicTarget\"];\n\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"select-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onStopEditing();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onStopEditing();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"completer-editor\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r3.cell);\n  }\n}\n\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onStopEditing();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onEdited($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nvar _c1 = \"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{line-height:normal;padding:.375em .75em;width:100%}\";\n\nfunction SelectEditorComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n  }\n}\n\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"custom-view-component\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n  }\n}\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    ɵngcc0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r3.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    ɵngcc0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    ɵngcc0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n  }\n}\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"select-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n  }\n}\n\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n  }\n}\n\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"completer-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n  }\n}\n\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n  }\n}\n\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.resetFilter($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    var tmp_0_0 = null;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n  }\n}\n\nvar _c2 = [\"inputControl\"];\n\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", option_r2.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 7);\n    ɵngcc0.ɵɵtext(3, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var page_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var page_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.paginate(page_r3);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var page_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(page_r3);\n  }\n}\n\nvar _c3 = function _c3(a0) {\n  return {\n    active: a0\n  };\n};\n\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    ɵngcc0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var page_r3 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c3, ctx_r2.getPage() == page_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n  }\n}\n\nvar _c4 = function _c4(a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction PagerComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nav\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"a\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1);\n    });\n    ɵngcc0.ɵɵelementStart(4, \"span\", 6);\n    ɵngcc0.ɵɵtext(5, \"\\xAB\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"span\", 7);\n    ɵngcc0.ɵɵtext(7, \"First\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(9, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.getPage() == 1 ? false : ctx_r13.prev();\n    });\n    ɵngcc0.ɵɵelementStart(10, \"span\", 6);\n    ɵngcc0.ɵɵtext(11, \"<\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"span\", 7);\n    ɵngcc0.ɵɵtext(13, \"Prev\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    ɵngcc0.ɵɵelementStart(15, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(16, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next();\n    });\n    ɵngcc0.ɵɵelementStart(17, \"span\", 6);\n    ɵngcc0.ɵɵtext(18, \">\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(19, \"span\", 7);\n    ɵngcc0.ɵɵtext(20, \"Next\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(21, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(22, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast());\n    });\n    ɵngcc0.ɵɵelementStart(23, \"span\", 6);\n    ɵngcc0.ɵɵtext(24, \"\\xBB\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(25, \"span\", 7);\n    ɵngcc0.ɵɵtext(26, \"Last\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c4, ctx_r0.getPage() == 1));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c4, ctx_r0.getPage() == 1));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c4, ctx_r0.getPage() == ctx_r0.getLast()));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c4, ctx_r0.getPage() == ctx_r0.getLast()));\n  }\n}\n\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", item_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r17);\n  }\n}\n\nfunction PagerComponent_nav_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nav\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 17);\n    ɵngcc0.ɵɵtext(2, \" Per Page: \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"select\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onChangePerPage($event);\n    })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.currentPerPage = $event;\n    });\n    ɵngcc0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n  }\n}\n\nvar _c5 = [\"ng2-st-tbody\", \"\"];\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.multipleSelectRow.emit(row_r2);\n    });\n    ɵngcc0.ɵɵelement(1, \"input\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"ng2-st-tbody-custom\", 9);\n    ɵngcc0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_custom_custom_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.custom.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\n    ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_edit_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.edit.emit(row_r2);\n    })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_delete_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.delete.emit(row_r2);\n    })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r19.editRowSelect.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelement(1, \"ng2-smart-table-cell\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var cell_r22 = ctx.$implicit;\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"ng2-st-tbody-custom\", 9);\n    ɵngcc0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_custom_custom_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r25.custom.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\n    ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_edit_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.edit.emit(row_r2);\n    })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_delete_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext();\n      return ctx_r29.delete.emit(row_r2);\n    })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r31 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r31.editRowSelect.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n  }\n}\n\nvar _c6 = function _c6(a0) {\n  return {\n    selected: a0\n  };\n};\n\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r34 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      var row_r2 = ctx.$implicit;\n      var ctx_r33 = ɵngcc0.ɵɵnextContext();\n      return ctx_r33.userSelectRow.emit(row_r2);\n    })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      var row_r2 = ctx.$implicit;\n      var ctx_r35 = ɵngcc0.ɵɵnextContext();\n      return ctx_r35.rowHover.emit(row_r2);\n    });\n    ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n    ɵngcc0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c6, row_r2.isSelected));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n  }\n}\n\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onEdit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onDelete($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var action_r1 = ctx.$implicit;\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onCustom(action_r1, $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var action_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", action_r1.title, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nvar _c7 = [\"ng2-st-thead\", \"\"];\n\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.sort.emit($event);\n    })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.selectAllRows.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n  }\n}\n\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.create.emit($event);\n    })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.filter.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n  }\n}\n\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n  }\n}\n\nvar _c8 = [\"ng2-st-actions-title\", \"\"];\nvar _c9 = [\"ng2-st-add-button\", \"\"];\n\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.onAdd($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nvar _c10 = [\"ng2-st-checkbox-select-all\", \"\"];\n\nfunction TitleComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2._sort($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n  }\n}\n\nfunction TitleComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.column.title);\n  }\n}\n\nvar _c11 = [\"ng2-st-thead-filters-row\", \"\"];\n\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\");\n  }\n}\n\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.create.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵelementStart(1, \"ng2-smart-table-filter\", 5);\n    ɵngcc0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_ng2_smart_table_filter_filter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.filter.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r6 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 6);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.create.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n  }\n}\n\nvar _c12 = [\"ng2-st-thead-form-row\", \"\"];\n\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"ng2-st-actions\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onCreate($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"ng2-smart-table-cell\", 5);\n    ɵngcc0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_ng2_smart_table_cell_edited_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onCreate($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var cell_r6 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n  }\n}\n\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"ng2-st-actions\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onCreate($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nvar _c13 = [\"ng2-st-thead-titles-row\", \"\"];\n\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.selectAllRows.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"ng2-st-column-title\", 6);\n    ɵngcc0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_ng2_st_column_title_sort_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.sort.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r6 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\n    ɵngcc0.ɵɵstyleProp(\"width\", column_r6.width);\n    ɵngcc0.ɵɵproperty(\"ngClass\", column_r6.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nfunction Ng2SmartTableComponent_thead_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"thead\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function Ng2SmartTableComponent_thead_1_Template_thead_create_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.create.emit($event);\n    })(\"selectAllRows\", function Ng2SmartTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onSelectAllRows($event);\n    })(\"sort\", function Ng2SmartTableComponent_thead_1_Template_thead_sort_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.sort($event);\n    })(\"filter\", function Ng2SmartTableComponent_thead_1_Template_thead_filter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.filter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n  }\n}\n\nfunction Ng2SmartTableComponent_ng2_smart_table_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ng2-smart-table-pager\", 5);\n    ɵngcc0.ɵɵlistener(\"changePage\", function Ng2SmartTableComponent_ng2_smart_table_pager_3_Template_ng2_smart_table_pager_changePage_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.changePage($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n  }\n}\n\nvar deepExtend = function deepExtend() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  var target = arguments[0]; // convert arguments to array and cut off target object\n\n  var args = Array.prototype.slice.call(arguments, 1);\n  var val, src;\n  args.forEach(function (obj) {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n\n      val = obj[key]; // new value\n      // recursion prevention\n\n      if (val === target) {\n        return;\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return; // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return; // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return; // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};\n\nvar Deferred = function Deferred() {\n  var _this = this;\n\n  _classCallCheck(this, Deferred);\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = resolve;\n    _this.reject = reject;\n  });\n}; // getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\n\n\nfunction getDeepFromObject() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var name = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  var keys = name.split('.'); // clone the object\n\n  var level = deepExtend({}, object);\n  keys.forEach(function (k) {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    }\n  });\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nfunction getPageForRowIndex(index, perPage) {\n  // we need to add 1 to convert 0-based index to 1-based page number.\n  return Math.floor(index / perPage) + 1;\n}\n\nfunction prepareValue(value) {\n  return value;\n}\n\nvar Cell = /*#__PURE__*/function () {\n  function Cell(value, row, column, dataSet) {\n    _classCallCheck(this, Cell);\n\n    this.value = value;\n    this.row = row;\n    this.column = column;\n    this.dataSet = dataSet;\n    this.newValue = '';\n    this.newValue = value;\n  }\n\n  _createClass(Cell, [{\n    key: \"getColumn\",\n    value: function getColumn() {\n      return this.column;\n    }\n  }, {\n    key: \"getRow\",\n    value: function getRow() {\n      return this.row;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var valid = this.column.getValuePrepareFunction() instanceof Function;\n      var prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n      return prepare.call(null, this.value, this.row.getData(), this);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.newValue = value;\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.getColumn().id;\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this.getColumn().title;\n    }\n  }, {\n    key: \"isEditable\",\n    value: function isEditable() {\n      if (this.getRow().index === -1) {\n        return this.getColumn().isAddable;\n      } else {\n        return this.getColumn().isEditable;\n      }\n    }\n  }]);\n\n  return Cell;\n}();\n\nCell.PREPARE = prepareValue;\n\nvar Row = /*#__PURE__*/function () {\n  function Row(index, data, _dataSet) {\n    _classCallCheck(this, Row);\n\n    this.index = index;\n    this.data = data;\n    this._dataSet = _dataSet;\n    this.isSelected = false;\n    this.isInEditing = false;\n    this.cells = [];\n    this.process();\n  }\n\n  _createClass(Row, [{\n    key: \"getCell\",\n    value: function getCell(column) {\n      return this.cells.find(function (el) {\n        return el.getColumn() === column;\n      });\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      return this.cells;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: \"getIsSelected\",\n    value: function getIsSelected() {\n      return this.isSelected;\n    }\n  }, {\n    key: \"getNewData\",\n    value: function getNewData() {\n      var values = Object.assign({}, this.data);\n      this.getCells().forEach(function (cell) {\n        return values[cell.getColumn().id] = cell.newValue;\n      });\n      return values;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      this.data = data;\n      this.process();\n    }\n  }, {\n    key: \"process\",\n    value: function process() {\n      var _this2 = this;\n\n      this.cells = [];\n\n      this._dataSet.getColumns().forEach(function (column) {\n        var cell = _this2.createCell(column);\n\n        _this2.cells.push(cell);\n      });\n    }\n  }, {\n    key: \"createCell\",\n    value: function createCell(column) {\n      var defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n      var value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n      return new Cell(value, this, column, this._dataSet);\n    }\n  }]);\n\n  return Row;\n}();\n\nvar Column = /*#__PURE__*/function () {\n  function Column(id, settings, dataSet) {\n    _classCallCheck(this, Column);\n\n    this.id = id;\n    this.settings = settings;\n    this.dataSet = dataSet;\n    this.title = '';\n    this.type = '';\n    this.class = '';\n    this.width = '';\n    this.hide = false;\n    this.isSortable = false;\n    this.isEditable = true;\n    this.isAddable = true;\n    this.isFilterable = false;\n    this.sortDirection = '';\n    this.defaultSortDirection = '';\n    this.editor = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.filter = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.renderComponent = null;\n    this.process();\n  }\n\n  _createClass(Column, [{\n    key: \"getOnComponentInitFunction\",\n    value: function getOnComponentInitFunction() {\n      return this.onComponentInitFunction;\n    }\n  }, {\n    key: \"getCompareFunction\",\n    value: function getCompareFunction() {\n      return this.compareFunction;\n    }\n  }, {\n    key: \"getValuePrepareFunction\",\n    value: function getValuePrepareFunction() {\n      return this.valuePrepareFunction;\n    }\n  }, {\n    key: \"getFilterFunction\",\n    value: function getFilterFunction() {\n      return this.filterFunction;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.editor && this.editor.config;\n    }\n  }, {\n    key: \"getFilterType\",\n    value: function getFilterType() {\n      return this.filter && this.filter.type;\n    }\n  }, {\n    key: \"getFilterConfig\",\n    value: function getFilterConfig() {\n      return this.filter && this.filter.config;\n    }\n  }, {\n    key: \"process\",\n    value: function process() {\n      this.title = this.settings['title'];\n      this.class = this.settings['class'];\n      this.width = this.settings['width'];\n      this.hide = !!this.settings['hide'];\n      this.type = this.prepareType();\n      this.editor = this.settings['editor'];\n      this.filter = this.settings['filter'];\n      this.renderComponent = this.settings['renderComponent'];\n      this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\n      this.defaultSortDirection = ['asc', 'desc'].indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\n      this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\n      this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\n      this.isAddable = typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\n      this.sortDirection = this.prepareSortDirection();\n      this.compareFunction = this.settings['compareFunction'];\n      this.valuePrepareFunction = this.settings['valuePrepareFunction'];\n      this.filterFunction = this.settings['filterFunction'];\n      this.onComponentInitFunction = this.settings['onComponentInitFunction'];\n    }\n  }, {\n    key: \"prepareType\",\n    value: function prepareType() {\n      return this.settings['type'] || this.determineType();\n    }\n  }, {\n    key: \"prepareSortDirection\",\n    value: function prepareSortDirection() {\n      return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\n    }\n  }, {\n    key: \"determineType\",\n    value: function determineType() {\n      // TODO: determine type by data\n      return 'text';\n    }\n  }]);\n\n  return Column;\n}();\n\nvar DataSet = /*#__PURE__*/function () {\n  function DataSet() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var columnSettings = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, DataSet);\n\n    this.columnSettings = columnSettings;\n    this.data = [];\n    this.columns = [];\n    this.rows = [];\n    this.createColumns(columnSettings);\n    this.setData(data);\n    this.createNewRow();\n  }\n\n  _createClass(DataSet, [{\n    key: \"setData\",\n    value: function setData(data) {\n      this.data = data;\n      this.createRows();\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      return this.columns;\n    }\n  }, {\n    key: \"getRows\",\n    value: function getRows() {\n      return this.rows;\n    }\n  }, {\n    key: \"getFirstRow\",\n    value: function getFirstRow() {\n      return this.rows[0];\n    }\n  }, {\n    key: \"getLastRow\",\n    value: function getLastRow() {\n      return this.rows[this.rows.length - 1];\n    }\n  }, {\n    key: \"findRowByData\",\n    value: function findRowByData(data) {\n      return this.rows.find(function (row) {\n        return row.getData() === data;\n      });\n    }\n  }, {\n    key: \"deselectAll\",\n    value: function deselectAll() {\n      this.rows.forEach(function (row) {\n        row.isSelected = false;\n      }); // we need to clear selectedRow field because no one row selected\n\n      this.selectedRow = undefined;\n    }\n  }, {\n    key: \"selectRow\",\n    value: function selectRow(row) {\n      var previousIsSelected = row.isSelected;\n      this.deselectAll();\n      row.isSelected = !previousIsSelected;\n      this.selectedRow = row;\n      return this.selectedRow;\n    }\n  }, {\n    key: \"multipleSelectRow\",\n    value: function multipleSelectRow(row) {\n      row.isSelected = !row.isSelected;\n      this.selectedRow = row;\n      return this.selectedRow;\n    }\n  }, {\n    key: \"selectPreviousRow\",\n    value: function selectPreviousRow() {\n      if (this.rows.length > 0) {\n        var index = this.selectedRow ? this.selectedRow.index : 0;\n\n        if (index > this.rows.length - 1) {\n          index = this.rows.length - 1;\n        }\n\n        this.selectRow(this.rows[index]);\n        return this.selectedRow;\n      }\n    }\n  }, {\n    key: \"selectFirstRow\",\n    value: function selectFirstRow() {\n      if (this.rows.length > 0) {\n        this.selectRow(this.rows[0]);\n        return this.selectedRow;\n      }\n    }\n  }, {\n    key: \"selectLastRow\",\n    value: function selectLastRow() {\n      if (this.rows.length > 0) {\n        this.selectRow(this.rows[this.rows.length - 1]);\n        return this.selectedRow;\n      }\n    }\n  }, {\n    key: \"selectRowByIndex\",\n    value: function selectRowByIndex(index) {\n      var rowsLength = this.rows.length;\n\n      if (rowsLength === 0) {\n        return;\n      }\n\n      if (!index) {\n        this.selectFirstRow();\n        return this.selectedRow;\n      }\n\n      if (index > 0 && index < rowsLength) {\n        this.selectRow(this.rows[index]);\n        return this.selectedRow;\n      } // we need to deselect all rows if we got an incorrect index\n\n\n      this.deselectAll();\n    }\n  }, {\n    key: \"willSelectFirstRow\",\n    value: function willSelectFirstRow() {\n      this.willSelect = 'first';\n    }\n  }, {\n    key: \"willSelectLastRow\",\n    value: function willSelectLastRow() {\n      this.willSelect = 'last';\n    }\n  }, {\n    key: \"select\",\n    value: function select(selectedRowIndex) {\n      if (this.getRows().length === 0) {\n        return;\n      }\n\n      if (this.willSelect) {\n        if (this.willSelect === 'first') {\n          this.selectFirstRow();\n        }\n\n        if (this.willSelect === 'last') {\n          this.selectLastRow();\n        }\n\n        this.willSelect = '';\n      } else {\n        this.selectRowByIndex(selectedRowIndex);\n      }\n\n      return this.selectedRow;\n    }\n  }, {\n    key: \"createNewRow\",\n    value: function createNewRow() {\n      this.newRow = new Row(-1, {}, this);\n      this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     * @param settings\n     * @private\n     */\n\n  }, {\n    key: \"createColumns\",\n    value: function createColumns(settings) {\n      for (var id in settings) {\n        if (settings.hasOwnProperty(id)) {\n          this.columns.push(new Column(id, settings[id], this));\n        }\n      }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     * @private\n     */\n\n  }, {\n    key: \"createRows\",\n    value: function createRows() {\n      var _this3 = this;\n\n      this.rows = [];\n      this.data.forEach(function (el, index) {\n        _this3.rows.push(new Row(index, el, _this3));\n      });\n    }\n  }]);\n\n  return DataSet;\n}();\n\nvar Grid = /*#__PURE__*/function () {\n  function Grid(source, settings) {\n    _classCallCheck(this, Grid);\n\n    this.createFormShown = false;\n    this.onSelectRowSource = new Subject();\n    this.onDeselectRowSource = new Subject();\n    this.setSettings(settings);\n    this.setSource(source);\n  }\n\n  _createClass(Grid, [{\n    key: \"detach\",\n    value: function detach() {\n      if (this.sourceOnChangedSubscription) {\n        this.sourceOnChangedSubscription.unsubscribe();\n      }\n\n      if (this.sourceOnUpdatedSubscription) {\n        this.sourceOnUpdatedSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"showActionColumn\",\n    value: function showActionColumn(position) {\n      return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n  }, {\n    key: \"isCurrentActionsPosition\",\n    value: function isCurrentActionsPosition(position) {\n      return position == this.getSetting('actions.position');\n    }\n  }, {\n    key: \"isActionsVisible\",\n    value: function isActionsVisible() {\n      return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n  }, {\n    key: \"isMultiSelectVisible\",\n    value: function isMultiSelectVisible() {\n      return this.getSetting('selectMode') === 'multi';\n    }\n  }, {\n    key: \"getNewRow\",\n    value: function getNewRow() {\n      return this.dataSet.newRow;\n    }\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n      this.dataSet = new DataSet([], this.getSetting('columns'));\n\n      if (this.source) {\n        this.source.refresh();\n      }\n    }\n  }, {\n    key: \"getDataSet\",\n    value: function getDataSet() {\n      return this.dataSet;\n    }\n  }, {\n    key: \"setSource\",\n    value: function setSource(source) {\n      var _this4 = this;\n\n      this.source = this.prepareSource(source);\n      this.detach();\n      this.sourceOnChangedSubscription = this.source.onChanged().subscribe(function (changes) {\n        return _this4.processDataChange(changes);\n      });\n      this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe(function (data) {\n        var changedRow = _this4.dataSet.findRowByData(data);\n\n        changedRow.setData(data);\n      });\n    }\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name, defaultValue) {\n      return getDeepFromObject(this.settings, name, defaultValue);\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      return this.dataSet.getColumns();\n    }\n  }, {\n    key: \"getRows\",\n    value: function getRows() {\n      return this.dataSet.getRows();\n    }\n  }, {\n    key: \"selectRow\",\n    value: function selectRow(row) {\n      this.dataSet.selectRow(row);\n    }\n  }, {\n    key: \"multipleSelectRow\",\n    value: function multipleSelectRow(row) {\n      this.dataSet.multipleSelectRow(row);\n    }\n  }, {\n    key: \"onSelectRow\",\n    value: function onSelectRow() {\n      return this.onSelectRowSource.asObservable();\n    }\n  }, {\n    key: \"onDeselectRow\",\n    value: function onDeselectRow() {\n      return this.onDeselectRowSource.asObservable();\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(row) {\n      row.isInEditing = true;\n    }\n  }, {\n    key: \"create\",\n    value: function create(row, confirmEmitter) {\n      var _this5 = this;\n\n      var deferred = new Deferred();\n      deferred.promise.then(function (newData) {\n        newData = newData ? newData : row.getNewData();\n\n        if (deferred.resolve.skipAdd) {\n          _this5.createFormShown = false;\n        } else {\n          _this5.source.prepend(newData).then(function () {\n            _this5.createFormShown = false;\n\n            _this5.dataSet.createNewRow();\n          });\n        }\n      }).catch(function (err) {// doing nothing\n      });\n\n      if (this.getSetting('add.confirmCreate')) {\n        confirmEmitter.emit({\n          newData: row.getNewData(),\n          source: this.source,\n          confirm: deferred\n        });\n      } else {\n        deferred.resolve();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(row, confirmEmitter) {\n      var _this6 = this;\n\n      var deferred = new Deferred();\n      deferred.promise.then(function (newData) {\n        newData = newData ? newData : row.getNewData();\n\n        if (deferred.resolve.skipEdit) {\n          row.isInEditing = false;\n        } else {\n          _this6.source.update(row.getData(), newData).then(function () {\n            row.isInEditing = false;\n          });\n        }\n      }).catch(function (err) {// doing nothing\n      });\n\n      if (this.getSetting('edit.confirmSave')) {\n        confirmEmitter.emit({\n          data: row.getData(),\n          newData: row.getNewData(),\n          source: this.source,\n          confirm: deferred\n        });\n      } else {\n        deferred.resolve();\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(row, confirmEmitter) {\n      var _this7 = this;\n\n      var deferred = new Deferred();\n      deferred.promise.then(function () {\n        _this7.source.remove(row.getData());\n      }).catch(function (err) {// doing nothing\n      });\n\n      if (this.getSetting('delete.confirmDelete')) {\n        confirmEmitter.emit({\n          data: row.getData(),\n          source: this.source,\n          confirm: deferred\n        });\n      } else {\n        deferred.resolve();\n      }\n    }\n  }, {\n    key: \"processDataChange\",\n    value: function processDataChange(changes) {\n      if (this.shouldProcessChange(changes)) {\n        this.dataSet.setData(changes['elements']);\n\n        if (this.getSetting('selectMode') !== 'multi') {\n          var row = this.determineRowToSelect(changes);\n\n          if (row) {\n            this.onSelectRowSource.next(row);\n          } else {\n            this.onDeselectRowSource.next(null);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"shouldProcessChange\",\n    value: function shouldProcessChange(changes) {\n      if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\n        return true;\n      } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n\n  }, {\n    key: \"determineRowToSelect\",\n    value: function determineRowToSelect(changes) {\n      if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n        return this.dataSet.select(this.getRowIndexToSelect());\n      }\n\n      if (this.shouldSkipSelection()) {\n        return null;\n      }\n\n      if (changes['action'] === 'remove') {\n        if (changes['elements'].length === 0) {\n          // we have to store which one to select as the data will be reloaded\n          this.dataSet.willSelectLastRow();\n        } else {\n          return this.dataSet.selectPreviousRow();\n        }\n      }\n\n      if (changes['action'] === 'append') {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectLastRow();\n      }\n\n      if (changes['action'] === 'add') {\n        return this.dataSet.selectFirstRow();\n      }\n\n      if (changes['action'] === 'update') {\n        return this.dataSet.selectFirstRow();\n      }\n\n      if (changes['action'] === 'prepend') {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectFirstRow();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"prepareSource\",\n    value: function prepareSource(source) {\n      var initialSource = this.getInitialSort();\n\n      if (initialSource && initialSource['field'] && initialSource['direction']) {\n        source.setSort([initialSource], false);\n      }\n\n      if (this.getSetting('pager.display') === true) {\n        source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n      }\n\n      source.refresh();\n      return source;\n    }\n  }, {\n    key: \"getInitialSort\",\n    value: function getInitialSort() {\n      var sortConf = {};\n      this.getColumns().forEach(function (column) {\n        if (column.isSortable && column.defaultSortDirection) {\n          sortConf['field'] = column.id;\n          sortConf['direction'] = column.defaultSortDirection;\n          sortConf['compare'] = column.getCompareFunction();\n        }\n      });\n      return sortConf;\n    }\n  }, {\n    key: \"getSelectedRows\",\n    value: function getSelectedRows() {\n      return this.dataSet.getRows().filter(function (r) {\n        return r.isSelected;\n      });\n    }\n  }, {\n    key: \"selectAllRows\",\n    value: function selectAllRows(status) {\n      this.dataSet.getRows().forEach(function (r) {\n        return r.isSelected = status;\n      });\n    }\n  }, {\n    key: \"getFirstRow\",\n    value: function getFirstRow() {\n      return this.dataSet.getFirstRow();\n    }\n  }, {\n    key: \"getLastRow\",\n    value: function getLastRow() {\n      return this.dataSet.getLastRow();\n    }\n  }, {\n    key: \"getSelectionInfo\",\n    value: function getSelectionInfo() {\n      var switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n      var selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n\n      var _this$getSetting = this.getSetting('pager'),\n          perPage = _this$getSetting.perPage,\n          page = _this$getSetting.page;\n\n      return {\n        perPage: perPage,\n        page: page,\n        selectedRowIndex: selectedRowIndex,\n        switchPageToSelectedRowPage: switchPageToSelectedRowPage\n      };\n    }\n  }, {\n    key: \"getRowIndexToSelect\",\n    value: function getRowIndexToSelect() {\n      var _this$getSelectionInf = this.getSelectionInfo(),\n          switchPageToSelectedRowPage = _this$getSelectionInf.switchPageToSelectedRowPage,\n          selectedRowIndex = _this$getSelectionInf.selectedRowIndex,\n          perPage = _this$getSelectionInf.perPage;\n\n      var dataAmount = this.source.count();\n      /**\n       * source - contains all table data\n       * dataSet - contains data for current page\n       * selectedRowIndex - contains index for data in all data\n       *\n       * because of that, we need to count index for a specific row in page\n       * if\n       * `switchPageToSelectedRowPage` - we need to change page automatically\n       * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n       * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n       *  if we return index witch not points to existing data - no line will be highlighted)\n       */\n\n      return switchPageToSelectedRowPage && selectedRowIndex < dataAmount && selectedRowIndex >= 0 ? selectedRowIndex % perPage : selectedRowIndex;\n    }\n  }, {\n    key: \"getPageToSelect\",\n    value: function getPageToSelect(source) {\n      var _this$getSelectionInf2 = this.getSelectionInfo(),\n          switchPageToSelectedRowPage = _this$getSelectionInf2.switchPageToSelectedRowPage,\n          selectedRowIndex = _this$getSelectionInf2.selectedRowIndex,\n          perPage = _this$getSelectionInf2.perPage,\n          page = _this$getSelectionInf2.page;\n\n      var pageToSelect = Math.max(1, page);\n\n      if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n        pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n      }\n\n      var maxPageAmount = Math.ceil(source.count() / perPage);\n      return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n  }, {\n    key: \"shouldSkipSelection\",\n    value: function shouldSkipSelection() {\n      /**\n       * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n       *\n       * Therefore, in order to select a row after some changes,\n       * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n       *\n       * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n       *\n       * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n       * because when < 0 all lines must be deselected\n       */\n      var selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n      return selectedRowIndex < 0;\n    }\n  }]);\n\n  return Grid;\n}();\n\nvar CellComponent = /*#__PURE__*/function () {\n  function CellComponent() {\n    _classCallCheck(this, CellComponent);\n\n    this.inputClass = '';\n    this.mode = 'inline';\n    this.isInEditing = false;\n    this.edited = new EventEmitter();\n  }\n\n  _createClass(CellComponent, [{\n    key: \"onEdited\",\n    value: function onEdited(event) {\n      if (this.isNew) {\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n      } else {\n        this.grid.save(this.row, this.editConfirm);\n      }\n    }\n  }]);\n\n  return CellComponent;\n}();\n\nCellComponent.ɵfac = function CellComponent_Factory(t) {\n  return new (t || CellComponent)();\n};\n\nCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CellComponent,\n  selectors: [[\"ng2-smart-table-cell\"]],\n  inputs: {\n    inputClass: \"inputClass\",\n    mode: \"mode\",\n    isInEditing: \"isInEditing\",\n    grid: \"grid\",\n    row: \"row\",\n    editConfirm: \"editConfirm\",\n    createConfirm: \"createConfirm\",\n    isNew: \"isNew\",\n    cell: \"cell\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n  template: function CellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n      ɵngcc0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ViewCellComponent, EditCellComponent];\n  },\n  encapsulation: 2\n});\nCellComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  row: [{\n    type: Input\n  }],\n  editConfirm: [{\n    type: Input\n  }],\n  createConfirm: [{\n    type: Input\n  }],\n  isNew: [{\n    type: Input\n  }],\n  cell: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  isInEditing: [{\n    type: Input\n  }],\n  edited: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-smart-table-cell',\n      template: \"\\n    <table-cell-view-mode *ngIf=\\\"!isInEditing\\\" [cell]=\\\"cell\\\"></table-cell-view-mode>\\n    <table-cell-edit-mode *ngIf=\\\"isInEditing\\\" [cell]=\\\"cell\\\"\\n                          [inputClass]=\\\"inputClass\\\"\\n                          (edited)=\\\"onEdited($event)\\\">\\n    </table-cell-edit-mode>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputClass: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    isInEditing: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }],\n    isNew: [{\n      type: Input\n    }],\n    cell: [{\n      type: Input\n    }]\n  });\n})();\n\nvar EditCellDefault = /*#__PURE__*/function () {\n  function EditCellDefault() {\n    _classCallCheck(this, EditCellDefault);\n\n    this.inputClass = '';\n    this.edited = new EventEmitter();\n  }\n\n  _createClass(EditCellDefault, [{\n    key: \"onEdited\",\n    value: function onEdited(event) {\n      this.edited.next(event);\n      return false;\n    }\n  }, {\n    key: \"onStopEditing\",\n    value: function onStopEditing() {\n      this.cell.getRow().isInEditing = false;\n      return false;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      event.stopPropagation();\n    }\n  }]);\n\n  return EditCellDefault;\n}();\n\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) {\n  return new (t || EditCellDefault)();\n};\n\nEditCellDefault.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: EditCellDefault,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    inputClass: \"inputClass\",\n    cell: \"cell\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function EditCellDefault_Template(rf, ctx) {},\n  encapsulation: 2\n});\nEditCellDefault.propDecorators = {\n  cell: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  edited: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditCellDefault, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputClass: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    cell: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CustomEditComponent = /*#__PURE__*/function (_EditCellDefault) {\n  _inherits(CustomEditComponent, _EditCellDefault);\n\n  var _super = _createSuper(CustomEditComponent);\n\n  function CustomEditComponent(resolver) {\n    var _this8;\n\n    _classCallCheck(this, CustomEditComponent);\n\n    _this8 = _super.call(this);\n    _this8.resolver = resolver;\n    return _this8;\n  }\n\n  _createClass(CustomEditComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this9 = this;\n\n      if (this.cell && !this.customComponent) {\n        var componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n        this.customComponent.instance.cell = this.cell;\n        this.customComponent.instance.inputClass = this.inputClass;\n        this.customComponent.instance.onStopEditing.subscribe(function () {\n          return _this9.onStopEditing();\n        });\n        this.customComponent.instance.onEdited.subscribe(function (event) {\n          return _this9.onEdited(event);\n        });\n        this.customComponent.instance.onClick.subscribe(function (event) {\n          return _this9.onClick(event);\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n  }]);\n\n  return CustomEditComponent;\n}(EditCellDefault);\n\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) {\n  return new (t || CustomEditComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n};\n\nCustomEditComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomEditComponent,\n  selectors: [[\"table-cell-custom-editor\"]],\n  viewQuery: function CustomEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\nCustomEditComponent.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }];\n};\n\nCustomEditComponent.propDecorators = {\n  dynamicTarget: [{\n    type: ViewChild,\n    args: ['dynamicTarget', {\n      read: ViewContainerRef,\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-custom-editor',\n      template: \"\\n    <ng-template #dynamicTarget></ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }];\n  }, {\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar DefaultEditComponent = /*#__PURE__*/function (_EditCellDefault2) {\n  _inherits(DefaultEditComponent, _EditCellDefault2);\n\n  var _super2 = _createSuper(DefaultEditComponent);\n\n  function DefaultEditComponent() {\n    _classCallCheck(this, DefaultEditComponent);\n\n    return _super2.call(this);\n  }\n\n  _createClass(DefaultEditComponent, [{\n    key: \"getEditorType\",\n    value: function getEditorType() {\n      return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n  }]);\n\n  return DefaultEditComponent;\n}(EditCellDefault);\n\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) {\n  return new (t || DefaultEditComponent)();\n};\n\nDefaultEditComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DefaultEditComponent,\n  selectors: [[\"table-cell-default-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 5,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]],\n  template: function DefaultEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n      ɵngcc0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n      ɵngcc0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n      ɵngcc0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n      ɵngcc0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent];\n  },\n  encapsulation: 2\n});\n\nDefaultEditComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DefaultEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-default-editor',\n      template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\n                   [cell]=\\\"cell\\\"\\n                   [inputClass]=\\\"inputClass\\\"\\n                   (onClick)=\\\"onClick($event)\\\"\\n                   (onEdited)=\\\"onEdited($event)\\\"\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\n    </select-editor>\\n\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\"\\n                     (onEdited)=\\\"onEdited($event)\\\"\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\n    </textarea-editor>\\n\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\">\\n    </checkbox-editor>\\n\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\n                      [cell]=\\\"cell\\\">\\n    </completer-editor>\\n\\n    <input-editor *ngSwitchDefault\\n                  [cell]=\\\"cell\\\"\\n                  [inputClass]=\\\"inputClass\\\"\\n                  (onClick)=\\\"onClick($event)\\\"\\n                  (onEdited)=\\\"onEdited($event)\\\"\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\n    </input-editor>\\n</div>\"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar EditCellComponent = /*#__PURE__*/function () {\n  function EditCellComponent() {\n    _classCallCheck(this, EditCellComponent);\n\n    this.inputClass = '';\n    this.edited = new EventEmitter();\n  }\n\n  _createClass(EditCellComponent, [{\n    key: \"onEdited\",\n    value: function onEdited(event) {\n      this.edited.next(event);\n      return false;\n    }\n  }, {\n    key: \"getEditorType\",\n    value: function getEditorType() {\n      return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n  }]);\n\n  return EditCellComponent;\n}();\n\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) {\n  return new (t || EditCellComponent)();\n};\n\nEditCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: EditCellComponent,\n  selectors: [[\"table-cell-edit-mode\"]],\n  inputs: {\n    inputClass: \"inputClass\",\n    cell: \"cell\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n  template: function EditCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n      ɵngcc0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    }\n  },\n  directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, CustomEditComponent, DefaultEditComponent],\n  encapsulation: 2\n});\nEditCellComponent.propDecorators = {\n  cell: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  edited: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-edit-mode',\n      template: \"\\n      <div [ngSwitch]=\\\"getEditorType()\\\">\\n        <table-cell-custom-editor *ngSwitchCase=\\\"'custom'\\\"\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"onEdited($event)\\\">\\n        </table-cell-custom-editor>\\n        <table-cell-default-editor *ngSwitchDefault\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"onEdited($event)\\\">\\n        </table-cell-default-editor>\\n      </div>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputClass: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    cell: [{\n      type: Input\n    }]\n  });\n})();\n\nvar DefaultEditor = function DefaultEditor() {\n  _classCallCheck(this, DefaultEditor);\n\n  this.onStopEditing = new EventEmitter();\n  this.onEdited = new EventEmitter();\n  this.onClick = new EventEmitter();\n};\n\nDefaultEditor.ɵfac = function DefaultEditor_Factory(t) {\n  return new (t || DefaultEditor)();\n};\n\nDefaultEditor.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DefaultEditor,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    cell: \"cell\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    onStopEditing: \"onStopEditing\",\n    onEdited: \"onEdited\",\n    onClick: \"onClick\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function DefaultEditor_Template(rf, ctx) {},\n  encapsulation: 2\n});\nDefaultEditor.propDecorators = {\n  cell: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  onStopEditing: [{\n    type: Output\n  }],\n  onEdited: [{\n    type: Output\n  }],\n  onClick: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DefaultEditor, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    onStopEditing: [{\n      type: Output\n    }],\n    onEdited: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    cell: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CheckboxEditorComponent = /*#__PURE__*/function (_DefaultEditor) {\n  _inherits(CheckboxEditorComponent, _DefaultEditor);\n\n  var _super3 = _createSuper(CheckboxEditorComponent);\n\n  function CheckboxEditorComponent() {\n    _classCallCheck(this, CheckboxEditorComponent);\n\n    return _super3.call(this);\n  }\n\n  _createClass(CheckboxEditorComponent, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      var trueVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true || true;\n      var falseVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false || false;\n      this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n  }]);\n\n  return CheckboxEditorComponent;\n}(DefaultEditor);\n\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) {\n  return new (t || CheckboxEditorComponent)();\n};\n\nCheckboxEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CheckboxEditorComponent,\n  selectors: [[\"checkbox-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 4,\n  consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]],\n  template: function CheckboxEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"input\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) {\n        return ctx.onChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var tmp_3_0 = null;\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n    }\n  },\n  directives: [ɵngcc1.NgClass],\n  styles: [_c1]\n});\n\nCheckboxEditorComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'checkbox-editor',\n      template: \"\\n    <input [ngClass]=\\\"inputClass\\\"\\n           type=\\\"checkbox\\\"\\n           class=\\\"form-control\\\"\\n           [name]=\\\"cell.getId()\\\"\\n           [disabled]=\\\"!cell.isEditable()\\\"\\n           [checked]=\\\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\\\"\\n           (click)=\\\"onClick.emit($event)\\\"\\n           (change)=\\\"onChange($event)\\\">\\n    \",\n      styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar CompleterEditorComponent = /*#__PURE__*/function (_DefaultEditor2) {\n  _inherits(CompleterEditorComponent, _DefaultEditor2);\n\n  var _super4 = _createSuper(CompleterEditorComponent);\n\n  function CompleterEditorComponent(completerService) {\n    var _this10;\n\n    _classCallCheck(this, CompleterEditorComponent);\n\n    _this10 = _super4.call(this);\n    _this10.completerService = completerService;\n    _this10.completerStr = '';\n    return _this10;\n  }\n\n  _createClass(CompleterEditorComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n        var config = this.cell.getColumn().getConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n      }\n    }\n  }, {\n    key: \"onEditedCompleter\",\n    value: function onEditedCompleter(event) {\n      this.cell.newValue = event.title;\n      return false;\n    }\n  }]);\n\n  return CompleterEditorComponent;\n}(DefaultEditor);\n\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) {\n  return new (t || CompleterEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.CompleterService));\n};\n\nCompleterEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CompleterEditorComponent,\n  selectors: [[\"completer-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n  template: function CompleterEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ng2-completer\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.completerStr = $event;\n      })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) {\n        return ctx.onEditedCompleter($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n    }\n  },\n  directives: [ɵngcc2.CompleterCmp, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  encapsulation: 2\n});\n\nCompleterEditorComponent.ctorParameters = function () {\n  return [{\n    type: CompleterService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CompleterEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'completer-editor',\n      template: \"\\n    <ng2-completer [(ngModel)]=\\\"completerStr\\\"\\n                   [dataService]=\\\"cell.getColumn().getConfig().completer.dataService\\\"\\n                   [minSearchLength]=\\\"cell.getColumn().getConfig().completer.minSearchLength || 0\\\"\\n                   [pause]=\\\"cell.getColumn().getConfig().completer.pause || 0\\\"\\n                   [placeholder]=\\\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\\\"\\n                   (selected)=\\\"onEditedCompleter($event)\\\">\\n    </ng2-completer>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc2.CompleterService\n    }];\n  }, null);\n})();\n\nvar InputEditorComponent = /*#__PURE__*/function (_DefaultEditor3) {\n  _inherits(InputEditorComponent, _DefaultEditor3);\n\n  var _super5 = _createSuper(InputEditorComponent);\n\n  function InputEditorComponent() {\n    _classCallCheck(this, InputEditorComponent);\n\n    return _super5.call(this);\n  }\n\n  return InputEditorComponent;\n}(DefaultEditor);\n\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) {\n  return new (t || InputEditorComponent)();\n};\n\nInputEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: InputEditorComponent,\n  selectors: [[\"input-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n  template: function InputEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"input\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) {\n        return ctx.onEdited.emit($event);\n      })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() {\n        return ctx.onStopEditing.emit();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n    }\n  },\n  directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  styles: [_c1]\n});\n\nInputEditorComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'input-editor',\n      template: \"\\n    <input [ngClass]=\\\"inputClass\\\"\\n           class=\\\"form-control\\\"\\n           [(ngModel)]=\\\"cell.newValue\\\"\\n           [name]=\\\"cell.getId()\\\"\\n           [placeholder]=\\\"cell.getTitle()\\\"\\n           [disabled]=\\\"!cell.isEditable()\\\"\\n           (click)=\\\"onClick.emit($event)\\\"\\n           (keydown.enter)=\\\"onEdited.emit($event)\\\"\\n           (keydown.esc)=\\\"onStopEditing.emit()\\\">\\n    \",\n      styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar SelectEditorComponent = /*#__PURE__*/function (_DefaultEditor4) {\n  _inherits(SelectEditorComponent, _DefaultEditor4);\n\n  var _super6 = _createSuper(SelectEditorComponent);\n\n  function SelectEditorComponent() {\n    _classCallCheck(this, SelectEditorComponent);\n\n    return _super6.call(this);\n  }\n\n  return SelectEditorComponent;\n}(DefaultEditor);\n\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) {\n  return new (t || SelectEditorComponent)();\n};\n\nSelectEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SelectEditorComponent,\n  selectors: [[\"select-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]],\n  template: function SelectEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) {\n        return ctx.onEdited.emit($event);\n      })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() {\n        return ctx.onStopEditing.emit();\n      });\n      ɵngcc0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var tmp_4_0 = null;\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n    }\n  },\n  directives: [ɵngcc3.SelectControlValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc1.NgForOf, ɵngcc3.NgSelectOption, ɵngcc3.ɵangular_packages_forms_forms_x],\n  encapsulation: 2\n});\n\nSelectEditorComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'select-editor',\n      template: \"\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"cell.newValue\\\"\\n            [name]=\\\"cell.getId()\\\"\\n            [disabled]=\\\"!cell.isEditable()\\\"\\n            (click)=\\\"onClick.emit($event)\\\"\\n            (keydown.enter)=\\\"onEdited.emit($event)\\\"\\n            (keydown.esc)=\\\"onStopEditing.emit()\\\">\\n\\n        <option *ngFor=\\\"let option of cell.getColumn().getConfig()?.list\\\" [value]=\\\"option.value\\\"\\n                [selected]=\\\"option.value === cell.getValue()\\\">{{ option.title }}\\n        </option>\\n    </select>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar TextareaEditorComponent = /*#__PURE__*/function (_DefaultEditor5) {\n  _inherits(TextareaEditorComponent, _DefaultEditor5);\n\n  var _super7 = _createSuper(TextareaEditorComponent);\n\n  function TextareaEditorComponent() {\n    _classCallCheck(this, TextareaEditorComponent);\n\n    return _super7.call(this);\n  }\n\n  return TextareaEditorComponent;\n}(DefaultEditor);\n\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) {\n  return new (t || TextareaEditorComponent)();\n};\n\nTextareaEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TextareaEditorComponent,\n  selectors: [[\"textarea-editor\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n  template: function TextareaEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"textarea\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) {\n        return ctx.onEdited.emit($event);\n      })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() {\n        return ctx.onStopEditing.emit();\n      });\n      ɵngcc0.ɵɵtext(1, \"    \");\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n    }\n  },\n  directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  styles: [_c1]\n});\n\nTextareaEditorComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TextareaEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'textarea-editor',\n      template: \"\\n    <textarea [ngClass]=\\\"inputClass\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"cell.newValue\\\"\\n              [name]=\\\"cell.getId()\\\"\\n              [disabled]=\\\"!cell.isEditable()\\\"\\n              [placeholder]=\\\"cell.getTitle()\\\"\\n              (click)=\\\"onClick.emit($event)\\\"\\n              (keydown.enter)=\\\"onEdited.emit($event)\\\"\\n              (keydown.esc)=\\\"onStopEditing.emit()\\\">\\n    </textarea>\\n    \",\n      styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar CustomViewComponent = /*#__PURE__*/function () {\n  function CustomViewComponent(resolver) {\n    _classCallCheck(this, CustomViewComponent);\n\n    this.resolver = resolver;\n  }\n\n  _createClass(CustomViewComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.cell && !this.customComponent) {\n        this.createCustomComponent();\n        this.callOnComponentInit();\n        this.patchInstance();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n  }, {\n    key: \"createCustomComponent\",\n    value: function createCustomComponent() {\n      var componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n  }, {\n    key: \"callOnComponentInit\",\n    value: function callOnComponentInit() {\n      var onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n      onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n    }\n  }, {\n    key: \"patchInstance\",\n    value: function patchInstance() {\n      Object.assign(this.customComponent.instance, this.getPatch());\n    }\n  }, {\n    key: \"getPatch\",\n    value: function getPatch() {\n      return {\n        value: this.cell.getValue(),\n        rowData: this.cell.getRow().getData()\n      };\n    }\n  }]);\n\n  return CustomViewComponent;\n}();\n\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) {\n  return new (t || CustomViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n};\n\nCustomViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomViewComponent,\n  selectors: [[\"custom-view-component\"]],\n  viewQuery: function CustomViewComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  inputs: {\n    cell: \"cell\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\nCustomViewComponent.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }];\n};\n\nCustomViewComponent.propDecorators = {\n  cell: [{\n    type: Input\n  }],\n  dynamicTarget: [{\n    type: ViewChild,\n    args: ['dynamicTarget', {\n      read: ViewContainerRef,\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'custom-view-component',\n      template: \"\\n    <ng-template #dynamicTarget></ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }];\n  }, {\n    cell: [{\n      type: Input\n    }],\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar ViewCellComponent = function ViewCellComponent() {\n  _classCallCheck(this, ViewCellComponent);\n};\n\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) {\n  return new (t || ViewCellComponent)();\n};\n\nViewCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ViewCellComponent,\n  selectors: [[\"table-cell-view-mode\"]],\n  inputs: {\n    cell: \"cell\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]],\n  template: function ViewCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n      ɵngcc0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n    }\n  },\n  directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, CustomViewComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\nViewCellComponent.propDecorators = {\n  cell: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ViewCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-view-mode',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div [ngSwitch]=\\\"cell.getColumn().type\\\">\\n        <custom-view-component *ngSwitchCase=\\\"'custom'\\\" [cell]=\\\"cell\\\"></custom-view-component>\\n        <div *ngSwitchCase=\\\"'html'\\\" [innerHTML]=\\\"cell.getValue()\\\"></div>\\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\\n    </div>\\n    \"\n    }]\n  }], null, {\n    cell: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CELL_COMPONENTS = [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent];\n\nvar CellModule = function CellModule() {\n  _classCallCheck(this, CellModule);\n};\n\nCellModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CellModule\n});\nCellModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CellModule_Factory(t) {\n    return new (t || CellModule)();\n  },\n  imports: [[CommonModule, FormsModule, Ng2CompleterModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CellModule, {\n    declarations: function declarations() {\n      return [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, Ng2CompleterModule];\n    },\n    exports: function exports() {\n      return [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, Ng2CompleterModule],\n      declarations: [].concat(CELL_COMPONENTS),\n      exports: [].concat(CELL_COMPONENTS)\n    }]\n  }], null, null);\n})();\n\nvar DataSource = /*#__PURE__*/function () {\n  function DataSource() {\n    _classCallCheck(this, DataSource);\n\n    this.onChangedSource = new Subject();\n    this.onAddedSource = new Subject();\n    this.onUpdatedSource = new Subject();\n    this.onRemovedSource = new Subject();\n  }\n\n  _createClass(DataSource, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.emitOnChanged('refresh');\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      this.emitOnChanged('load');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"onChanged\",\n    value: function onChanged() {\n      return this.onChangedSource.asObservable();\n    }\n  }, {\n    key: \"onAdded\",\n    value: function onAdded() {\n      return this.onAddedSource.asObservable();\n    }\n  }, {\n    key: \"onUpdated\",\n    value: function onUpdated() {\n      return this.onUpdatedSource.asObservable();\n    }\n  }, {\n    key: \"onRemoved\",\n    value: function onRemoved() {\n      return this.onRemovedSource.asObservable();\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend(element) {\n      this.emitOnAdded(element);\n      this.emitOnChanged('prepend');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"append\",\n    value: function append(element) {\n      this.emitOnAdded(element);\n      this.emitOnChanged('append');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"add\",\n    value: function add(element) {\n      this.emitOnAdded(element);\n      this.emitOnChanged('add');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      this.emitOnRemoved(element);\n      this.emitOnChanged('remove');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"update\",\n    value: function update(element, values) {\n      this.emitOnUpdated(element);\n      this.emitOnChanged('update');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      this.emitOnChanged('empty');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"setSort\",\n    value: function setSort(conf, doEmit) {\n      if (doEmit) {\n        this.emitOnChanged('sort');\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(conf, andOperator, doEmit) {\n      if (doEmit) {\n        this.emitOnChanged('filter');\n      }\n    }\n  }, {\n    key: \"addFilter\",\n    value: function addFilter(fieldConf, andOperator, doEmit) {\n      if (doEmit) {\n        this.emitOnChanged('filter');\n      }\n    }\n  }, {\n    key: \"setPaging\",\n    value: function setPaging(page, perPage, doEmit) {\n      if (doEmit) {\n        this.emitOnChanged('paging');\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page, doEmit) {\n      if (doEmit) {\n        this.emitOnChanged('page');\n      }\n    }\n  }, {\n    key: \"emitOnRemoved\",\n    value: function emitOnRemoved(element) {\n      this.onRemovedSource.next(element);\n    }\n  }, {\n    key: \"emitOnUpdated\",\n    value: function emitOnUpdated(element) {\n      this.onUpdatedSource.next(element);\n    }\n  }, {\n    key: \"emitOnAdded\",\n    value: function emitOnAdded(element) {\n      this.onAddedSource.next(element);\n    }\n  }, {\n    key: \"emitOnChanged\",\n    value: function emitOnChanged(action) {\n      var _this11 = this;\n\n      this.getElements().then(function (elements) {\n        return _this11.onChangedSource.next({\n          action: action,\n          elements: elements,\n          paging: _this11.getPaging(),\n          filter: _this11.getFilter(),\n          sort: _this11.getSort()\n        });\n      });\n    }\n  }]);\n\n  return DataSource;\n}();\n\nvar FilterDefault = /*#__PURE__*/function () {\n  function FilterDefault() {\n    _classCallCheck(this, FilterDefault);\n\n    this.inputClass = '';\n    this.filter = new EventEmitter();\n    this.query = '';\n  }\n\n  _createClass(FilterDefault, [{\n    key: \"onFilter\",\n    value: function onFilter(query) {\n      this.source.addFilter({\n        field: this.column.id,\n        search: query,\n        filter: this.column.getFilterFunction()\n      });\n    }\n  }]);\n\n  return FilterDefault;\n}();\n\nFilterDefault.ɵfac = function FilterDefault_Factory(t) {\n  return new (t || FilterDefault)();\n};\n\nFilterDefault.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterDefault,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    inputClass: \"inputClass\",\n    column: \"column\",\n    source: \"source\"\n  },\n  outputs: {\n    filter: \"filter\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function FilterDefault_Template(rf, ctx) {},\n  encapsulation: 2\n});\nFilterDefault.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  filter: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterDefault, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputClass: [{\n      type: Input\n    }],\n    filter: [{\n      type: Output\n    }],\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar FilterComponent = /*#__PURE__*/function (_FilterDefault) {\n  _inherits(FilterComponent, _FilterDefault);\n\n  var _super8 = _createSuper(FilterComponent);\n\n  function FilterComponent() {\n    var _this12;\n\n    _classCallCheck(this, FilterComponent);\n\n    _this12 = _super8.apply(this, arguments);\n    _this12.query = '';\n    return _this12;\n  }\n\n  _createClass(FilterComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this13 = this;\n\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(function (dataChanges) {\n          var filterConf = _this13.source.getFilter();\n\n          if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n            _this13.query = ''; // add a check for existing filters an set the query if one exists for this column\n            // this covers instances where the filter is set by user code while maintaining existing functionality\n          } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n            filterConf.filters.forEach(function (k, v) {\n              if (k.field == _this13.column.id) {\n                _this13.query = k.search;\n              }\n            });\n          }\n        });\n      }\n    }\n  }]);\n\n  return FilterComponent;\n}(FilterDefault);\n\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return ɵFilterComponent_BaseFactory(t || FilterComponent);\n};\n\nFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"ng2-smart-table-filter\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"ng2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"ng2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]],\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, CustomFilterComponent, DefaultFilterComponent];\n  },\n  styles: [\"[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     select{font-weight:400;line-height:normal;padding:.375em .75em;width:100%}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"]\n});\nvar ɵFilterComponent_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FilterComponent);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-smart-table-filter',\n      template: \"\\n      <div class=\\\"ng2-smart-filter\\\" *ngIf=\\\"column.isFilterable\\\" [ngSwitch]=\\\"column.getFilterType()\\\">\\n        <custom-table-filter *ngSwitchCase=\\\"'custom'\\\"\\n                             [query]=\\\"query\\\"\\n                             [column]=\\\"column\\\"\\n                             [source]=\\\"source\\\"\\n                             [inputClass]=\\\"inputClass\\\"\\n                             (filter)=\\\"onFilter($event)\\\">\\n        </custom-table-filter>\\n        <default-table-filter *ngSwitchDefault\\n                              [query]=\\\"query\\\"\\n                              [column]=\\\"column\\\"\\n                              [source]=\\\"source\\\"\\n                              [inputClass]=\\\"inputClass\\\"\\n                              (filter)=\\\"onFilter($event)\\\">\\n        </default-table-filter>\\n      </div>\\n    \",\n      styles: [\":host .ng2-smart-filter ::ng-deep input,:host .ng2-smart-filter ::ng-deep select{font-weight:400;line-height:normal;padding:.375em .75em;width:100%}:host .ng2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .ng2-smart-filter ::ng-deep .completer-dropdown-holder,:host .ng2-smart-filter ::ng-deep a{font-weight:400}\"]\n    }]\n  }], null, null);\n})();\n\nvar DefaultFilterComponent = /*#__PURE__*/function (_FilterDefault2) {\n  _inherits(DefaultFilterComponent, _FilterDefault2);\n\n  var _super9 = _createSuper(DefaultFilterComponent);\n\n  function DefaultFilterComponent() {\n    _classCallCheck(this, DefaultFilterComponent);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return DefaultFilterComponent;\n}(FilterDefault);\n\nDefaultFilterComponent.ɵfac = function DefaultFilterComponent_Factory(t) {\n  return ɵDefaultFilterComponent_BaseFactory(t || DefaultFilterComponent);\n};\n\nDefaultFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DefaultFilterComponent,\n  selectors: [[\"default-table-filter\"]],\n  inputs: {\n    query: \"query\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]],\n  template: function DefaultFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n      ɵngcc0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n      ɵngcc0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n      ɵngcc0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n      ɵngcc0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, SelectFilterComponent, ɵngcc1.NgClass, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent];\n  },\n  encapsulation: 2\n});\nDefaultFilterComponent.propDecorators = {\n  query: [{\n    type: Input\n  }]\n};\nvar ɵDefaultFilterComponent_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFilterComponent);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DefaultFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'default-table-filter',\n      template: \"\\n    <ng-container [ngSwitch]=\\\"column.getFilterType()\\\">\\n      <select-filter *ngSwitchCase=\\\"'list'\\\"\\n                     [query]=\\\"query\\\"\\n                     [ngClass]=\\\"inputClass\\\"\\n                     [column]=\\\"column\\\"\\n                     (filter)=\\\"onFilter($event)\\\">\\n      </select-filter>\\n      <checkbox-filter *ngSwitchCase=\\\"'checkbox'\\\"\\n                       [query]=\\\"query\\\"\\n                       [ngClass]=\\\"inputClass\\\"\\n                       [column]=\\\"column\\\"\\n                       (filter)=\\\"onFilter($event)\\\">\\n      </checkbox-filter>\\n      <completer-filter *ngSwitchCase=\\\"'completer'\\\"\\n                        [query]=\\\"query\\\"\\n                        [ngClass]=\\\"inputClass\\\"\\n                        [column]=\\\"column\\\"\\n                        (filter)=\\\"onFilter($event)\\\">\\n      </completer-filter>\\n      <input-filter *ngSwitchDefault\\n                    [query]=\\\"query\\\"\\n                    [ngClass]=\\\"inputClass\\\"\\n                    [column]=\\\"column\\\"\\n                    (filter)=\\\"onFilter($event)\\\">\\n      </input-filter>\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    query: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CustomFilterComponent = /*#__PURE__*/function (_FilterDefault3) {\n  _inherits(CustomFilterComponent, _FilterDefault3);\n\n  var _super10 = _createSuper(CustomFilterComponent);\n\n  function CustomFilterComponent(resolver) {\n    var _this14;\n\n    _classCallCheck(this, CustomFilterComponent);\n\n    _this14 = _super10.call(this);\n    _this14.resolver = resolver;\n    return _this14;\n  }\n\n  _createClass(CustomFilterComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this15 = this;\n\n      if (this.column && !this.customComponent) {\n        var componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n        this.customComponent.instance.query = this.query;\n        this.customComponent.instance.column = this.column;\n        this.customComponent.instance.source = this.source;\n        this.customComponent.instance.inputClass = this.inputClass;\n        this.customComponent.instance.filter.subscribe(function (event) {\n          return _this15.onFilter(event);\n        });\n      }\n\n      if (this.customComponent) {\n        this.customComponent.instance.ngOnChanges(changes);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n  }]);\n\n  return CustomFilterComponent;\n}(FilterDefault);\n\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) {\n  return new (t || CustomFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n};\n\nCustomFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomFilterComponent,\n  selectors: [[\"custom-table-filter\"]],\n  viewQuery: function CustomFilterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  inputs: {\n    query: \"query\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\nCustomFilterComponent.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }];\n};\n\nCustomFilterComponent.propDecorators = {\n  query: [{\n    type: Input\n  }],\n  dynamicTarget: [{\n    type: ViewChild,\n    args: ['dynamicTarget', {\n      read: ViewContainerRef,\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'custom-table-filter',\n      template: \"<ng-template #dynamicTarget></ng-template>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }];\n  }, {\n    query: [{\n      type: Input\n    }],\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar DefaultFilter = /*#__PURE__*/function () {\n  function DefaultFilter() {\n    _classCallCheck(this, DefaultFilter);\n\n    this.delay = 300;\n    this.filter = new EventEmitter();\n  }\n\n  _createClass(DefaultFilter, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.changesSubscription) {\n        this.changesSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter() {\n      this.filter.emit(this.query);\n    }\n  }]);\n\n  return DefaultFilter;\n}();\n\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) {\n  return new (t || DefaultFilter)();\n};\n\nDefaultFilter.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DefaultFilter,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    query: \"query\",\n    inputClass: \"inputClass\",\n    column: \"column\"\n  },\n  outputs: {\n    filter: \"filter\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function DefaultFilter_Template(rf, ctx) {},\n  encapsulation: 2\n});\nDefaultFilter.propDecorators = {\n  query: [{\n    type: Input\n  }],\n  inputClass: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DefaultFilter, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    filter: [{\n      type: Output\n    }],\n    query: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CheckboxFilterComponent = /*#__PURE__*/function (_DefaultFilter) {\n  _inherits(CheckboxFilterComponent, _DefaultFilter);\n\n  var _super11 = _createSuper(CheckboxFilterComponent);\n\n  function CheckboxFilterComponent() {\n    var _this16;\n\n    _classCallCheck(this, CheckboxFilterComponent);\n\n    _this16 = _super11.call(this);\n    _this16.filterActive = false;\n    _this16.inputControl = new FormControl();\n    return _this16;\n  }\n\n  _createClass(CheckboxFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this17 = this;\n\n      this.changesSubscription = this.inputControl.valueChanges.pipe(debounceTime(this.delay)).subscribe(function (checked) {\n        _this17.filterActive = true;\n        var trueVal = _this17.column.getFilterConfig() && _this17.column.getFilterConfig().true || true;\n        var falseVal = _this17.column.getFilterConfig() && _this17.column.getFilterConfig().false || false;\n        _this17.query = checked ? trueVal : falseVal;\n\n        _this17.setFilter();\n      });\n    }\n  }, {\n    key: \"resetFilter\",\n    value: function resetFilter(event) {\n      event.preventDefault();\n      this.query = '';\n      this.inputControl.setValue(false, {\n        emitEvent: false\n      });\n      this.filterActive = false;\n      this.setFilter();\n    }\n  }]);\n\n  return CheckboxFilterComponent;\n}(DefaultFilter);\n\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) {\n  return new (t || CheckboxFilterComponent)();\n};\n\nCheckboxFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CheckboxFilterComponent,\n  selectors: [[\"checkbox-filter\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]],\n  template: function CheckboxFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"input\", 0);\n      ɵngcc0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n    }\n  },\n  directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc1.NgClass, ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\nCheckboxFilterComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'checkbox-filter',\n      template: \"\\n    <input type=\\\"checkbox\\\" [formControl]=\\\"inputControl\\\" [ngClass]=\\\"inputClass\\\" class=\\\"form-control\\\">\\n    <a href=\\\"#\\\" *ngIf=\\\"filterActive\\\"\\n                (click)=\\\"resetFilter($event)\\\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar CompleterFilterComponent = /*#__PURE__*/function (_DefaultFilter2) {\n  _inherits(CompleterFilterComponent, _DefaultFilter2);\n\n  var _super12 = _createSuper(CompleterFilterComponent);\n\n  function CompleterFilterComponent(completerService) {\n    var _this18;\n\n    _classCallCheck(this, CompleterFilterComponent);\n\n    _this18 = _super12.call(this);\n    _this18.completerService = completerService;\n    _this18.completerContent = new Subject();\n    return _this18;\n  }\n\n  _createClass(CompleterFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this19 = this;\n\n      var config = this.column.getFilterConfig().completer;\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n      config.dataService.descriptionField(config.descriptionField);\n      this.changesSubscription = this.completerContent.pipe(map(function (ev) {\n        return ev && ev.title || ev || '';\n      }), distinctUntilChanged(), debounceTime(this.delay)).subscribe(function (search) {\n        _this19.query = search;\n\n        _this19.setFilter();\n      });\n    }\n  }, {\n    key: \"inputTextChanged\",\n    value: function inputTextChanged(event) {\n      // workaround to trigger the search event when the home/end buttons are clicked\n      // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n      // so here it gets called manually\n      if (event === '') {\n        this.completerContent.next(event);\n      }\n    }\n  }]);\n\n  return CompleterFilterComponent;\n}(DefaultFilter);\n\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) {\n  return new (t || CompleterFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.CompleterService));\n};\n\nCompleterFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CompleterFilterComponent,\n  selectors: [[\"completer-filter\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n  template: function CompleterFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ng2-completer\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.query = $event;\n      })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.inputTextChanged($event);\n      })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) {\n        return ctx.completerContent.next($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n    }\n  },\n  directives: [ɵngcc2.CompleterCmp, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  encapsulation: 2\n});\n\nCompleterFilterComponent.ctorParameters = function () {\n  return [{\n    type: CompleterService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CompleterFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'completer-filter',\n      template: \"\\n    <ng2-completer [(ngModel)]=\\\"query\\\"\\n                   (ngModelChange)=\\\"inputTextChanged($event)\\\"\\n                   [dataService]=\\\"column.getFilterConfig().completer.dataService\\\"\\n                   [minSearchLength]=\\\"column.getFilterConfig().completer.minSearchLength || 0\\\"\\n                   [pause]=\\\"column.getFilterConfig().completer.pause || 0\\\"\\n                   [placeholder]=\\\"column.getFilterConfig().completer.placeholder || 'Start typing...'\\\"\\n                   (selected)=\\\"completerContent.next($event)\\\">\\n    </ng2-completer>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc2.CompleterService\n    }];\n  }, null);\n})();\n\nvar InputFilterComponent = /*#__PURE__*/function (_DefaultFilter3) {\n  _inherits(InputFilterComponent, _DefaultFilter3);\n\n  var _super13 = _createSuper(InputFilterComponent);\n\n  function InputFilterComponent() {\n    var _this20;\n\n    _classCallCheck(this, InputFilterComponent);\n\n    _this20 = _super13.call(this);\n    _this20.inputControl = new FormControl();\n    return _this20;\n  }\n\n  _createClass(InputFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this21 = this;\n\n      if (this.query) {\n        this.inputControl.setValue(this.query);\n      }\n\n      this.inputControl.valueChanges.pipe(distinctUntilChanged(), debounceTime(this.delay)).subscribe(function (value) {\n        _this21.query = _this21.inputControl.value;\n\n        _this21.setFilter();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.query) {\n        this.inputControl.setValue(this.query);\n      }\n    }\n  }]);\n\n  return InputFilterComponent;\n}(DefaultFilter);\n\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) {\n  return new (t || InputFilterComponent)();\n};\n\nInputFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: InputFilterComponent,\n  selectors: [[\"input-filter\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]],\n  template: function InputFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"input\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    }\n  },\n  directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective],\n  encapsulation: 2\n});\n\nInputFilterComponent.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'input-filter',\n      template: \"\\n    <input\\n      [ngClass]=\\\"inputClass\\\"\\n      [formControl]=\\\"inputControl\\\"\\n      class=\\\"form-control\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"{{ column.title }}\\\"/>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar SelectFilterComponent = /*#__PURE__*/function (_DefaultFilter4) {\n  _inherits(SelectFilterComponent, _DefaultFilter4);\n\n  var _super14 = _createSuper(SelectFilterComponent);\n\n  function SelectFilterComponent() {\n    _classCallCheck(this, SelectFilterComponent);\n\n    return _super14.call(this);\n  }\n\n  _createClass(SelectFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this22 = this;\n\n      this.inputControl.valueChanges.pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay)).subscribe(function (value) {\n        return _this22.setFilter();\n      });\n    }\n  }]);\n\n  return SelectFilterComponent;\n}(DefaultFilter);\n\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) {\n  return new (t || SelectFilterComponent)();\n};\n\nSelectFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SelectFilterComponent,\n  selectors: [[\"select-filter\"]],\n  viewQuery: function SelectFilterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c2, true, NgControl);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function SelectFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.query = $event;\n      });\n      ɵngcc0.ɵɵelementStart(2, \"option\", 2);\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n    }\n  },\n  directives: [ɵngcc3.SelectControlValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.NgSelectOption, ɵngcc3.ɵangular_packages_forms_forms_x, ɵngcc1.NgForOf],\n  encapsulation: 2\n});\n\nSelectFilterComponent.ctorParameters = function () {\n  return [];\n};\n\nSelectFilterComponent.propDecorators = {\n  inputControl: [{\n    type: ViewChild,\n    args: ['inputControl', {\n      read: NgControl,\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'select-filter',\n      template: \"\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            #inputControl\\n            [(ngModel)]=\\\"query\\\">\\n\\n        <option value=\\\"\\\">{{ column.getFilterConfig().selectText }}</option>\\n        <option *ngFor=\\\"let option of column.getFilterConfig().list\\\" [value]=\\\"option.value\\\">\\n          {{ option.title }}\\n        </option>\\n    </select>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputControl: [{\n      type: ViewChild,\n      args: ['inputControl', {\n        read: NgControl,\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar FILTER_COMPONENTS = [FilterDefault, DefaultFilter, FilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent];\n\nvar FilterModule = function FilterModule() {\n  _classCallCheck(this, FilterModule);\n};\n\nFilterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FilterModule\n});\nFilterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FilterModule_Factory(t) {\n    return new (t || FilterModule)();\n  },\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterModule, {\n    declarations: function declarations() {\n      return [FilterDefault, DefaultFilter, FilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule];\n    },\n    exports: function exports() {\n      return [FilterDefault, DefaultFilter, FilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule],\n      declarations: [].concat(FILTER_COMPONENTS),\n      exports: [].concat(FILTER_COMPONENTS)\n    }]\n  }], null, null);\n})();\n\nvar PagerComponent = /*#__PURE__*/function () {\n  function PagerComponent() {\n    _classCallCheck(this, PagerComponent);\n\n    this.perPageSelect = [];\n    this.changePage = new EventEmitter();\n    this.count = 0;\n  }\n\n  _createClass(PagerComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this23 = this;\n\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(function (dataChanges) {\n          _this23.page = _this23.source.getPaging().page;\n          _this23.perPage = _this23.source.getPaging().perPage;\n          _this23.currentPerPage = _this23.perPage;\n          _this23.count = _this23.source.count();\n\n          if (_this23.isPageOutOfBounce()) {\n            _this23.source.setPage(--_this23.page);\n          }\n\n          _this23.processPageChange(dataChanges);\n\n          _this23.initPages();\n        });\n      }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n\n  }, {\n    key: \"processPageChange\",\n    value: function processPageChange(changes) {\n      if (changes['action'] === 'prepend') {\n        this.source.setPage(1);\n      }\n\n      if (changes['action'] === 'append') {\n        this.source.setPage(this.getLast());\n      }\n    }\n  }, {\n    key: \"shouldShow\",\n    value: function shouldShow() {\n      return this.source.count() > this.perPage;\n    }\n  }, {\n    key: \"paginate\",\n    value: function paginate(page) {\n      this.source.setPage(page);\n      this.page = page;\n      this.changePage.emit({\n        page: page\n      });\n      return false;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      return this.paginate(this.getPage() + 1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      return this.paginate(this.getPage() - 1);\n    }\n  }, {\n    key: \"getPage\",\n    value: function getPage() {\n      return this.page;\n    }\n  }, {\n    key: \"getPages\",\n    value: function getPages() {\n      return this.pages;\n    }\n  }, {\n    key: \"getLast\",\n    value: function getLast() {\n      return Math.ceil(this.count / this.perPage);\n    }\n  }, {\n    key: \"isPageOutOfBounce\",\n    value: function isPageOutOfBounce() {\n      return this.page * this.perPage >= this.count + this.perPage && this.page > 1;\n    }\n  }, {\n    key: \"initPages\",\n    value: function initPages() {\n      var pagesCount = this.getLast();\n      var showPagesCount = 4;\n      showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n      this.pages = [];\n\n      if (this.shouldShow()) {\n        var middleOne = Math.ceil(showPagesCount / 2);\n        middleOne = this.page >= middleOne ? this.page : middleOne;\n        var lastOne = middleOne + Math.floor(showPagesCount / 2);\n        lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n        var firstOne = lastOne - showPagesCount + 1;\n\n        for (var i = firstOne; i <= lastOne; i++) {\n          this.pages.push(i);\n        }\n      }\n    }\n  }, {\n    key: \"onChangePerPage\",\n    value: function onChangePerPage(event) {\n      if (this.currentPerPage) {\n        if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n          this.source.getPaging().perPage = null;\n        } else {\n          this.source.getPaging().perPage = this.currentPerPage * 1;\n          this.source.refresh();\n        }\n\n        this.initPages();\n      }\n    }\n  }]);\n\n  return PagerComponent;\n}();\n\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)();\n};\n\nPagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"ng2-smart-table-pager\"]],\n  inputs: {\n    perPageSelect: \"perPageSelect\",\n    source: \"source\"\n  },\n  outputs: {\n    changePage: \"changePage\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ng2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"ng2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"ng2-smart-pagination-nav\"], [1, \"ng2-smart-pagination\", \"pagination\"], [1, \"ng2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"ng2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"ng2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"ng2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"ng2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n      ɵngcc0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc3.SelectControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.NgSelectOption, ɵngcc3.ɵangular_packages_forms_forms_x],\n  styles: [\".ng2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ng2-smart-pagination[_ngcontent-%COMP%]   .ng2-smart-page-item[_ngcontent-%COMP%]{display:inline}.ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   label[_ngcontent-%COMP%], [_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{line-height:2.5rem}\"]\n});\nPagerComponent.propDecorators = {\n  source: [{\n    type: Input\n  }],\n  perPageSelect: [{\n    type: Input\n  }],\n  changePage: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-smart-table-pager',\n      template: \"\\n    <nav *ngIf=\\\"shouldShow()\\\" class=\\\"ng2-smart-pagination-nav\\\">\\n      <ul class=\\\"ng2-smart-pagination pagination\\\">\\n        <li class=\\\"ng2-smart-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"ng2-smart-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == 1 ? false : paginate(1)\\\" aria-label=\\\"First\\\">\\n            <span aria-hidden=\\\"true\\\">&laquo;</span>\\n            <span class=\\\"sr-only\\\">First</span>\\n          </a>\\n        </li>\\n        <li class=\\\"ng2-smart-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"ng2-smart-page-link page-link page-link-prev\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == 1 ? false : prev()\\\" aria-label=\\\"Prev\\\">\\n            <span aria-hidden=\\\"true\\\">&lt;</span>\\n            <span class=\\\"sr-only\\\">Prev</span>\\n          </a>\\n        </li>\\n        <li class=\\\"ng2-smart-page-item page-item\\\"\\n        [ngClass]=\\\"{active: getPage() == page}\\\" *ngFor=\\\"let page of getPages()\\\">\\n          <span class=\\\"ng2-smart-page-link page-link\\\"\\n          *ngIf=\\\"getPage() == page\\\">{{ page }} <span class=\\\"sr-only\\\">(current)</span></span>\\n          <a class=\\\"ng2-smart-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"paginate(page)\\\" *ngIf=\\\"getPage() != page\\\">{{ page }}</a>\\n        </li>\\n\\n        <li class=\\\"ng2-smart-page-item page-item\\\"\\n            [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"ng2-smart-page-link page-link page-link-next\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == getLast() ? false : next()\\\" aria-label=\\\"Next\\\">\\n            <span aria-hidden=\\\"true\\\">&gt;</span>\\n            <span class=\\\"sr-only\\\">Next</span>\\n          </a>\\n        </li>\\n        \\n        <li class=\\\"ng2-smart-page-item page-item\\\"\\n        [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"ng2-smart-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == getLast() ? false : paginate(getLast())\\\" aria-label=\\\"Last\\\">\\n            <span aria-hidden=\\\"true\\\">&raquo;</span>\\n            <span class=\\\"sr-only\\\">Last</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n    \\n    <nav *ngIf=\\\"perPageSelect && perPageSelect.length > 0\\\" class=\\\"ng2-smart-pagination-per-page\\\">\\n      <label for=\\\"per-page\\\">\\n        Per Page:\\n      </label>\\n      <select (change)=\\\"onChangePerPage($event)\\\" [(ngModel)]=\\\"currentPerPage\\\" id=\\\"per-page\\\">\\n        <option *ngFor=\\\"let item of perPageSelect\\\" [value]=\\\"item\\\">{{ item }}</option>\\n      </select>\\n    </nav>\\n  \",\n      styles: [\".ng2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination .sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ng2-smart-pagination .ng2-smart-page-item{display:inline}.ng2-smart-pagination .page-link-next,.ng2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host label,:host select{margin:1rem 0 1rem 1rem}:host label{line-height:2.5rem}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    perPageSelect: [{\n      type: Input\n    }],\n    changePage: [{\n      type: Output\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar PagerModule = function PagerModule() {\n  _classCallCheck(this, PagerModule);\n};\n\nPagerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PagerModule\n});\nPagerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PagerModule_Factory(t) {\n    return new (t || PagerModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PagerModule, {\n    declarations: function declarations() {\n      return [PagerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [PagerComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [PagerComponent],\n      exports: [PagerComponent]\n    }]\n  }], null, null);\n})();\n\nvar Ng2SmartTableTbodyComponent = /*#__PURE__*/function () {\n  function Ng2SmartTableTbodyComponent() {\n    _classCallCheck(this, Ng2SmartTableTbodyComponent);\n\n    this.save = new EventEmitter();\n    this.cancel = new EventEmitter();\n    this.edit = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.custom = new EventEmitter();\n    this.edited = new EventEmitter();\n    this.userSelectRow = new EventEmitter();\n    this.editRowSelect = new EventEmitter();\n    this.multipleSelectRow = new EventEmitter();\n    this.rowHover = new EventEmitter();\n  }\n\n  _createClass(Ng2SmartTableTbodyComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.mode = this.grid.getSetting('mode');\n      this.editInputClass = this.grid.getSetting('edit.inputClass');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.isActionAdd = this.grid.getSetting('actions.add');\n      this.isActionEdit = this.grid.getSetting('actions.edit');\n      this.isActionDelete = this.grid.getSetting('actions.delete');\n      this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n  }, {\n    key: \"getVisibleCells\",\n    value: function getVisibleCells(cells) {\n      return (cells || []).filter(function (cell) {\n        return !cell.getColumn().hide;\n      });\n    }\n  }, {\n    key: \"tableColumnsCount\",\n    get: function get() {\n      var actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n      return this.grid.getColumns().length + actionColumns;\n    }\n  }]);\n\n  return Ng2SmartTableTbodyComponent;\n}();\n\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) {\n  return new (t || Ng2SmartTableTbodyComponent)();\n};\n\nNg2SmartTableTbodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2SmartTableTbodyComponent,\n  selectors: [[\"\", \"ng2-st-tbody\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\",\n    rowClassFunction: \"rowClassFunction\"\n  },\n  outputs: {\n    save: \"save\",\n    cancel: \"cancel\",\n    edit: \"edit\",\n    delete: \"delete\",\n    custom: \"custom\",\n    edited: \"edited\",\n    userSelectRow: \"userSelectRow\",\n    editRowSelect: \"editRowSelect\",\n    multipleSelectRow: \"multipleSelectRow\",\n    rowHover: \"rowHover\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"ng2-smart-actions ng2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\", \"ng2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]],\n  template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, TbodyCustomComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent];\n  },\n  styles: [\"[_nghost-%COMP%]   .ng2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .ng2-smart-row[_ngcontent-%COMP%]   .ng2-smart-actions.ng2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     ng2-st-tbody-create-cancel a:first-child, [_nghost-%COMP%]     ng2-st-tbody-edit-delete a:first-child{margin-right:.25rem}\"]\n});\nNg2SmartTableTbodyComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  deleteConfirm: [{\n    type: Input\n  }],\n  editConfirm: [{\n    type: Input\n  }],\n  rowClassFunction: [{\n    type: Input\n  }],\n  save: [{\n    type: Output\n  }],\n  cancel: [{\n    type: Output\n  }],\n  edit: [{\n    type: Output\n  }],\n  delete: [{\n    type: Output\n  }],\n  custom: [{\n    type: Output\n  }],\n  edited: [{\n    type: Output\n  }],\n  userSelectRow: [{\n    type: Output\n  }],\n  editRowSelect: [{\n    type: Output\n  }],\n  multipleSelectRow: [{\n    type: Output\n  }],\n  rowHover: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-tbody]',\n      template: \"<tr *ngFor=\\\"let row of grid.getRows()\\\" (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"ng2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\n  <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"ng2-smart-actions ng2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\">\\n  </td>\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\n\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\n                              [editConfirm]=\\\"editConfirm\\\"\\n                              (edit)=\\\"edit.emit(row)\\\"\\n                              (delete)=\\\"delete.emit(row)\\\"\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n                              [row]=\\\"row\\\"\\n                              [source]=\\\"source\\\">\\n    </ng2-st-tbody-edit-delete>\\n  </td>\\n   <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <ng2-smart-table-cell [cell]=\\\"cell\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [row]=\\\"row\\\"\\n                          [isNew]=\\\"false\\\"\\n                          [mode]=\\\"mode\\\"\\n                          [editConfirm]=\\\"editConfirm\\\"\\n                          [inputClass]=\\\"editInputClass\\\"\\n                          [isInEditing]=\\\"row.isInEditing\\\">\\n    </ng2-smart-table-cell>\\n  </td>\\n\\n  <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\n  </td>\\n\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\n\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\n                              [editConfirm]=\\\"editConfirm\\\"\\n                              [row]=\\\"row\\\"\\n                              [source]=\\\"source\\\"\\n                              (edit)=\\\"edit.emit(row)\\\"\\n                              (delete)=\\\"delete.emit(row)\\\"\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\n    </ng2-st-tbody-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\",\n      styles: [\":host .ng2-smart-row.selected{background:rgba(0,0,0,.05)}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-create-cancel a:first-child,:host ::ng-deep ng2-st-tbody-edit-delete a:first-child{margin-right:.25rem}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    save: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    custom: [{\n      type: Output\n    }],\n    edited: [{\n      type: Output\n    }],\n    userSelectRow: [{\n      type: Output\n    }],\n    editRowSelect: [{\n      type: Output\n    }],\n    multipleSelectRow: [{\n      type: Output\n    }],\n    rowHover: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    deleteConfirm: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }],\n    rowClassFunction: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TbodyCreateCancelComponent = /*#__PURE__*/function () {\n  function TbodyCreateCancelComponent() {\n    _classCallCheck(this, TbodyCreateCancelComponent);\n  }\n\n  _createClass(TbodyCreateCancelComponent, [{\n    key: \"onSave\",\n    value: function onSave(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.grid.save(this.row, this.editConfirm);\n    }\n  }, {\n    key: \"onCancelEdit\",\n    value: function onCancelEdit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.row.isInEditing = false;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n      this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n  }]);\n\n  return TbodyCreateCancelComponent;\n}();\n\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) {\n  return new (t || TbodyCreateCancelComponent)();\n};\n\nTbodyCreateCancelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TbodyCreateCancelComponent,\n  selectors: [[\"ng2-st-tbody-create-cancel\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    editConfirm: \"editConfirm\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyCreateCancelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) {\n        return ctx.onSave($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) {\n        return ctx.onCancelEdit($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});\nTbodyCreateCancelComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  row: [{\n    type: Input\n  }],\n  editConfirm: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-st-tbody-create-cancel',\n      template: \"\\n    <a href=\\\"#\\\" class=\\\"ng2-smart-action ng2-smart-action-edit-save\\\"\\n        [innerHTML]=\\\"saveButtonContent\\\" (click)=\\\"onSave($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"ng2-smart-action ng2-smart-action-edit-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\" (click)=\\\"onCancelEdit($event)\\\"></a>\\n  \"\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TbodyEditDeleteComponent = /*#__PURE__*/function () {\n  function TbodyEditDeleteComponent() {\n    _classCallCheck(this, TbodyEditDeleteComponent);\n\n    this.edit = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.editRowSelect = new EventEmitter();\n  }\n\n  _createClass(TbodyEditDeleteComponent, [{\n    key: \"onEdit\",\n    value: function onEdit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.editRowSelect.emit(this.row);\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.edit.emit({\n          data: this.row.getData(),\n          source: this.source\n        });\n      } else {\n        this.grid.edit(this.row);\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.delete.emit({\n          data: this.row.getData(),\n          source: this.source\n        });\n      } else {\n        this.grid.delete(this.row, this.deleteConfirm);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isActionEdit = this.grid.getSetting('actions.edit');\n      this.isActionDelete = this.grid.getSetting('actions.delete');\n      this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n      this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n  }]);\n\n  return TbodyEditDeleteComponent;\n}();\n\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) {\n  return new (t || TbodyEditDeleteComponent)();\n};\n\nTbodyEditDeleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TbodyEditDeleteComponent,\n  selectors: [[\"ng2-st-tbody-edit-delete\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    source: \"source\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\"\n  },\n  outputs: {\n    edit: \"edit\",\n    delete: \"delete\",\n    editRowSelect: \"editRowSelect\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyEditDeleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n      ɵngcc0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\nTbodyEditDeleteComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  row: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  deleteConfirm: [{\n    type: Input\n  }],\n  editConfirm: [{\n    type: Input\n  }],\n  edit: [{\n    type: Output\n  }],\n  delete: [{\n    type: Output\n  }],\n  editRowSelect: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-st-tbody-edit-delete',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionEdit\\\" class=\\\"ng2-smart-action ng2-smart-action-edit-edit\\\"\\n        [innerHTML]=\\\"editRowButtonContent\\\" (click)=\\\"onEdit($event)\\\"></a>\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionDelete\\\" class=\\\"ng2-smart-action ng2-smart-action-delete-delete\\\"\\n        [innerHTML]=\\\"deleteRowButtonContent\\\" (click)=\\\"onDelete($event)\\\"></a>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    edit: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    editRowSelect: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    deleteConfirm: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TbodyCustomComponent = /*#__PURE__*/function () {\n  function TbodyCustomComponent() {\n    _classCallCheck(this, TbodyCustomComponent);\n\n    this.custom = new EventEmitter();\n  }\n\n  _createClass(TbodyCustomComponent, [{\n    key: \"onCustom\",\n    value: function onCustom(action, event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.custom.emit({\n        action: action.name,\n        data: this.row.getData(),\n        source: this.source\n      });\n    }\n  }]);\n\n  return TbodyCustomComponent;\n}();\n\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) {\n  return new (t || TbodyCustomComponent)();\n};\n\nTbodyCustomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TbodyCustomComponent,\n  selectors: [[\"ng2-st-tbody-custom\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    source: \"source\"\n  },\n  outputs: {\n    custom: \"custom\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyCustomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    }\n  },\n  directives: [ɵngcc1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\nTbodyCustomComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  row: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  custom: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TbodyCustomComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-st-tbody-custom',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n      <a *ngFor=\\\"let action of grid.getSetting('actions.custom')\\\" href=\\\"#\\\"\\n         class=\\\"ng2-smart-action ng2-smart-action-custom-custom\\\" \\n         [innerHTML]=\\\"action.title\\\"\\n         (click)=\\\"onCustom(action, $event)\\\"></a>\\n        \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    custom: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TBODY_COMPONENTS = [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, Ng2SmartTableTbodyComponent];\n\nvar TBodyModule = function TBodyModule() {\n  _classCallCheck(this, TBodyModule);\n};\n\nTBodyModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TBodyModule\n});\nTBodyModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TBodyModule_Factory(t) {\n    return new (t || TBodyModule)();\n  },\n  imports: [[CommonModule, FormsModule, CellModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TBodyModule, {\n    declarations: function declarations() {\n      return [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, Ng2SmartTableTbodyComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, CellModule];\n    },\n    exports: function exports() {\n      return [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, Ng2SmartTableTbodyComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TBodyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, CellModule],\n      declarations: [].concat(TBODY_COMPONENTS),\n      exports: [].concat(TBODY_COMPONENTS)\n    }]\n  }], null, null);\n})();\n\nvar Ng2SmartTableTheadComponent = /*#__PURE__*/function () {\n  function Ng2SmartTableTheadComponent() {\n    _classCallCheck(this, Ng2SmartTableTheadComponent);\n\n    this.sort = new EventEmitter();\n    this.selectAllRows = new EventEmitter();\n    this.create = new EventEmitter();\n    this.filter = new EventEmitter();\n  }\n\n  _createClass(Ng2SmartTableTheadComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isHideHeader = this.grid.getSetting('hideHeader');\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n  }]);\n\n  return Ng2SmartTableTheadComponent;\n}();\n\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) {\n  return new (t || Ng2SmartTableTheadComponent)();\n};\n\nNg2SmartTableTheadComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2SmartTableTheadComponent,\n  selectors: [[\"\", \"ng2-st-thead\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    isAllSelected: \"isAllSelected\",\n    createConfirm: \"createConfirm\"\n  },\n  outputs: {\n    sort: \"sort\",\n    selectAllRows: \"selectAllRows\",\n    create: \"create\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 3,\n  vars: 3,\n  consts: [[\"ng2-st-thead-titles-row\", \"\", \"class\", \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"ng2-st-thead-filters-row\", \"\", \"class\", \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"ng2-st-thead-titles-row\", \"\", 1, \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"ng2-st-thead-filters-row\", \"\", 1, \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]],\n  template: function Ng2SmartTableTheadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n      ɵngcc0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent];\n  },\n  encapsulation: 2\n});\nNg2SmartTableTheadComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  isAllSelected: [{\n    type: Input\n  }],\n  createConfirm: [{\n    type: Input\n  }],\n  sort: [{\n    type: Output\n  }],\n  selectAllRows: [{\n    type: Output\n  }],\n  create: [{\n    type: Output\n  }],\n  filter: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-thead]',\n      template: \"<tr ng2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\n                            class=\\\"ng2-smart-titles\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\n                            [source]=\\\"source\\\"\\n                            (sort)=\\\"sort.emit($event)\\\"\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\n</tr>\\n\\n<tr ng2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\n                              class=\\\"ng2-smart-filters\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [source]=\\\"source\\\"\\n                              (create)=\\\"create.emit($event)\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n</tr>\\n\\n<tr ng2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [createConfirm]=\\\"createConfirm\\\">\\n</tr>\\n\"\n    }]\n  }], function () {\n    return [];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    selectAllRows: [{\n      type: Output\n    }],\n    create: [{\n      type: Output\n    }],\n    filter: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ActionsComponent = /*#__PURE__*/function () {\n  function ActionsComponent() {\n    _classCallCheck(this, ActionsComponent);\n\n    this.create = new EventEmitter();\n  }\n\n  _createClass(ActionsComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n      this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n  }]);\n\n  return ActionsComponent;\n}();\n\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) {\n  return new (t || ActionsComponent)();\n};\n\nActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ActionsComponent,\n  selectors: [[\"ng2-st-actions\"]],\n  inputs: {\n    grid: \"grid\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]],\n  template: function ActionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) {\n        $event.preventDefault();\n        return ctx.create.emit($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) {\n        $event.preventDefault();\n        return ctx.grid.createFormShown = false;\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});\nActionsComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  create: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ActionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-st-actions',\n      template: \"\\n    <a href=\\\"#\\\" class=\\\"ng2-smart-action ng2-smart-action-add-create\\\"\\n        [innerHTML]=\\\"createButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();create.emit($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"ng2-smart-action ng2-smart-action-add-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();grid.createFormShown = false;\\\"></a>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    create: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ActionsTitleComponent = /*#__PURE__*/function () {\n  function ActionsTitleComponent(ref) {\n    _classCallCheck(this, ActionsTitleComponent);\n\n    this.ref = ref;\n  }\n\n  _createClass(ActionsTitleComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.ref.nativeElement.classList.add('ng2-smart-actions');\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n  }]);\n\n  return ActionsTitleComponent;\n}();\n\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) {\n  return new (t || ActionsTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nActionsTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ActionsTitleComponent,\n  selectors: [[\"\", \"ng2-st-actions-title\", \"\"]],\n  inputs: {\n    grid: \"grid\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"ng2-smart-title\"]],\n  template: function ActionsTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n    }\n  },\n  encapsulation: 2\n});\n\nActionsTitleComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nActionsTitleComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ActionsTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-actions-title]',\n      template: \"\\n    <div class=\\\"ng2-smart-title\\\">{{ actionsColumnTitle }}</div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }]\n  });\n})();\n\nvar AddButtonComponent = /*#__PURE__*/function () {\n  function AddButtonComponent(ref) {\n    _classCallCheck(this, AddButtonComponent);\n\n    this.ref = ref;\n    this.create = new EventEmitter();\n  }\n\n  _createClass(AddButtonComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isActionAdd = this.grid.getSetting('actions.add');\n      this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.create.emit({\n          source: this.source\n        });\n      } else {\n        this.grid.createFormShown = true;\n      }\n    }\n  }]);\n\n  return AddButtonComponent;\n}();\n\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) {\n  return new (t || AddButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nAddButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AddButtonComponent,\n  selectors: [[\"\", \"ng2-st-add-button\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 1,\n  vars: 1,\n  consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]],\n  template: function AddButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\nAddButtonComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nAddButtonComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  create: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AddButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-add-button]',\n      template: \"\\n    <a *ngIf=\\\"isActionAdd\\\" href=\\\"#\\\" class=\\\"ng2-smart-action ng2-smart-action-add-add\\\"\\n        [innerHTML]=\\\"addNewButtonContent\\\" (click)=\\\"onAdd($event)\\\"></a>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    create: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CheckboxSelectAllComponent = function CheckboxSelectAllComponent() {\n  _classCallCheck(this, CheckboxSelectAllComponent);\n};\n\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) {\n  return new (t || CheckboxSelectAllComponent)();\n};\n\nCheckboxSelectAllComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CheckboxSelectAllComponent,\n  selectors: [[\"\", \"ng2-st-checkbox-select-all\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    isAllSelected: \"isAllSelected\"\n  },\n  attrs: _c10,\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]],\n  template: function CheckboxSelectAllComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"input\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n    }\n  },\n  directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  encapsulation: 2\n});\nCheckboxSelectAllComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  isAllSelected: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-checkbox-select-all]',\n      template: \"\\n    <input type=\\\"checkbox\\\" [ngModel]=\\\"isAllSelected\\\">\\n  \"\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ColumnTitleComponent = function ColumnTitleComponent() {\n  _classCallCheck(this, ColumnTitleComponent);\n\n  this.sort = new EventEmitter();\n};\n\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) {\n  return new (t || ColumnTitleComponent)();\n};\n\nColumnTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnTitleComponent,\n  selectors: [[\"ng2-st-column-title\"]],\n  inputs: {\n    column: \"column\",\n    source: \"source\"\n  },\n  outputs: {\n    sort: \"sort\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ng2-smart-title\"], [3, \"source\", \"column\", \"sort\"]],\n  template: function ColumnTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"ng2-smart-table-title\", 1);\n      ɵngcc0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_ng2_smart_table_title_sort_1_listener($event) {\n        return ctx.sort.emit($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n    }\n  },\n  directives: function directives() {\n    return [TitleComponent];\n  },\n  encapsulation: 2\n});\nColumnTitleComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  sort: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-st-column-title',\n      template: \"\\n    <div class=\\\"ng2-smart-title\\\">\\n      <ng2-smart-table-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></ng2-smart-table-title>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TitleComponent = /*#__PURE__*/function () {\n  function TitleComponent() {\n    _classCallCheck(this, TitleComponent);\n\n    this.currentDirection = '';\n    this.sort = new EventEmitter();\n  }\n\n  _createClass(TitleComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this24 = this;\n\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(function (dataChanges) {\n          var sortConf = _this24.source.getSort();\n\n          if (sortConf.length > 0 && sortConf[0]['field'] === _this24.column.id) {\n            _this24.currentDirection = sortConf[0]['direction'];\n          } else {\n            _this24.currentDirection = '';\n          }\n\n          sortConf.forEach(function (fieldConf) {});\n        });\n      }\n    }\n  }, {\n    key: \"_sort\",\n    value: function _sort(event) {\n      event.preventDefault();\n      this.changeSortDirection();\n      this.source.setSort([{\n        field: this.column.id,\n        direction: this.currentDirection,\n        compare: this.column.getCompareFunction()\n      }]);\n      this.sort.emit(null);\n    }\n  }, {\n    key: \"changeSortDirection\",\n    value: function changeSortDirection() {\n      if (this.currentDirection) {\n        var newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n        this.currentDirection = newDirection;\n      } else {\n        this.currentDirection = this.column.sortDirection;\n      }\n\n      return this.currentDirection;\n    }\n  }]);\n\n  return TitleComponent;\n}();\n\nTitleComponent.ɵfac = function TitleComponent_Factory(t) {\n  return new (t || TitleComponent)();\n};\n\nTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TitleComponent,\n  selectors: [[\"ng2-smart-table-title\"]],\n  inputs: {\n    column: \"column\",\n    source: \"source\"\n  },\n  outputs: {\n    sort: \"sort\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", \"class\", \"ng2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"ng2-smart-sort\"]],\n  template: function TitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n      ɵngcc0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass],\n  styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{border:4px solid transparent;border-bottom-color:rgba(0,0,0,.3);content:\\\"\\\";display:inline-block;height:0;margin-bottom:2px;width:0}a.sort.desc[_ngcontent-%COMP%]:after{margin-bottom:-2px;transform:rotate(-180deg)}\"]\n});\nTitleComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  sort: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-smart-table-title',\n      template: \"\\n    <a href=\\\"#\\\" *ngIf=\\\"column.isSortable\\\"\\n                (click)=\\\"_sort($event)\\\"\\n                class=\\\"ng2-smart-sort-link sort\\\"\\n                [ngClass]=\\\"currentDirection\\\">\\n      {{ column.title }}\\n    </a>\\n    <span class=\\\"ng2-smart-sort\\\" *ngIf=\\\"!column.isSortable\\\">{{ column.title }}</span>\\n  \",\n      styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{border:4px solid transparent;border-bottom-color:rgba(0,0,0,.3);content:\\\"\\\";display:inline-block;height:0;margin-bottom:2px;width:0}a.sort.desc:after{margin-bottom:-2px;transform:rotate(-180deg)}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TheadFitlersRowComponent = /*#__PURE__*/function () {\n  function TheadFitlersRowComponent() {\n    _classCallCheck(this, TheadFitlersRowComponent);\n\n    this.create = new EventEmitter();\n    this.filter = new EventEmitter();\n  }\n\n  _createClass(TheadFitlersRowComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n  }, {\n    key: \"getVisibleColumns\",\n    value: function getVisibleColumns(columns) {\n      return (columns || []).filter(function (column) {\n        return !column.hide;\n      });\n    }\n  }]);\n\n  return TheadFitlersRowComponent;\n}();\n\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) {\n  return new (t || TheadFitlersRowComponent)();\n};\n\nTheadFitlersRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TheadFitlersRowComponent,\n  selectors: [[\"\", \"ng2-st-thead-filters-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\"\n  },\n  outputs: {\n    create: \"create\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]],\n  template: function TheadFitlersRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n      ɵngcc0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n      ɵngcc0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n      ɵngcc0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, AddButtonComponent, FilterComponent],\n  encapsulation: 2\n});\nTheadFitlersRowComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  create: [{\n    type: Output\n  }],\n  filter: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-thead-filters-row]',\n      template: \"\\n    <th *ngIf=\\\"isMultiSelectVisible\\\"></th>\\n    <th ng2-st-add-button *ngIf=\\\"showActionColumnLeft\\\"\\n                          [grid]=\\\"grid\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\" class=\\\"ng2-smart-th {{ column.id }}\\\">\\n      <ng2-smart-table-filter [source]=\\\"source\\\"\\n                              [column]=\\\"column\\\"\\n                              [inputClass]=\\\"filterInputClass\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n      </ng2-smart-table-filter>\\n    </th>\\n    <th ng2-st-add-button *ngIf=\\\"showActionColumnRight\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [source]=\\\"source\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    create: [{\n      type: Output\n    }],\n    filter: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TheadFormRowComponent = /*#__PURE__*/function () {\n  function TheadFormRowComponent() {\n    _classCallCheck(this, TheadFormRowComponent);\n\n    this.create = new EventEmitter();\n  }\n\n  _createClass(TheadFormRowComponent, [{\n    key: \"onCreate\",\n    value: function onCreate(event) {\n      event.stopPropagation();\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n  }, {\n    key: \"getVisibleCells\",\n    value: function getVisibleCells(cells) {\n      return (cells || []).filter(function (cell) {\n        return !cell.getColumn().hide;\n      });\n    }\n  }]);\n\n  return TheadFormRowComponent;\n}();\n\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) {\n  return new (t || TheadFormRowComponent)();\n};\n\nTheadFormRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TheadFormRowComponent,\n  selectors: [[\"\", \"ng2-st-thead-form-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    createConfirm: \"createConfirm\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c12,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]],\n  template: function TheadFormRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n      ɵngcc0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n      ɵngcc0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n      ɵngcc0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ActionsComponent, CellComponent],\n  encapsulation: 2\n});\nTheadFormRowComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  row: [{\n    type: Input\n  }],\n  createConfirm: [{\n    type: Input\n  }],\n  create: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TheadFormRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-thead-form-row]',\n      template: \"\\n      <td *ngIf=\\\"\\\"></td>\\n      <td  *ngIf=\\\"showActionColumnLeft\\\"  class=\\\"ng2-smart-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n      <td *ngFor=\\\"let cell of getVisibleCells(grid.getNewRow().getCells())\\\">\\n        <ng2-smart-table-cell [cell]=\\\"cell\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [isNew]=\\\"true\\\"\\n                              [createConfirm]=\\\"createConfirm\\\"\\n                              [inputClass]=\\\"addInputClass\\\"\\n                              [isInEditing]=\\\"grid.getNewRow().isInEditing\\\"\\n                              (edited)=\\\"onCreate($event)\\\">\\n        </ng2-smart-table-cell>\\n      </td>\\n      <td  *ngIf=\\\"showActionColumnRight\\\"  class=\\\"ng2-smart-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    create: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TheadTitlesRowComponent = /*#__PURE__*/function () {\n  function TheadTitlesRowComponent() {\n    _classCallCheck(this, TheadTitlesRowComponent);\n\n    this.sort = new EventEmitter();\n    this.selectAllRows = new EventEmitter();\n  }\n\n  _createClass(TheadTitlesRowComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n  }, {\n    key: \"getVisibleColumns\",\n    value: function getVisibleColumns(columns) {\n      return (columns || []).filter(function (column) {\n        return !column.hide;\n      });\n    }\n  }]);\n\n  return TheadTitlesRowComponent;\n}();\n\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) {\n  return new (t || TheadTitlesRowComponent)();\n};\n\nTheadTitlesRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TheadTitlesRowComponent,\n  selectors: [[\"\", \"ng2-st-thead-titles-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    isAllSelected: \"isAllSelected\",\n    source: \"source\"\n  },\n  outputs: {\n    sort: \"sort\",\n    selectAllRows: \"selectAllRows\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c13,\n  decls: 4,\n  vars: 4,\n  consts: [[\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]],\n  template: function TheadTitlesRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n      ɵngcc0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n      ɵngcc0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n      ɵngcc0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, CheckboxSelectAllComponent, ActionsTitleComponent, ɵngcc1.NgClass, ColumnTitleComponent],\n  encapsulation: 2\n});\nTheadTitlesRowComponent.propDecorators = {\n  grid: [{\n    type: Input\n  }],\n  isAllSelected: [{\n    type: Input\n  }],\n  source: [{\n    type: Input\n  }],\n  sort: [{\n    type: Output\n  }],\n  selectAllRows: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ng2-st-thead-titles-row]',\n      template: \"\\n    <th ng2-st-checkbox-select-all *ngIf=\\\"isMultiSelectVisible\\\"\\n                                   [grid]=\\\"grid\\\"\\n                                   [source]=\\\"source\\\"\\n                                   [isAllSelected]=\\\"isAllSelected\\\"\\n                                   (click)=\\\"selectAllRows.emit($event)\\\">\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnLeft\\\" [grid]=\\\"grid\\\"></th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\"\\n        class=\\\"ng2-smart-th {{ column.id }}\\\"\\n        [ngClass]=\\\"column.class\\\"\\n        [style.width]=\\\"column.width\\\">\\n      <ng2-st-column-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></ng2-st-column-title>\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnRight\\\" [grid]=\\\"grid\\\"></th>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    selectAllRows: [{\n      type: Output\n    }],\n    grid: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar THEAD_COMPONENTS = [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, Ng2SmartTableTheadComponent];\n\nvar THeadModule = function THeadModule() {\n  _classCallCheck(this, THeadModule);\n};\n\nTHeadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: THeadModule\n});\nTHeadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function THeadModule_Factory(t) {\n    return new (t || THeadModule)();\n  },\n  imports: [[CommonModule, FormsModule, FilterModule, CellModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(THeadModule, {\n    declarations: function declarations() {\n      return [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, Ng2SmartTableTheadComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, FilterModule, CellModule];\n    },\n    exports: function exports() {\n      return [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, Ng2SmartTableTheadComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(THeadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, FilterModule, CellModule],\n      declarations: [].concat(THEAD_COMPONENTS),\n      exports: [].concat(THEAD_COMPONENTS)\n    }]\n  }], null, null);\n})();\n\nfunction compareValues(direction, a, b) {\n  if (a < b) {\n    return -1 * direction;\n  }\n\n  if (a > b) {\n    return direction;\n  }\n\n  return 0;\n}\n\nvar LocalSorter = /*#__PURE__*/function () {\n  function LocalSorter() {\n    _classCallCheck(this, LocalSorter);\n  }\n\n  _createClass(LocalSorter, null, [{\n    key: \"sort\",\n    value: function sort(data, field, direction, customCompare) {\n      var dir = direction === 'asc' ? 1 : -1;\n      var compare = customCompare ? customCompare : compareValues;\n      return data.sort(function (a, b) {\n        return compare.call(null, dir, a[field], b[field]);\n      });\n    }\n  }]);\n\n  return LocalSorter;\n}();\n\nfunction filterValues(value, search) {\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\n}\n\nvar LocalFilter = /*#__PURE__*/function () {\n  function LocalFilter() {\n    _classCallCheck(this, LocalFilter);\n  }\n\n  _createClass(LocalFilter, null, [{\n    key: \"filter\",\n    value: function filter(data, field, search, customFilter) {\n      var filter = customFilter ? customFilter : filterValues;\n      return data.filter(function (el) {\n        var value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n        return filter.call(null, value, search);\n      });\n    }\n  }]);\n\n  return LocalFilter;\n}();\n\nvar LocalPager = /*#__PURE__*/function () {\n  function LocalPager() {\n    _classCallCheck(this, LocalPager);\n  }\n\n  _createClass(LocalPager, null, [{\n    key: \"paginate\",\n    value: function paginate(data, page, perPage) {\n      return data.slice(perPage * (page - 1), perPage * page);\n    }\n  }]);\n\n  return LocalPager;\n}();\n\nvar LocalDataSource = /*#__PURE__*/function (_DataSource) {\n  _inherits(LocalDataSource, _DataSource);\n\n  var _super15 = _createSuper(LocalDataSource);\n\n  function LocalDataSource() {\n    var _this25;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, LocalDataSource);\n\n    _this25 = _super15.call(this);\n    _this25.data = [];\n    _this25.filteredAndSorted = [];\n    _this25.sortConf = [];\n    _this25.filterConf = {\n      filters: [],\n      andOperator: true\n    };\n    _this25.pagingConf = {};\n    _this25.data = data;\n    return _this25;\n  }\n\n  _createClass(LocalDataSource, [{\n    key: \"load\",\n    value: function load(data) {\n      this.data = data;\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"load\", this).call(this, data);\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend(element) {\n      this.reset(true);\n      this.data.unshift(element);\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"prepend\", this).call(this, element);\n    }\n  }, {\n    key: \"append\",\n    value: function append(element) {\n      this.reset(true);\n      this.data.push(element);\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"append\", this).call(this, element);\n    }\n  }, {\n    key: \"add\",\n    value: function add(element) {\n      this.data.push(element);\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"add\", this).call(this, element);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      this.data = this.data.filter(function (el) {\n        return el !== element;\n      });\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"remove\", this).call(this, element);\n    }\n  }, {\n    key: \"update\",\n    value: function update(element, values) {\n      var _this26 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this26.find(element).then(function (found) {\n          found = deepExtend(found, values);\n\n          _get(_getPrototypeOf(LocalDataSource.prototype), \"update\", _this26).call(_this26, found, values).then(resolve).catch(reject);\n        }).catch(reject);\n      });\n    }\n  }, {\n    key: \"find\",\n    value: function find(element) {\n      var found = this.data.find(function (el) {\n        return el === element;\n      });\n\n      if (found) {\n        return Promise.resolve(found);\n      }\n\n      return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n  }, {\n    key: \"getElements\",\n    value: function getElements() {\n      var data = this.data.slice(0);\n      return Promise.resolve(this.prepareData(data));\n    }\n  }, {\n    key: \"getFilteredAndSorted\",\n    value: function getFilteredAndSorted() {\n      var data = this.data.slice(0);\n      this.prepareData(data);\n      return Promise.resolve(this.filteredAndSorted);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var data = this.data.slice(0);\n      return Promise.resolve(data);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (silent) {\n        this.filterConf = {\n          filters: [],\n          andOperator: true\n        };\n        this.sortConf = [];\n        this.pagingConf['page'] = 1;\n      } else {\n        this.setFilter([], true, false);\n        this.setSort([], false);\n        this.setPage(1);\n      }\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      this.data = [];\n      return _get(_getPrototypeOf(LocalDataSource.prototype), \"empty\", this).call(this);\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     * @param conf\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n\n  }, {\n    key: \"setSort\",\n    value: function setSort(conf) {\n      var doEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (conf !== null) {\n        conf.forEach(function (fieldConf) {\n          if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n            throw new Error('Sort configuration object is not valid');\n          }\n        });\n        this.sortConf = conf;\n      }\n\n      _get(_getPrototypeOf(LocalDataSource.prototype), \"setSort\", this).call(this, conf, doEmit);\n\n      return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(conf) {\n      var _this27 = this;\n\n      var andOperator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doEmit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (conf && conf.length > 0) {\n        conf.forEach(function (fieldConf) {\n          _this27.addFilter(fieldConf, andOperator, false);\n        });\n      } else {\n        this.filterConf = {\n          filters: [],\n          andOperator: true\n        };\n      }\n\n      this.filterConf.andOperator = andOperator;\n      this.pagingConf['page'] = 1;\n\n      _get(_getPrototypeOf(LocalDataSource.prototype), \"setFilter\", this).call(this, conf, andOperator, doEmit);\n\n      return this;\n    }\n  }, {\n    key: \"addFilter\",\n    value: function addFilter(fieldConf) {\n      var _this28 = this;\n\n      var andOperator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doEmit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n        throw new Error('Filter configuration object is not valid');\n      }\n\n      var found = false;\n      this.filterConf.filters.forEach(function (currentFieldConf, index) {\n        if (currentFieldConf['field'] === fieldConf['field']) {\n          _this28.filterConf.filters[index] = fieldConf;\n          found = true;\n        }\n      });\n\n      if (!found) {\n        this.filterConf.filters.push(fieldConf);\n      }\n\n      this.filterConf.andOperator = andOperator;\n\n      _get(_getPrototypeOf(LocalDataSource.prototype), \"addFilter\", this).call(this, fieldConf, andOperator, doEmit);\n\n      return this;\n    }\n  }, {\n    key: \"setPaging\",\n    value: function setPaging(page, perPage) {\n      var doEmit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.pagingConf['page'] = page;\n      this.pagingConf['perPage'] = perPage;\n\n      _get(_getPrototypeOf(LocalDataSource.prototype), \"setPaging\", this).call(this, page, perPage, doEmit);\n\n      return this;\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var doEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.pagingConf['page'] = page;\n\n      _get(_getPrototypeOf(LocalDataSource.prototype), \"setPage\", this).call(this, page, doEmit);\n\n      return this;\n    }\n  }, {\n    key: \"getSort\",\n    value: function getSort() {\n      return this.sortConf;\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter() {\n      return this.filterConf;\n    }\n  }, {\n    key: \"getPaging\",\n    value: function getPaging() {\n      return this.pagingConf;\n    }\n  }, {\n    key: \"prepareData\",\n    value: function prepareData(data) {\n      data = this.filter(data);\n      data = this.sort(data);\n      this.filteredAndSorted = data.slice(0);\n      return this.paginate(data);\n    }\n  }, {\n    key: \"sort\",\n    value: function sort(data) {\n      if (this.sortConf) {\n        this.sortConf.forEach(function (fieldConf) {\n          data = LocalSorter.sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n        });\n      }\n\n      return data;\n    } // TODO: refactor?\n\n  }, {\n    key: \"filter\",\n    value: function filter(data) {\n      if (this.filterConf.filters) {\n        if (this.filterConf.andOperator) {\n          this.filterConf.filters.forEach(function (fieldConf) {\n            if (fieldConf['search'].length > 0) {\n              data = LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n            }\n          });\n        } else {\n          var mergedData = [];\n          this.filterConf.filters.forEach(function (fieldConf) {\n            if (fieldConf['search'].length > 0) {\n              mergedData = mergedData.concat(LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n            }\n          }); // remove non unique items\n\n          data = mergedData.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) === pos;\n          });\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"paginate\",\n    value: function paginate(data) {\n      if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n        data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n      }\n\n      return data;\n    }\n  }]);\n\n  return LocalDataSource;\n}(DataSource);\n\nvar Ng2SmartTableComponent = /*#__PURE__*/function () {\n  function Ng2SmartTableComponent() {\n    _classCallCheck(this, Ng2SmartTableComponent);\n\n    this.settings = {};\n    this.rowSelect = new EventEmitter();\n    this.rowDeselect = new EventEmitter();\n    this.userRowSelect = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.edit = new EventEmitter();\n    this.create = new EventEmitter();\n    this.custom = new EventEmitter();\n    this.deleteConfirm = new EventEmitter();\n    this.editConfirm = new EventEmitter();\n    this.createConfirm = new EventEmitter();\n    this.rowHover = new EventEmitter();\n    this.defaultSettings = {\n      mode: 'inline',\n      selectMode: 'single',\n\n      /**\n       * Points to an element in all data\n       *\n       * when < 0 all lines must be deselected\n       */\n      selectedRowIndex: 0,\n      switchPageToSelectedRowPage: false,\n      hideHeader: false,\n      hideSubHeader: false,\n      actions: {\n        columnTitle: 'Actions',\n        add: true,\n        edit: true,\n        delete: true,\n        custom: [],\n        position: 'left'\n      },\n      filter: {\n        inputClass: ''\n      },\n      edit: {\n        inputClass: '',\n        editButtonContent: 'Edit',\n        saveButtonContent: 'Update',\n        cancelButtonContent: 'Cancel',\n        confirmSave: false\n      },\n      add: {\n        inputClass: '',\n        addButtonContent: 'Add New',\n        createButtonContent: 'Create',\n        cancelButtonContent: 'Cancel',\n        confirmCreate: false\n      },\n      delete: {\n        deleteButtonContent: 'Delete',\n        confirmDelete: false\n      },\n      attr: {\n        id: '',\n        class: ''\n      },\n      noDataMessage: 'No data found',\n      columns: {},\n      pager: {\n        display: true,\n        page: 1,\n        perPage: 10\n      },\n      rowClassFunction: function rowClassFunction() {\n        return '';\n      }\n    };\n    this.isAllSelected = false;\n    this.destroyed$ = new Subject();\n  }\n\n  _createClass(Ng2SmartTableComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.grid) {\n        if (changes['settings']) {\n          this.grid.setSettings(this.prepareSettings());\n        }\n\n        if (changes['source']) {\n          this.source = this.prepareSource();\n          this.grid.setSource(this.source);\n        }\n      } else {\n        this.initGrid();\n      }\n\n      this.tableId = this.grid.getSetting('attr.id');\n      this.tableClass = this.grid.getSetting('attr.class');\n      this.isHideHeader = this.grid.getSetting('hideHeader');\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n      this.isPagerDisplay = this.grid.getSetting('pager.display');\n      this.isPagerDisplay = this.grid.getSetting('pager.display');\n      this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n      this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyed$.next();\n    }\n  }, {\n    key: \"selectRow\",\n    value: function selectRow(index) {\n      var switchPageToSelectedRowPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.grid.getSetting('switchPageToSelectedRowPage');\n\n      if (!this.grid) {\n        return;\n      }\n\n      this.grid.settings.selectedRowIndex = index;\n\n      if (this.isIndexOutOfRange(index)) {\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAllRows();\n        return;\n      }\n\n      if (switchPageToSelectedRowPage) {\n        var source = this.source;\n        var paging = source.getPaging();\n        var page = getPageForRowIndex(index, paging.perPage);\n        index = index % paging.perPage;\n        this.grid.settings.selectedRowIndex = index;\n\n        if (page !== paging.page) {\n          source.setPage(page);\n          return;\n        }\n      }\n\n      var row = this.grid.getRows()[index];\n\n      if (row) {\n        this.onSelectRow(row);\n      } else {\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAllRows();\n      }\n    }\n  }, {\n    key: \"deselectAllRows\",\n    value: function deselectAllRows() {\n      this.grid.dataSet.deselectAll();\n      this.emitDeselectRow(null);\n    }\n  }, {\n    key: \"editRowSelect\",\n    value: function editRowSelect(row) {\n      if (this.grid.getSetting('selectMode') === 'multi') {\n        this.onMultipleSelectRow(row);\n      } else {\n        this.onSelectRow(row);\n      }\n    }\n  }, {\n    key: \"onUserSelectRow\",\n    value: function onUserSelectRow(row) {\n      if (this.grid.getSetting('selectMode') !== 'multi') {\n        this.grid.selectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n      }\n    }\n  }, {\n    key: \"onRowHover\",\n    value: function onRowHover(row) {\n      this.rowHover.emit(row);\n    }\n  }, {\n    key: \"multipleSelectRow\",\n    value: function multipleSelectRow(row) {\n      this.grid.multipleSelectRow(row);\n      this.emitUserSelectRow(row);\n      this.emitSelectRow(row);\n    }\n  }, {\n    key: \"onSelectAllRows\",\n    value: function onSelectAllRows($event) {\n      this.isAllSelected = !this.isAllSelected;\n      this.grid.selectAllRows(this.isAllSelected);\n      this.emitUserSelectRow(null);\n      this.emitSelectRow(null);\n    }\n  }, {\n    key: \"onSelectRow\",\n    value: function onSelectRow(row) {\n      this.grid.selectRow(row);\n      this.emitSelectRow(row);\n    }\n  }, {\n    key: \"onMultipleSelectRow\",\n    value: function onMultipleSelectRow(row) {\n      this.emitSelectRow(row);\n    }\n  }, {\n    key: \"initGrid\",\n    value: function initGrid() {\n      this.source = this.prepareSource();\n      this.grid = new Grid(this.source, this.prepareSettings());\n      this.subscribeToOnSelectRow();\n      this.subscribeToOnDeselectRow();\n    }\n  }, {\n    key: \"prepareSource\",\n    value: function prepareSource() {\n      if (this.source instanceof DataSource) {\n        return this.source;\n      } else if (this.source instanceof Array) {\n        return new LocalDataSource(this.source);\n      }\n\n      return new LocalDataSource();\n    }\n  }, {\n    key: \"prepareSettings\",\n    value: function prepareSettings() {\n      return deepExtend({}, this.defaultSettings, this.settings);\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage($event) {\n      this.resetAllSelector();\n    }\n  }, {\n    key: \"sort\",\n    value: function sort($event) {\n      this.resetAllSelector();\n    }\n  }, {\n    key: \"filter\",\n    value: function filter($event) {\n      this.resetAllSelector();\n    }\n  }, {\n    key: \"resetAllSelector\",\n    value: function resetAllSelector() {\n      this.isAllSelected = false;\n    }\n  }, {\n    key: \"emitUserSelectRow\",\n    value: function emitUserSelectRow(row) {\n      var selectedRows = this.grid.getSelectedRows();\n      this.userRowSelect.emit({\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        source: this.source,\n        selected: selectedRows && selectedRows.length ? selectedRows.map(function (r) {\n          return r.getData();\n        }) : []\n      });\n    }\n  }, {\n    key: \"emitSelectRow\",\n    value: function emitSelectRow(row) {\n      var data = {\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        source: this.source\n      };\n      this.rowSelect.emit(data);\n\n      if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n        this.rowDeselect.emit(data);\n      }\n    }\n  }, {\n    key: \"emitDeselectRow\",\n    value: function emitDeselectRow(row) {\n      this.rowDeselect.emit({\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        source: this.source\n      });\n    }\n  }, {\n    key: \"isIndexOutOfRange\",\n    value: function isIndexOutOfRange(index) {\n      var _a;\n\n      var dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n      return index < 0 || typeof dataAmount === 'number' && index >= dataAmount;\n    }\n  }, {\n    key: \"subscribeToOnSelectRow\",\n    value: function subscribeToOnSelectRow() {\n      var _this29 = this;\n\n      if (this.onSelectRowSubscription) {\n        this.onSelectRowSubscription.unsubscribe();\n      }\n\n      this.onSelectRowSubscription = this.grid.onSelectRow().pipe(takeUntil(this.destroyed$)).subscribe(function (row) {\n        _this29.emitSelectRow(row);\n      });\n    }\n  }, {\n    key: \"subscribeToOnDeselectRow\",\n    value: function subscribeToOnDeselectRow() {\n      var _this30 = this;\n\n      if (this.onDeselectRowSubscription) {\n        this.onDeselectRowSubscription.unsubscribe();\n      }\n\n      this.onDeselectRowSubscription = this.grid.onDeselectRow().pipe(takeUntil(this.destroyed$)).subscribe(function (row) {\n        _this30.emitDeselectRow(row);\n      });\n    }\n  }]);\n\n  return Ng2SmartTableComponent;\n}();\n\nNg2SmartTableComponent.ɵfac = function Ng2SmartTableComponent_Factory(t) {\n  return new (t || Ng2SmartTableComponent)();\n};\n\nNg2SmartTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2SmartTableComponent,\n  selectors: [[\"ng2-smart-table\"]],\n  inputs: {\n    settings: \"settings\",\n    source: \"source\"\n  },\n  outputs: {\n    rowSelect: \"rowSelect\",\n    rowDeselect: \"rowDeselect\",\n    userRowSelect: \"userRowSelect\",\n    delete: \"delete\",\n    edit: \"edit\",\n    create: \"create\",\n    custom: \"custom\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\",\n    createConfirm: \"createConfirm\",\n    rowHover: \"rowHover\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 9,\n  consts: [[3, \"id\", \"ngClass\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"ng2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]],\n  template: function Ng2SmartTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵtemplate(1, Ng2SmartTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tbody\", 2);\n      ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableComponent_Template_tbody_edit_2_listener($event) {\n        return ctx.edit.emit($event);\n      })(\"delete\", function Ng2SmartTableComponent_Template_tbody_delete_2_listener($event) {\n        return ctx.delete.emit($event);\n      })(\"custom\", function Ng2SmartTableComponent_Template_tbody_custom_2_listener($event) {\n        return ctx.custom.emit($event);\n      })(\"userSelectRow\", function Ng2SmartTableComponent_Template_tbody_userSelectRow_2_listener($event) {\n        return ctx.onUserSelectRow($event);\n      })(\"editRowSelect\", function Ng2SmartTableComponent_Template_tbody_editRowSelect_2_listener($event) {\n        return ctx.editRowSelect($event);\n      })(\"multipleSelectRow\", function Ng2SmartTableComponent_Template_tbody_multipleSelectRow_2_listener($event) {\n        return ctx.multipleSelectRow($event);\n      })(\"rowHover\", function Ng2SmartTableComponent_Template_tbody_rowHover_2_listener($event) {\n        return ctx.onRowHover($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, Ng2SmartTableComponent_ng2_smart_table_pager_3_Template, 1, 2, \"ng2-smart-table-pager\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, Ng2SmartTableTbodyComponent, Ng2SmartTableTheadComponent, PagerComponent],\n  styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{border-collapse:collapse;border-spacing:0;display:table;line-height:1.5em;max-width:100%;overflow:auto;width:100%;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"]\n});\nNg2SmartTableComponent.propDecorators = {\n  source: [{\n    type: Input\n  }],\n  settings: [{\n    type: Input\n  }],\n  rowSelect: [{\n    type: Output\n  }],\n  rowDeselect: [{\n    type: Output\n  }],\n  userRowSelect: [{\n    type: Output\n  }],\n  delete: [{\n    type: Output\n  }],\n  edit: [{\n    type: Output\n  }],\n  create: [{\n    type: Output\n  }],\n  custom: [{\n    type: Output\n  }],\n  deleteConfirm: [{\n    type: Output\n  }],\n  editConfirm: [{\n    type: Output\n  }],\n  createConfirm: [{\n    type: Output\n  }],\n  rowHover: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2SmartTableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-smart-table',\n      template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n\\n  <thead ng2-st-thead *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n                      [grid]=\\\"grid\\\"\\n                      [isAllSelected]=\\\"isAllSelected\\\"\\n                      [source]=\\\"source\\\"\\n                      [createConfirm]=\\\"createConfirm\\\"\\n                      (create)=\\\"create.emit($event)\\\"\\n                      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n                      (sort)=\\\"sort($event)\\\"\\n                      (filter)=\\\"filter($event)\\\">\\n  </thead>\\n\\n  <tbody ng2-st-tbody [grid]=\\\"grid\\\"\\n                      [source]=\\\"source\\\"\\n                      [deleteConfirm]=\\\"deleteConfirm\\\"\\n                      [editConfirm]=\\\"editConfirm\\\"\\n                      [rowClassFunction]=\\\"rowClassFunction\\\"\\n                      (edit)=\\\"edit.emit($event)\\\"\\n                      (delete)=\\\"delete.emit($event)\\\"\\n                      (custom)=\\\"custom.emit($event)\\\"\\n                      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n                      (editRowSelect)=\\\"editRowSelect($event)\\\"\\n                      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n                      (rowHover)=\\\"onRowHover($event)\\\">\\n  </tbody>\\n\\n</table>\\n\\n<ng2-smart-table-pager *ngIf=\\\"isPagerDisplay\\\"\\n                        [source]=\\\"source\\\"\\n                        [perPageSelect]=\\\"perPageSelect\\\"\\n                        (changePage)=\\\"changePage($event)\\\">\\n</ng2-smart-table-pager>\\n\",\n      styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{border-collapse:collapse;border-spacing:0;display:table;line-height:1.5em;max-width:100%;overflow:auto;width:100%;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    settings: [{\n      type: Input\n    }],\n    rowSelect: [{\n      type: Output\n    }],\n    rowDeselect: [{\n      type: Output\n    }],\n    userRowSelect: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    create: [{\n      type: Output\n    }],\n    custom: [{\n      type: Output\n    }],\n    deleteConfirm: [{\n      type: Output\n    }],\n    editConfirm: [{\n      type: Output\n    }],\n    createConfirm: [{\n      type: Output\n    }],\n    rowHover: [{\n      type: Output\n    }],\n    source: [{\n      type: Input\n    }]\n  });\n})();\n\nvar Ng2SmartTableModule = function Ng2SmartTableModule() {\n  _classCallCheck(this, Ng2SmartTableModule);\n};\n\nNg2SmartTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2SmartTableModule\n});\nNg2SmartTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function Ng2SmartTableModule_Factory(t) {\n    return new (t || Ng2SmartTableModule)();\n  },\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SmartTableModule, {\n    declarations: function declarations() {\n      return [Ng2SmartTableComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule];\n    },\n    exports: function exports() {\n      return [Ng2SmartTableComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2SmartTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule],\n      declarations: [Ng2SmartTableComponent],\n      exports: [Ng2SmartTableComponent]\n    }]\n  }], null, null);\n})();\n\nvar ServerSourceConf = function ServerSourceConf() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$endPoint = _ref.endPoint,\n      endPoint = _ref$endPoint === void 0 ? '' : _ref$endPoint,\n      _ref$sortFieldKey = _ref.sortFieldKey,\n      sortFieldKey = _ref$sortFieldKey === void 0 ? '' : _ref$sortFieldKey,\n      _ref$sortDirKey = _ref.sortDirKey,\n      sortDirKey = _ref$sortDirKey === void 0 ? '' : _ref$sortDirKey,\n      _ref$pagerPageKey = _ref.pagerPageKey,\n      pagerPageKey = _ref$pagerPageKey === void 0 ? '' : _ref$pagerPageKey,\n      _ref$pagerLimitKey = _ref.pagerLimitKey,\n      pagerLimitKey = _ref$pagerLimitKey === void 0 ? '' : _ref$pagerLimitKey,\n      _ref$filterFieldKey = _ref.filterFieldKey,\n      filterFieldKey = _ref$filterFieldKey === void 0 ? '' : _ref$filterFieldKey,\n      _ref$totalKey = _ref.totalKey,\n      totalKey = _ref$totalKey === void 0 ? '' : _ref$totalKey,\n      _ref$dataKey = _ref.dataKey,\n      dataKey = _ref$dataKey === void 0 ? '' : _ref$dataKey;\n\n  _classCallCheck(this, ServerSourceConf);\n\n  this.endPoint = endPoint ? endPoint : '';\n  this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n  this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n  this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n  this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n  this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n  this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n  this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n};\n\nServerSourceConf.SORT_FIELD_KEY = '_sort';\nServerSourceConf.SORT_DIR_KEY = '_order';\nServerSourceConf.PAGER_PAGE_KEY = '_page';\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\nServerSourceConf.TOTAL_KEY = 'x-total-count';\nServerSourceConf.DATA_KEY = '';\n\nvar ServerDataSource = /*#__PURE__*/function (_LocalDataSource) {\n  _inherits(ServerDataSource, _LocalDataSource);\n\n  var _super16 = _createSuper(ServerDataSource);\n\n  function ServerDataSource(http) {\n    var _this31;\n\n    var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ServerDataSource);\n\n    _this31 = _super16.call(this);\n    _this31.http = http;\n    _this31.lastRequestCount = 0;\n    _this31.conf = new ServerSourceConf(conf);\n\n    if (!_this31.conf.endPoint) {\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n    }\n\n    return _this31;\n  }\n\n  _createClass(ServerDataSource, [{\n    key: \"count\",\n    value: function count() {\n      return this.lastRequestCount;\n    }\n  }, {\n    key: \"getElements\",\n    value: function getElements() {\n      var _this32 = this;\n\n      return this.requestElements().pipe(map(function (res) {\n        _this32.lastRequestCount = _this32.extractTotalFromResponse(res);\n        _this32.data = _this32.extractDataFromResponse(res);\n        return _this32.data;\n      })).toPromise();\n    }\n    /**\n     * Extracts array of data from server response\n     * @param res\n     * @returns {any}\n     */\n\n  }, {\n    key: \"extractDataFromResponse\",\n    value: function extractDataFromResponse(res) {\n      var rawData = res.body;\n      var data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n\n      if (data instanceof Array) {\n        return data;\n      }\n\n      throw new Error(\"Data must be an array.\\n    Please check that data extracted from the server response by the key '\".concat(this.conf.dataKey, \"' exists and is array.\"));\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     * @param res\n     * @returns {any}\n     */\n\n  }, {\n    key: \"extractTotalFromResponse\",\n    value: function extractTotalFromResponse(res) {\n      if (res.headers.has(this.conf.totalKey)) {\n        return +res.headers.get(this.conf.totalKey);\n      } else {\n        var rawData = res.body;\n        return getDeepFromObject(rawData, this.conf.totalKey, 0);\n      }\n    }\n  }, {\n    key: \"requestElements\",\n    value: function requestElements() {\n      var httpParams = this.createRequesParams();\n      return this.http.get(this.conf.endPoint, {\n        params: httpParams,\n        observe: 'response'\n      });\n    }\n  }, {\n    key: \"createRequesParams\",\n    value: function createRequesParams() {\n      var httpParams = new HttpParams();\n      httpParams = this.addSortRequestParams(httpParams);\n      httpParams = this.addFilterRequestParams(httpParams);\n      return this.addPagerRequestParams(httpParams);\n    }\n  }, {\n    key: \"addSortRequestParams\",\n    value: function addSortRequestParams(httpParams) {\n      var _this33 = this;\n\n      if (this.sortConf) {\n        this.sortConf.forEach(function (fieldConf) {\n          httpParams = httpParams.set(_this33.conf.sortFieldKey, fieldConf.field);\n          httpParams = httpParams.set(_this33.conf.sortDirKey, fieldConf.direction.toUpperCase());\n        });\n      }\n\n      return httpParams;\n    }\n  }, {\n    key: \"addFilterRequestParams\",\n    value: function addFilterRequestParams(httpParams) {\n      var _this34 = this;\n\n      if (this.filterConf.filters) {\n        this.filterConf.filters.forEach(function (fieldConf) {\n          if (fieldConf['search']) {\n            httpParams = httpParams.set(_this34.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n          }\n        });\n      }\n\n      return httpParams;\n    }\n  }, {\n    key: \"addPagerRequestParams\",\n    value: function addPagerRequestParams(httpParams) {\n      if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n        httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n        httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n      }\n\n      return httpParams;\n    }\n  }]);\n\n  return ServerDataSource;\n}(LocalDataSource);\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Cell, DefaultEditor, DefaultFilter, LocalDataSource, Ng2SmartTableComponent, Ng2SmartTableModule, ServerDataSource, CellModule as ɵa, CellComponent as ɵb, TbodyEditDeleteComponent as ɵba, TbodyCustomComponent as ɵbb, Ng2SmartTableTbodyComponent as ɵbc, THeadModule as ɵbd, ActionsComponent as ɵbe, ActionsTitleComponent as ɵbf, AddButtonComponent as ɵbg, CheckboxSelectAllComponent as ɵbh, ColumnTitleComponent as ɵbi, TitleComponent as ɵbj, TheadFitlersRowComponent as ɵbk, TheadFormRowComponent as ɵbl, TheadTitlesRowComponent as ɵbm, Ng2SmartTableTheadComponent as ɵbn, Row as ɵbo, DataSet as ɵbp, DataSource as ɵbq, EditCellDefault as ɵc, CustomEditComponent as ɵd, DefaultEditComponent as ɵe, EditCellComponent as ɵf, CheckboxEditorComponent as ɵg, CompleterEditorComponent as ɵh, InputEditorComponent as ɵi, SelectEditorComponent as ɵj, TextareaEditorComponent as ɵk, CustomViewComponent as ɵl, ViewCellComponent as ɵm, FilterModule as ɵn, FilterDefault as ɵo, FilterComponent as ɵp, DefaultFilterComponent as ɵq, CustomFilterComponent as ɵr, CheckboxFilterComponent as ɵs, CompleterFilterComponent as ɵt, InputFilterComponent as ɵu, SelectFilterComponent as ɵv, PagerModule as ɵw, PagerComponent as ɵx, TBodyModule as ɵy, TbodyCreateCancelComponent as ɵz };","map":{"version":3,"sources":["../../../projects/ng2-smart-table/src/lib/lib/helpers.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/cell.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/row.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/column.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/data-set.ts","../../../projects/ng2-smart-table/src/lib/lib/grid.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/default-editor.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/completer-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/input-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/select-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/data-source.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-default.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/default-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/custom-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/default-filter.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/completer-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/input-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/select-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.module.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.component.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.module.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/create-cancel.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/edit-delete.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/custom.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.module.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/add-button.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/checkbox-select-all.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/column-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/title/title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-filters-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-form-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-titles-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.sorter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.filter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.pager.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.data-source.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.component.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server-source.conf.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server.data-source.ts","../../../projects/ng2-smart-table/src/ng2-smart-table.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourcesContent":["import { cloneDeep } from 'lodash';\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nexport const deepExtend = function(...objects: Array<any>): any {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0];\n\n  // convert arguments to array and cut off target object\n  const args = Array.prototype.slice.call(arguments, 1);\n\n  let val, src;\n\n  args.forEach((obj: any) => {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n      val = obj[key]; // new value\n\n      // recursion prevention\n      if (val === target) {\n        return;\n\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return;\n\n        // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return;\n\n        // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return;\n\n        // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n\n  return target;\n};\n\nexport class Deferred {\n\n  promise: Promise<any>;\n\n  resolve: any;\n  reject: any;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\n  const keys = name.split('.');\n  // clone the object\n  let level = deepExtend({}, object);\n  keys.forEach((k) => {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    }\n  });\n\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nexport function getPageForRowIndex(index: number, perPage: number): number {\n  // we need to add 1 to convert 0-based index to 1-based page number.\n  return Math.floor(index / perPage) + 1;\n}\n","import { Column } from './column';\nimport { DataSet } from './data-set';\nimport { Row } from './row';\n\nexport function prepareValue (value: any) { return value }\n\nexport class Cell {\n\n  newValue: any = '';\n  protected static PREPARE = prepareValue;\n\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\n    this.newValue = value;\n  }\n\n  getColumn(): Column {\n    return this.column;\n  }\n\n  getRow(): Row {\n    return this.row;\n  }\n\n  getValue(): any {\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n    return prepare.call(null, this.value, this.row.getData(), this);\n  }\n\n  setValue(value: any): any {\n    this.newValue = value;\n  }\n\n  getId(): string {\n    return this.getColumn().id;\n  }\n\n  getTitle(): string {\n    return this.getColumn().title;\n  }\n\n  isEditable(): boolean {\n    if (this.getRow().index === -1) {\n      return this.getColumn().isAddable;\n    }\n    else {\n      return this.getColumn().isEditable;\n    }\n  }\n\n}\n","import { Cell } from './cell';\nimport { Column } from './column';\nimport { DataSet } from './data-set';\n\nexport class Row {\n\n  isSelected: boolean = false;\n  isInEditing: boolean = false;\n  cells: Array<Cell> = [];\n\n\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\n    this.process();\n  }\n\n  getCell(column: Column): Cell {\n    return this.cells.find(el => el.getColumn() === column);\n  }\n\n  getCells() {\n    return this.cells;\n  }\n\n  getData(): any {\n    return this.data;\n  }\n\n  getIsSelected(): boolean {\n    return this.isSelected;\n  }\n\n  getNewData(): any {\n    const values = Object.assign({}, this.data);\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n    return values;\n  }\n\n  setData(data: any): any {\n    this.data = data;\n    this.process();\n  }\n\n  process() {\n    this.cells = [];\n    this._dataSet.getColumns().forEach((column: Column) => {\n      const cell = this.createCell(column);\n      this.cells.push(cell);\n    });\n  }\n\n  createCell(column: Column): Cell {\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n    return new Cell(value, this, column, this._dataSet);\n  }\n}\n","import { DataSet } from './data-set';\n\nexport class Column {\n\n  title: string = '';\n  type: string = '';\n  class: string = '';\n  width: string = '';\n  hide: boolean = false;\n  isSortable: boolean = false;\n  isEditable: boolean = true;\n  isAddable: boolean = true;\n  isFilterable: boolean = false;\n  sortDirection: string = '';\n  defaultSortDirection: string = '';\n  editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\n  filter: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\n  renderComponent: any = null;\n  compareFunction: Function;\n  valuePrepareFunction: Function;\n  filterFunction: Function;\n  onComponentInitFunction: Function;\n\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\n    this.process();\n  }\n\n  getOnComponentInitFunction(): Function {\n    return this.onComponentInitFunction;\n  }\n\n  getCompareFunction(): Function {\n    return this.compareFunction;\n  }\n\n  getValuePrepareFunction(): Function {\n    return this.valuePrepareFunction;\n  }\n\n  getFilterFunction(): Function {\n    return this.filterFunction;\n  }\n\n  getConfig(): any {\n    return this.editor && this.editor.config;\n  }\n\n  getFilterType(): any {\n    return this.filter && this.filter.type;\n  }\n\n  getFilterConfig(): any {\n    return this.filter && this.filter.config;\n  }\n\n  protected process() {\n    this.title = this.settings['title'];\n    this.class = this.settings['class'];\n    this.width = this.settings['width'];\n    this.hide = !!this.settings['hide'];\n    this.type = this.prepareType();\n    this.editor = this.settings['editor'];\n    this.filter = this.settings['filter'];\n    this.renderComponent = this.settings['renderComponent'];\n\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\n    this.defaultSortDirection = ['asc', 'desc']\n      .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\n    this.isAddable=typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\n    this.sortDirection = this.prepareSortDirection();\n\n    this.compareFunction = this.settings['compareFunction'];\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\n    this.filterFunction = this.settings['filterFunction'];\n    this.onComponentInitFunction = this.settings['onComponentInitFunction'];\n  }\n\n  prepareType(): string {\n    return this.settings['type'] || this.determineType();\n  }\n\n  prepareSortDirection(): string {\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\n  }\n\n  determineType(): string {\n    // TODO: determine type by data\n    return 'text';\n  }\n}\n","import { Row } from './row';\nimport { Column } from './column';\n\nexport class DataSet {\n\n  newRow: Row;\n\n  protected data: Array<any> = [];\n  protected columns: Array<Column> = [];\n  protected rows: Array<Row> = [];\n  protected selectedRow: Row;\n  protected willSelect: string;\n\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\n    this.createColumns(columnSettings);\n    this.setData(data);\n\n    this.createNewRow();\n  }\n\n  setData(data: Array<any>) {\n    this.data = data;\n    this.createRows();\n  }\n\n  getColumns(): Array<Column> {\n    return this.columns;\n  }\n\n  getRows(): Array<Row> {\n    return this.rows;\n  }\n\n  getFirstRow(): Row {\n    return this.rows[0];\n  }\n\n  getLastRow(): Row {\n    return this.rows[this.rows.length - 1];\n  }\n\n  findRowByData(data: any): Row {\n    return this.rows.find((row: Row) => row.getData() === data);\n  }\n\n  deselectAll() {\n    this.rows.forEach((row) => {\n      row.isSelected = false;\n    });\n    // we need to clear selectedRow field because no one row selected\n    this.selectedRow = undefined;\n  }\n\n  selectRow(row: Row): Row | undefined {\n    const previousIsSelected = row.isSelected;\n    this.deselectAll();\n\n    row.isSelected = !previousIsSelected;\n    this.selectedRow = row;\n\n    return this.selectedRow;\n  }\n\n  multipleSelectRow(row: Row): Row {\n    row.isSelected = !row.isSelected;\n    this.selectedRow = row;\n\n    return this.selectedRow;\n  }\n\n  selectPreviousRow(): Row {\n    if (this.rows.length > 0) {\n      let index = this.selectedRow ? this.selectedRow.index : 0;\n      if (index > this.rows.length - 1) {\n        index = this.rows.length - 1;\n      }\n      this.selectRow(this.rows[index]);\n      return this.selectedRow;\n    }\n  }\n\n  selectFirstRow(): Row | undefined {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[0]);\n      return this.selectedRow;\n    }\n  }\n\n  selectLastRow(): Row | undefined {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[this.rows.length - 1]);\n      return this.selectedRow;\n    }\n  }\n\n  selectRowByIndex(index: number): Row | undefined {\n    const rowsLength: number = this.rows.length;\n    if (rowsLength === 0) {\n      return;\n    }\n    if (!index) {\n      this.selectFirstRow();\n      return this.selectedRow;\n    }\n    if (index > 0 && index < rowsLength) {\n      this.selectRow(this.rows[index]);\n      return this.selectedRow;\n    }\n    // we need to deselect all rows if we got an incorrect index\n    this.deselectAll();\n  }\n\n  willSelectFirstRow() {\n    this.willSelect = 'first';\n  }\n\n  willSelectLastRow() {\n    this.willSelect = 'last';\n  }\n\n  select(selectedRowIndex?: number): Row | undefined {\n    if (this.getRows().length === 0) {\n      return;\n    }\n    if (this.willSelect) {\n      if (this.willSelect === 'first') {\n        this.selectFirstRow();\n      }\n      if (this.willSelect === 'last') {\n        this.selectLastRow();\n      }\n      this.willSelect = '';\n    } else {\n      this.selectRowByIndex(selectedRowIndex);\n    }\n\n    return this.selectedRow;\n  }\n\n  createNewRow() {\n    this.newRow = new Row(-1, {}, this);\n    this.newRow.isInEditing = true;\n  }\n\n  /**\n   * Create columns by mapping from the settings\n   * @param settings\n   * @private\n   */\n  createColumns(settings: any) {\n    for (const id in settings) {\n      if (settings.hasOwnProperty(id)) {\n        this.columns.push(new Column(id, settings[id], this));\n      }\n    }\n  }\n\n  /**\n   * Create rows based on current data prepared in data source\n   * @private\n   */\n  createRows() {\n    this.rows = [];\n    this.data.forEach((el, index) => {\n      this.rows.push(new Row(index, el, this));\n    });\n  }\n}\n","import { Subject, Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { EventEmitter } from '@angular/core';\n\nimport { Deferred, getDeepFromObject, getPageForRowIndex } from './helpers';\nimport { Column } from './data-set/column';\nimport { Row } from './data-set/row';\nimport { DataSet } from './data-set/data-set';\nimport { DataSource } from './data-source/data-source';\n\nexport class Grid {\n\n  createFormShown: boolean = false;\n\n  source: DataSource;\n  settings: any;\n  dataSet: DataSet;\n\n  onSelectRowSource = new Subject<any>();\n  onDeselectRowSource = new Subject<any>();\n\n  private sourceOnChangedSubscription: Subscription;\n  private sourceOnUpdatedSubscription: Subscription;\n\n  constructor(source: DataSource, settings: any) {\n    this.setSettings(settings);\n    this.setSource(source);\n  }\n\n  detach(): void {\n    if (this.sourceOnChangedSubscription) {\n      this.sourceOnChangedSubscription.unsubscribe();\n    }\n    if (this.sourceOnUpdatedSubscription) {\n      this.sourceOnUpdatedSubscription.unsubscribe();\n    }\n  }\n\n  showActionColumn(position: string): boolean {\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n  }\n\n  isCurrentActionsPosition(position: string): boolean {\n    return position == this.getSetting('actions.position');\n  }\n\n  isActionsVisible(): boolean {\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n  }\n\n  isMultiSelectVisible(): boolean {\n    return this.getSetting('selectMode') === 'multi';\n  }\n\n  getNewRow(): Row {\n    return this.dataSet.newRow;\n  }\n\n  setSettings(settings: Object) {\n    this.settings = settings;\n    this.dataSet = new DataSet([], this.getSetting('columns'));\n\n    if (this.source) {\n      this.source.refresh();\n    }\n  }\n\n  getDataSet(): DataSet {\n    return this.dataSet;\n  }\n\n  setSource(source: DataSource) {\n    this.source = this.prepareSource(source);\n    this.detach();\n\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\n\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\n      const changedRow = this.dataSet.findRowByData(data);\n      changedRow.setData(data);\n    });\n  }\n\n  getSetting(name: string, defaultValue?: any): any {\n    return getDeepFromObject(this.settings, name, defaultValue);\n  }\n\n  getColumns(): Array<Column> {\n    return this.dataSet.getColumns();\n  }\n\n  getRows(): Array<Row> {\n    return this.dataSet.getRows();\n  }\n\n  selectRow(row: Row) {\n    this.dataSet.selectRow(row);\n  }\n\n  multipleSelectRow(row: Row) {\n    this.dataSet.multipleSelectRow(row);\n  }\n\n  onSelectRow(): Observable<any> {\n    return this.onSelectRowSource.asObservable();\n  }\n\n  onDeselectRow(): Observable<any> {\n    return this.onDeselectRowSource.asObservable();\n  }\n\n  edit(row: Row) {\n    row.isInEditing = true;\n  }\n\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then((newData) => {\n      newData = newData ? newData : row.getNewData();\n      if (deferred.resolve.skipAdd) {\n        this.createFormShown = false;\n      } else {\n        this.source.prepend(newData).then(() => {\n          this.createFormShown = false;\n          this.dataSet.createNewRow();\n        });\n      }\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('add.confirmCreate')) {\n      confirmEmitter.emit({\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then((newData) => {\n      newData = newData ? newData : row.getNewData();\n      if (deferred.resolve.skipEdit) {\n        row.isInEditing = false;\n      } else {\n        this.source.update(row.getData(), newData).then(() => {\n          row.isInEditing = false;\n        });\n      }\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('edit.confirmSave')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\n\n    const deferred = new Deferred();\n    deferred.promise.then(() => {\n      this.source.remove(row.getData());\n    }).catch((err) => {\n      // doing nothing\n    });\n\n    if (this.getSetting('delete.confirmDelete')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        source: this.source,\n        confirm: deferred,\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  processDataChange(changes: any) {\n    if (this.shouldProcessChange(changes)) {\n      this.dataSet.setData(changes['elements']);\n      if (this.getSetting('selectMode') !== 'multi') {\n        const row = this.determineRowToSelect(changes);\n\n        if (row) {\n          this.onSelectRowSource.next(row);\n        } else {\n          this.onDeselectRowSource.next(null);\n        }\n      }\n    }\n  }\n\n  shouldProcessChange(changes: any): boolean {\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\n      return true;\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @breaking-change 1.8.0\n   * Need to add `| null` in return type\n   *\n   * TODO: move to selectable? Separate directive\n   */\n  determineRowToSelect(changes: any): Row {\n\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n      return this.dataSet.select(this.getRowIndexToSelect());\n    }\n\n    if (this.shouldSkipSelection()) {\n      return null;\n    }\n\n    if (changes['action'] === 'remove') {\n      if (changes['elements'].length === 0) {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectLastRow();\n      } else {\n        return this.dataSet.selectPreviousRow();\n      }\n    }\n    if (changes['action'] === 'append') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectLastRow();\n    }\n    if (changes['action'] === 'add') {\n      return this.dataSet.selectFirstRow();\n    }\n    if (changes['action'] === 'update') {\n      return this.dataSet.selectFirstRow();\n    }\n    if (changes['action'] === 'prepend') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectFirstRow();\n    }\n    return null;\n  }\n\n  prepareSource(source: any): DataSource {\n    const initialSource: any = this.getInitialSort();\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\n      source.setSort([initialSource], false);\n    }\n    if (this.getSetting('pager.display') === true) {\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n    }\n\n    source.refresh();\n    return source;\n  }\n\n  getInitialSort() {\n    const sortConf: any = {};\n    this.getColumns().forEach((column: Column) => {\n      if (column.isSortable && column.defaultSortDirection) {\n        sortConf['field'] = column.id;\n        sortConf['direction'] = column.defaultSortDirection;\n        sortConf['compare'] = column.getCompareFunction();\n      }\n    });\n    return sortConf;\n  }\n\n  getSelectedRows(): Array<any> {\n    return this.dataSet.getRows()\n      .filter(r => r.isSelected);\n  }\n\n  selectAllRows(status: any) {\n    this.dataSet.getRows()\n      .forEach(r => r.isSelected = status);\n  }\n\n  getFirstRow(): Row {\n    return this.dataSet.getFirstRow();\n  }\n\n  getLastRow(): Row {\n    return this.dataSet.getLastRow();\n  }\n\n  private getSelectionInfo(): { perPage: number, page: number, selectedRowIndex: number, switchPageToSelectedRowPage: boolean } {\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n    const { perPage, page }: { perPage: number, page: number } = this.getSetting('pager');\n    return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n  }\n\n  private getRowIndexToSelect(): number {\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n    const dataAmount: number = this.source.count();\n    /**\n     * source - contains all table data\n     * dataSet - contains data for current page\n     * selectedRowIndex - contains index for data in all data\n     *\n     * because of that, we need to count index for a specific row in page\n     * if\n     * `switchPageToSelectedRowPage` - we need to change page automatically\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n     *  if we return index witch not points to existing data - no line will be highlighted)\n     */\n    return (\n      switchPageToSelectedRowPage &&\n      selectedRowIndex < dataAmount &&\n      selectedRowIndex >= 0\n    ) ?\n      selectedRowIndex % perPage :\n      selectedRowIndex;\n  }\n\n  private getPageToSelect(source: DataSource): number {\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n    let pageToSelect: number = Math.max(1, page);\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n    }\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n  }\n\n  private shouldSkipSelection(): boolean {\n    /**\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n     *\n     * Therefore, in order to select a row after some changes,\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n     *\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n     *\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n     * because when < 0 all lines must be deselected\n     */\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n    return selectedRowIndex < 0;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Grid } from '../../lib/grid';\nimport { Cell } from '../../lib/data-set/cell';\nimport { Row } from '../../lib/data-set/row';\n\n@Component({\n  selector: 'ng2-smart-table-cell',\n  template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  `,\n})\nexport class CellComponent {\n\n  @Input() grid: Grid;\n  @Input() row: Row;\n  @Input() editConfirm: EventEmitter<any>;\n  @Input() createConfirm: EventEmitter<any>;\n  @Input() isNew: boolean;\n  @Input() cell: Cell;\n  @Input() inputClass: string = '';\n  @Input() mode: string = 'inline';\n  @Input() isInEditing: boolean = false;\n\n  @Output() edited = new EventEmitter<any>();\n\n  onEdited(event: any) {\n    if (this.isNew) {\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    } else {\n      this.grid.save(this.row, this.editConfirm);\n    }\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\n\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  template: ''\n})\nexport class EditCellDefault {\n\n  @Input() cell: Cell;\n  @Input() inputClass: string = '';\n\n  @Output() edited = new EventEmitter<any>();\n\n  onEdited(event: any): boolean {\n    this.edited.next(event);\n    return false;\n  }\n\n  onStopEditing(): boolean {\n    this.cell.getRow().isInEditing = false;\n    return false;\n  }\n\n  onClick(event: any) {\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ViewChild,\n  ViewContainerRef,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\n\nimport { EditCellDefault } from './edit-cell-default';\n\n@Component({\n  selector: 'table-cell-custom-editor',\n  template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n})\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\n\n  customComponent: any;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\n\n  constructor(private resolver: ComponentFactoryResolver) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.cell && !this.customComponent) {\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n\n      // set @Inputs and @Outputs of custom component\n      this.customComponent.instance.cell = this.cell;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n      this.customComponent.instance.onEdited.subscribe((event: any) => this.onEdited(event));\n      this.customComponent.instance.onClick.subscribe((event: any) => this.onClick(event));\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { EditCellDefault } from './edit-cell-default';\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  selector: 'table-cell-default-editor',\n  templateUrl: './default-edit.component.html',\n})\nexport class DefaultEditComponent extends EditCellDefault {\n\n  constructor() {\n    super();\n  }\n\n  getEditorType(): string {\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  selector: 'table-cell-edit-mode',\n  template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n})\nexport class EditCellComponent {\n\n  @Input() cell: Cell;\n  @Input() inputClass: string = '';\n\n  @Output() edited = new EventEmitter<any>();\n\n  onEdited(event: any): boolean {\n    this.edited.next(event);\n    return false;\n  }\n\n  getEditorType(): string {\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\n\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  template: '',\n})\nexport class DefaultEditor implements Editor {\n  @Input() cell: Cell;\n  @Input() inputClass: string;\n\n  @Output() onStopEditing = new EventEmitter<any>();\n  @Output() onEdited = new EventEmitter<any>();\n  @Output() onClick = new EventEmitter<any>();\n}\n\nexport interface Editor {\n  cell: Cell;\n  inputClass: string;\n  onStopEditing: EventEmitter<any>;\n  onEdited: EventEmitter<any>;\n  onClick: EventEmitter<any>;\n}\n","import { Component } from '@angular/core';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component({\n  selector: 'checkbox-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `,\n})\nexport class CheckboxEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n\n  onChange(event: any) {\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CompleterService } from 'ng2-completer';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component({\n  selector: 'completer-editor',\n  template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n})\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\n\n  completerStr: string = '';\n\n  constructor(private completerService: CompleterService) {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n      const config = this.cell.getColumn().getConfig().completer;\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n      config.dataService.descriptionField(config.descriptionField);\n    }\n  }\n\n  onEditedCompleter(event: { title: '' }): boolean {\n    this.cell.newValue = event.title;\n    return false;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component({\n  selector: 'input-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `,\n})\nexport class InputEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component({\n  selector: 'select-editor',\n  template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            (keydown.enter)=\"onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n})\nexport class SelectEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component({\n  selector: 'textarea-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `,\n})\nexport class TextareaEditorComponent extends DefaultEditor {\n\n  constructor() {\n    super();\n  }\n}\n","import {\n  Component,\n  Input,\n  ComponentFactoryResolver,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Cell } from '../../../lib/data-set/cell';\nimport { ViewCell } from './view-cell';\n\n@Component({\n  selector: 'custom-view-component',\n  template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n})\nexport class CustomViewComponent implements OnInit, OnDestroy {\n\n  customComponent: any;\n  @Input() cell: Cell;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    if (this.cell && !this.customComponent) {\n      this.createCustomComponent();\n      this.callOnComponentInit();\n      this.patchInstance();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n\n  protected createCustomComponent() {\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n  }\n\n  protected callOnComponentInit() {\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n  }\n\n  protected patchInstance() {\n    Object.assign(this.customComponent.instance, this.getPatch());\n  }\n\n  protected getPatch(): ViewCell {\n    return {\n      value: this.cell.getValue(),\n      rowData: this.cell.getRow().getData()\n    }\n  }\n}\n","import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  selector: 'table-cell-view-mode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n})\nexport class ViewCellComponent {\n\n  @Input() cell: Cell;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Ng2CompleterModule } from 'ng2-completer';\n\nimport { CellComponent } from './cell.component';\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\nimport { DefaultEditor } from './cell-editors/default-editor';\n\nconst CELL_COMPONENTS = [\n  CellComponent,\n  EditCellDefault,\n  DefaultEditor,\n  CustomEditComponent,\n  DefaultEditComponent,\n  EditCellComponent,\n  CheckboxEditorComponent,\n  CompleterEditorComponent,\n  InputEditorComponent,\n  SelectEditorComponent,\n  TextareaEditorComponent,\n  CustomViewComponent,\n  ViewCellComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    Ng2CompleterModule,\n  ],\n  declarations: [\n    ...CELL_COMPONENTS,\n  ],\n  exports: [\n    ...CELL_COMPONENTS,\n  ],\n})\nexport class CellModule { }\n","import { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nexport abstract class DataSource {\n\n  protected onChangedSource = new Subject<any>();\n  protected onAddedSource = new Subject<any>();\n  protected onUpdatedSource = new Subject<any>();\n  protected onRemovedSource = new Subject<any>();\n\n  abstract getAll(): Promise<any>;\n  abstract getElements(): Promise<any>;\n  abstract getSort(): any;\n  abstract getFilter(): any;\n  abstract getPaging(): any;\n  abstract count(): number;\n\n  refresh() {\n    this.emitOnChanged('refresh');\n  }\n\n  load(data: Array<any>): Promise<any> {\n    this.emitOnChanged('load');\n    return Promise.resolve();\n  }\n\n  onChanged(): Observable<any> {\n    return this.onChangedSource.asObservable();\n  }\n\n  onAdded(): Observable<any> {\n    return this.onAddedSource.asObservable();\n  }\n\n  onUpdated(): Observable<any> {\n    return this.onUpdatedSource.asObservable();\n  }\n\n  onRemoved(): Observable<any> {\n    return this.onRemovedSource.asObservable();\n  }\n\n  prepend(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('prepend');\n    return Promise.resolve();\n  }\n\n  append(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('append');\n    return Promise.resolve();\n  }\n\n  add(element: any): Promise<any> {\n    this.emitOnAdded(element);\n    this.emitOnChanged('add');\n    return Promise.resolve();\n  }\n\n  remove(element: any): Promise<any> {\n    this.emitOnRemoved(element);\n    this.emitOnChanged('remove');\n    return Promise.resolve();\n  }\n\n  update(element: any, values: any): Promise<any> {\n    this.emitOnUpdated(element);\n    this.emitOnChanged('update');\n    return Promise.resolve();\n  }\n\n  empty(): Promise<any> {\n    this.emitOnChanged('empty');\n    return Promise.resolve();\n  }\n\n  setSort(conf: Array<any>, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('sort');\n    }\n  }\n\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('paging');\n    }\n  }\n\n  setPage(page: number, doEmit?: boolean) {\n    if (doEmit) {\n      this.emitOnChanged('page');\n    }\n  }\n\n  protected emitOnRemoved(element: any) {\n    this.onRemovedSource.next(element);\n  }\n\n  protected emitOnUpdated(element: any) {\n    this.onUpdatedSource.next(element);\n  }\n\n  protected emitOnAdded(element: any) {\n    this.onAddedSource.next(element);\n  }\n\n  protected emitOnChanged(action: string) {\n    this.getElements().then((elements) => this.onChangedSource.next({\n      action: action,\n      elements: elements,\n      paging: this.getPaging(),\n      filter: this.getFilter(),\n      sort: this.getSort(),\n    }));\n  }\n}\n","import { Output, EventEmitter, Input, Component } from '@angular/core';\n\nimport { Column } from '../../lib/data-set/column';\nimport { DataSource } from '../../lib/data-source/data-source';\n\n@Component({\n  template: '',\n})\nexport class FilterDefault {\n\n  @Input() column: Column;\n  @Input() source: DataSource;\n  @Input() inputClass: string = '';\n\n  @Output() filter = new EventEmitter<any>();\n\n  query: string = '';\n\n  onFilter(query: string) {\n    this.source.addFilter({\n      field: this.column.id,\n      search: query,\n      filter: this.column.getFilterFunction(),\n    });\n  }\n}\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\nimport { FilterDefault } from './filter-default';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ng2-smart-table-filter',\n  styleUrls: ['./filter.component.scss'],\n  template: `\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `,\n})\nexport class FilterComponent extends FilterDefault implements OnChanges {\n  query: string = '';\n  protected dataChangedSub: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        const filterConf = this.source.getFilter();\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n          this.query = '';\n\n          // add a check for existing filters an set the query if one exists for this column\n          // this covers instances where the filter is set by user code while maintaining existing functionality\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n          filterConf.filters.forEach((k: any, v: any) => {\n            if (k.field == this.column.id) {\n              this.query = k.search;\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\n\nimport {FilterDefault} from \"./filter-default\";\n\n@Component({\n  selector: 'default-table-filter',\n  template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n})\nexport class DefaultFilterComponent extends FilterDefault {\n  @Input() query: string;\n}\n","import {\n  Component,\n  ComponentFactoryResolver, Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { FilterDefault } from './filter-default';\n\n@Component({\n  selector: 'custom-table-filter',\n  template: `<ng-template #dynamicTarget></ng-template>`,\n})\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\n  @Input() query: string;\n  customComponent: any;\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\n\n  constructor(private resolver: ComponentFactoryResolver) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.column && !this.customComponent) {\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n\n      // set @Inputs and @Outputs of custom component\n      this.customComponent.instance.query = this.query;\n      this.customComponent.instance.column = this.column;\n      this.customComponent.instance.source = this.source;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.filter.subscribe((event: any) => this.onFilter(event));\n    }\n    if (this.customComponent) {\n      this.customComponent.instance.ngOnChanges(changes);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n}\n","import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Column } from '../../../lib/data-set/column';\n\n@Component({\n  template: '',\n})\nexport class DefaultFilter implements Filter, OnDestroy {\n\n  delay: number = 300;\n  changesSubscription: Subscription;\n  @Input() query: string;\n  @Input() inputClass: string;\n  @Input() column: Column;\n  @Output() filter = new EventEmitter<string>();\n\n  ngOnDestroy() {\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n  }\n\n  setFilter() {\n    this.filter.emit(this.query);\n  }\n}\n\nexport interface Filter {\n\n  delay?: number;\n  changesSubscription?: Subscription;\n  query: string;\n  inputClass: string;\n  column: Column;\n  filter: EventEmitter<string>;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DefaultFilter } from './default-filter';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'checkbox-filter',\n  template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n})\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\n\n  filterActive: boolean = false;\n  inputControl = new FormControl();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.changesSubscription = this.inputControl.valueChanges\n      .pipe(debounceTime(this.delay))\n      .subscribe((checked: boolean) => {\n        this.filterActive = true;\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n        this.query = checked ? trueVal : falseVal;\n        this.setFilter();\n      });\n  }\n\n  resetFilter(event: any) {\n    event.preventDefault();\n    this.query = '';\n    this.inputControl.setValue(false, { emitEvent: false });\n    this.filterActive = false;\n    this.setFilter();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CompleterService } from 'ng2-completer';\n\nimport { DefaultFilter } from './default-filter';\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'completer-filter',\n  template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n})\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\n\n  completerContent = new Subject<any>();\n\n  constructor(private completerService: CompleterService) {\n    super();\n  }\n\n  ngOnInit() {\n    const config = this.column.getFilterConfig().completer;\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n    config.dataService.descriptionField(config.descriptionField);\n\n    this.changesSubscription = this.completerContent\n      .pipe(\n        map((ev: any) => (ev && ev.title) || ev || ''),\n        distinctUntilChanged(),\n        debounceTime(this.delay)\n      )\n      .subscribe((search: string) => {\n        this.query = search;\n        this.setFilter();\n      });\n  }\n\n  inputTextChanged(event: string) {\n    // workaround to trigger the search event when the home/end buttons are clicked\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n    // so here it gets called manually\n    if (event === '') {\n      this.completerContent.next(event);\n    }\n  }\n}\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\n\nimport { DefaultFilter } from './default-filter';\n\n@Component({\n  selector: 'input-filter',\n  template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `,\n})\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\n\n  inputControl = new FormControl();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.query) {\n      this.inputControl.setValue(this.query);\n    }\n    this.inputControl.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(this.delay),\n      )\n      .subscribe((value: string) => {\n        this.query = this.inputControl.value;\n        this.setFilter();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.query) {\n      this.inputControl.setValue(this.query);\n    }\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\n\nimport { DefaultFilter } from './default-filter';\n\n@Component({\n  selector: 'select-filter',\n  template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n})\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\n\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.inputControl.valueChanges\n      .pipe(\n        skip(1),\n        distinctUntilChanged(),\n        debounceTime(this.delay)\n      )\n      .subscribe((value: string) => this.setFilter());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2CompleterModule } from 'ng2-completer';\n\nimport { FilterComponent } from './filter.component';\nimport { DefaultFilterComponent } from \"./default-filter.component\";\nimport { CustomFilterComponent } from \"./custom-filter.component\";\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\nimport { InputFilterComponent } from './filter-types/input-filter.component';\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\nimport { DefaultFilter } from './filter-types/default-filter';\nimport { FilterDefault } from './filter-default';\n\nconst FILTER_COMPONENTS = [\n  FilterDefault,\n  DefaultFilter,\n  FilterComponent,\n  DefaultFilterComponent,\n  CustomFilterComponent,\n  CheckboxFilterComponent,\n  CompleterFilterComponent,\n  InputFilterComponent,\n  SelectFilterComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2CompleterModule,\n  ],\n  declarations: [\n    ...FILTER_COMPONENTS,\n  ],\n  exports: [\n    ...FILTER_COMPONENTS,\n  ],\n})\nexport class FilterModule { }\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DataSource } from '../../lib/data-source/data-source';\n\n@Component({\n  selector: 'ng2-smart-table-pager',\n  styleUrls: ['./pager.component.scss'],\n  template: `\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\n      <ul class=\"ng2-smart-pagination pagination\">\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"ng2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"ng2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"ng2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"ng2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `,\n})\nexport class PagerComponent implements OnChanges {\n\n  @Input() source: DataSource;\n  @Input() perPageSelect: any[] = [];\n\n  @Output() changePage = new EventEmitter<any>();\n\n  currentPerPage: any;\n\n  protected pages: Array<any>;\n  protected page: number;\n  protected count: number = 0;\n  protected perPage: number;\n\n  protected dataChangedSub: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        this.page = this.source.getPaging().page;\n        this.perPage = this.source.getPaging().perPage;\n        this.currentPerPage = this.perPage;\n        this.count = this.source.count();\n        if (this.isPageOutOfBounce()) {\n          this.source.setPage(--this.page);\n        }\n\n        this.processPageChange(dataChanges);\n        this.initPages();\n      });\n    }\n  }\n\n  /**\n   * We change the page here depending on the action performed against data source\n   * if a new element was added to the end of the table - then change the page to the last\n   * if a new element was added to the beginning of the table - then to the first page\n   * @param changes\n   */\n  processPageChange(changes: any) {\n    if (changes['action'] === 'prepend') {\n      this.source.setPage(1);\n    }\n    if (changes['action'] === 'append') {\n      this.source.setPage(this.getLast());\n    }\n  }\n\n  shouldShow(): boolean {\n    return this.source.count() > this.perPage;\n  }\n\n  paginate(page: number): boolean {\n    this.source.setPage(page);\n    this.page = page;\n    this.changePage.emit({ page });\n    return false;\n  }\n\n  next(): boolean {\n    return this.paginate(this.getPage() + 1);\n  }\n\n  prev(): boolean {\n    return this.paginate(this.getPage() - 1);\n  }\n\n  getPage(): number {\n    return this.page;\n  }\n\n  getPages(): Array<any> {\n    return this.pages;\n  }\n\n  getLast(): number {\n    return Math.ceil(this.count / this.perPage);\n  }\n\n  isPageOutOfBounce(): boolean {\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n  }\n\n  initPages() {\n    const pagesCount = this.getLast();\n    let showPagesCount = 4;\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n    this.pages = [];\n\n    if (this.shouldShow()) {\n\n      let middleOne = Math.ceil(showPagesCount / 2);\n      middleOne = this.page >= middleOne ? this.page : middleOne;\n\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n\n      const firstOne = lastOne - showPagesCount + 1;\n\n      for (let i = firstOne; i <= lastOne; i++) {\n        this.pages.push(i);\n      }\n    }\n  }\n\n  onChangePerPage(event: any) {\n    if (this.currentPerPage) {\n\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n        this.source.getPaging().perPage = null;\n      } else {\n        this.source.getPaging().perPage = this.currentPerPage * 1;\n        this.source.refresh();\n      }\n      this.initPages();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PagerComponent } from './pager.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    PagerComponent,\n  ],\n  exports: [\n    PagerComponent,\n  ],\n})\nexport class PagerModule { }\n","import {Component, Input, Output, EventEmitter, } from '@angular/core';\n\nimport { Grid } from '../../lib/grid';\nimport { DataSource } from '../../lib/data-source/data-source';\nimport { Cell } from '../../lib/data-set/cell';\n\n@Component({\n  selector: '[ng2-st-tbody]',\n  styleUrls: ['./tbody.component.scss'],\n  templateUrl: './tbody.component.html',\n})\nexport class Ng2SmartTableTbodyComponent {\n\n  @Input() grid: Grid;\n  @Input() source: DataSource;\n  @Input() deleteConfirm: EventEmitter<any>;\n  @Input() editConfirm: EventEmitter<any>;\n  @Input() rowClassFunction: Function;\n\n  @Output() save = new EventEmitter<any>();\n  @Output() cancel = new EventEmitter<any>();\n  @Output() edit = new EventEmitter<any>();\n  @Output() delete = new EventEmitter<any>();\n  @Output() custom = new EventEmitter<any>();\n  @Output() edited = new EventEmitter<any>();\n  @Output() userSelectRow = new EventEmitter<any>();\n  @Output() editRowSelect = new EventEmitter<any>();\n  @Output() multipleSelectRow = new EventEmitter<any>();\n  @Output() rowHover = new EventEmitter<any>();\n\n  isMultiSelectVisible: boolean;\n  showActionColumnLeft: boolean;\n  showActionColumnRight: boolean;\n  mode: string;\n  editInputClass: string;\n  isActionAdd: boolean;\n  isActionEdit: boolean;\n  isActionDelete: boolean;\n  noDataMessage: boolean;\n\n  get tableColumnsCount() {\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n    return this.grid.getColumns().length + actionColumns;\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.mode = this.grid.getSetting('mode');\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.isActionAdd = this.grid.getSetting('actions.add');\n    this.isActionEdit = this.grid.getSetting('actions.edit');\n    this.isActionDelete = this.grid.getSetting('actions.delete');\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\n  }\n\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\n  }\n}\n","import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { Row } from '../../../lib/data-set/row';\n\n@Component({\n  selector: 'ng2-st-tbody-create-cancel',\n  template: `\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n})\nexport class TbodyCreateCancelComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Input() row: Row;\n  @Input() editConfirm: EventEmitter<any>;\n\n  cancelButtonContent: string;\n  saveButtonContent: string;\n\n  onSave(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.grid.save(this.row, this.editConfirm);\n  }\n\n  onCancelEdit(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.row.isInEditing = false;\n  }\n\n  ngOnChanges() {\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { Row } from '../../../lib/data-set/row';\nimport { DataSource } from '../../../lib/data-source/data-source';\n\n@Component({\n  selector: 'ng2-st-tbody-edit-delete',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n})\nexport class TbodyEditDeleteComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Input() row: Row;\n  @Input() source: DataSource;\n  @Input() deleteConfirm: EventEmitter<any>;\n  @Input() editConfirm: EventEmitter<any>;\n\n  @Output() edit = new EventEmitter<any>();\n  @Output() delete = new EventEmitter<any>();\n  @Output() editRowSelect = new EventEmitter<any>();\n\n  isActionEdit: boolean;\n  isActionDelete: boolean;\n  editRowButtonContent: string;\n  deleteRowButtonContent: string;\n\n  onEdit(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.editRowSelect.emit(this.row);\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.edit.emit({\n        data: this.row.getData(),\n        source: this.source,\n      });\n    } else {\n      this.grid.edit(this.row);\n    }\n  }\n\n  onDelete(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.delete.emit({\n        data: this.row.getData(),\n        source: this.source,\n      });\n    } else {\n      this.grid.delete(this.row, this.deleteConfirm);\n    }\n  }\n\n  ngOnChanges(){\n    this.isActionEdit = this.grid.getSetting('actions.edit');\n    this.isActionDelete = this.grid.getSetting('actions.delete');\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Row } from '../../../lib/data-set/row';\n\nimport { Grid } from '../../../lib/grid';\n\n@Component({\n    selector: 'ng2-st-tbody-custom',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n        `\n})\nexport class TbodyCustomComponent {\n\n    @Input() grid: Grid;\n    @Input() row: Row;\n    @Input() source: any;\n    @Output() custom = new EventEmitter<any>();\n\n    onCustom(action: any, event: any) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CellModule } from '../cell/cell.module';\n\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\nimport { TbodyCustomComponent } from './cells/custom.component';\n\nconst TBODY_COMPONENTS = [\n  TbodyCreateCancelComponent,\n  TbodyEditDeleteComponent,\n  TbodyCustomComponent,\n  Ng2SmartTableTbodyComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CellModule,\n  ],\n  declarations: [\n    ...TBODY_COMPONENTS,\n  ],\n  exports: [\n    ...TBODY_COMPONENTS,\n  ],\n})\nexport class TBodyModule { }\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\n\nimport { Grid } from '../../lib/grid';\nimport { DataSource } from '../../lib/data-source/data-source';\n\n@Component({\n    selector: '[ng2-st-thead]',\n    templateUrl: './thead.component.html',\n})\nexport class Ng2SmartTableTheadComponent implements OnChanges {\n\n    @Input() grid: Grid;\n    @Input() source: DataSource;\n    @Input() isAllSelected: boolean;\n    @Input() createConfirm: EventEmitter<any>;\n\n    @Output() sort = new EventEmitter<any>();\n    @Output() selectAllRows = new EventEmitter<any>();\n    @Output() create = new EventEmitter<any>();\n    @Output() filter = new EventEmitter<any>();\n\n    isHideHeader: boolean;\n    isHideSubHeader: boolean;\n\n  ngOnChanges() {\n      this.isHideHeader = this.grid.getSetting('hideHeader');\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\n","import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\n\n@Component({\n  selector: 'ng2-st-actions',\n  template: `\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n})\nexport class ActionsComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Output() create = new EventEmitter<any>();\n\n  createButtonContent: string;\n  cancelButtonContent: string;\n\n  ngOnChanges() {\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n  }\n}\n","import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\n\n@Component({\n  selector: '[ng2-st-actions-title]',\n  template: `\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\n  `,\n})\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\n\n  @Input() grid: Grid;\n\n  actionsColumnTitle: string;\n\n  constructor(private ref: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\n  }\n\n  ngOnChanges() {\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n  }\n}\n","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { DataSource } from '../../../lib/data-source/data-source';\n\n@Component({\n  selector: '[ng2-st-add-button]',\n  template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n})\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\n\n  @Input() grid: Grid;\n  @Input() source: DataSource;\n  @Output() create = new EventEmitter<any>();\n\n  isActionAdd: boolean;\n  addNewButtonContent: string;\n\n  constructor(private ref: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\n  }\n\n  ngOnChanges() {\n    this.isActionAdd = this.grid.getSetting('actions.add');\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n  }\n\n  onAdd(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.grid.getSetting('mode') === 'external') {\n      this.create.emit({\n        source: this.source,\n      });\n    } else {\n      this.grid.createFormShown = true;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { DataSource } from '../../../lib/data-source/data-source';\n\n@Component({\n  selector: '[ng2-st-checkbox-select-all]',\n  template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n})\nexport class CheckboxSelectAllComponent {\n\n  @Input() grid: Grid;\n  @Input() source: DataSource;\n  @Input() isAllSelected: boolean;\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Column } from '../../../lib/data-set/column';\nimport { DataSource } from '../../../lib/data-source/data-source';\n\n@Component({\n  selector: 'ng2-st-column-title',\n  template: `\n    <div class=\"ng2-smart-title\">\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\n    </div>\n  `,\n})\nexport class ColumnTitleComponent {\n\n  @Input() column: Column;\n  @Input() source: DataSource;\n\n  @Output() sort = new EventEmitter<any>();\n\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DataSource } from '../../../../lib/data-source/data-source';\nimport { Column } from '../../../../lib/data-set/column';\n\n@Component({\n  selector: 'ng2-smart-table-title',\n  styleUrls: ['./title.component.scss'],\n  template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"ng2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `,\n})\nexport class TitleComponent implements OnChanges {\n\n  currentDirection = '';\n  @Input() column: Column;\n  @Input() source: DataSource;\n  @Output() sort = new EventEmitter<any>();\n\n  protected dataChangedSub: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        const sortConf = this.source.getSort();\n\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n          this.currentDirection = sortConf[0]['direction'];\n        } else {\n          this.currentDirection = '';\n        }\n\n        sortConf.forEach((fieldConf: any) => {\n\n        });\n      });\n    }\n  }\n\n  _sort(event: any) {\n    event.preventDefault();\n    this.changeSortDirection();\n    this.source.setSort([\n      {\n        field: this.column.id,\n        direction: this.currentDirection,\n        compare: this.column.getCompareFunction(),\n      },\n    ]);\n    this.sort.emit(null);\n  }\n\n  changeSortDirection(): string {\n    if (this.currentDirection) {\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n      this.currentDirection = newDirection;\n    } else {\n      this.currentDirection = this.column.sortDirection;\n    }\n    return this.currentDirection;\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { DataSource } from '../../../lib/data-source/data-source';\nimport { Column } from \"../../../lib/data-set/column\";\n\n@Component({\n  selector: '[ng2-st-thead-filters-row]',\n  template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\n      <ng2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </ng2-smart-table-filter>\n    </th>\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n})\nexport class TheadFitlersRowComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Input() source: DataSource;\n\n  @Output() create = new EventEmitter<any>();\n  @Output() filter = new EventEmitter<any>();\n\n  isMultiSelectVisible: boolean;\n  showActionColumnLeft: boolean;\n  showActionColumnRight: boolean;\n  filterInputClass: string;\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\n  }\n\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\n    return (columns || []).filter((column: Column) => !column.hide);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { Row } from '../../../lib/data-set/row';\nimport { Cell } from '../../../lib/data-set/cell';\n\n@Component({\n  selector: '[ng2-st-thead-form-row]',\n  template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <ng2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </ng2-smart-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `,\n})\nexport class TheadFormRowComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Input() row: Row;\n  @Input() createConfirm: EventEmitter<any>;\n\n  @Output() create = new EventEmitter<any>();\n\n  isMultiSelectVisible: boolean;\n  showActionColumnLeft: boolean;\n  showActionColumnRight: boolean;\n  addInputClass: string;\n\n  onCreate(event: any) {\n    event.stopPropagation();\n\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\n  }\n\n  ngOnChanges(){\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.addInputClass = this.grid.getSetting('add.inputClass');\n  }\n\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\n\nimport { Grid } from '../../../lib/grid';\nimport { DataSource } from '../../../lib/data-source/data-source';\nimport { Column } from \"../../../lib/data-set/column\";\n\n@Component({\n  selector: '[ng2-st-thead-titles-row]',\n  template: `\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"ng2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n})\nexport class TheadTitlesRowComponent implements OnChanges {\n\n  @Input() grid: Grid;\n  @Input() isAllSelected: boolean;\n  @Input() source: DataSource;\n\n  @Output() sort = new EventEmitter<any>();\n  @Output() selectAllRows = new EventEmitter<any>();\n\n  isMultiSelectVisible: boolean;\n  showActionColumnLeft: boolean;\n  showActionColumnRight: boolean;\n\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n  }\n\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\n    return (columns || []).filter((column: Column) => !column.hide);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { FilterModule } from '../filter/filter.module';\nimport { CellModule } from '../cell/cell.module';\n\nimport { Ng2SmartTableTheadComponent } from './thead.component';\nimport { ActionsComponent } from './cells/actions.component';\nimport { ActionsTitleComponent } from './cells/actions-title.component';\nimport { AddButtonComponent } from './cells/add-button.component';\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\nimport { ColumnTitleComponent } from './cells/column-title.component';\nimport { TitleComponent } from './cells/title/title.component';\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\n\nconst THEAD_COMPONENTS = [\n  ActionsComponent,\n  ActionsTitleComponent,\n  AddButtonComponent,\n  CheckboxSelectAllComponent,\n  ColumnTitleComponent,\n  TitleComponent,\n  TheadFitlersRowComponent,\n  TheadFormRowComponent,\n  TheadTitlesRowComponent,\n  Ng2SmartTableTheadComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FilterModule,\n    CellModule,\n  ],\n  declarations: [\n    ...THEAD_COMPONENTS,\n  ],\n  exports: [\n    ...THEAD_COMPONENTS,\n  ],\n})\nexport class THeadModule { }\n","export function compareValues(direction: any, a: any, b: any) {\n  if (a < b) {\n    return -1 * direction;\n  }\n  if (a > b) {\n    return direction;\n  }\n  return 0;\n}\n\nexport class LocalSorter {\n\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\n\n    const dir: number = (direction === 'asc') ? 1 : -1;\n    const compare: Function = customCompare ? customCompare : compareValues;\n\n    return data.sort((a, b) => {\n      return compare.call(null, dir, a[field], b[field]);\n    });\n  }\n}\n","export function filterValues(value: string, search: string) {\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\n}\n\nexport class LocalFilter {\n\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\n    const filter: Function = customFilter ? customFilter : filterValues;\n\n    return data.filter((el) => {\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n      return filter.call(null, value, search);\n    });\n  }\n}\n","export class LocalPager {\n\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\n    return data.slice(perPage * (page - 1), perPage * page);\n  }\n}\n","import { LocalSorter } from './local.sorter';\nimport { LocalFilter } from './local.filter';\nimport { LocalPager } from './local.pager';\nimport { DataSource } from '../data-source';\nimport { deepExtend } from '../../helpers';\n\nexport class LocalDataSource extends DataSource {\n\n  protected data: Array<any> = [];\n  protected filteredAndSorted: Array<any> = [];\n  protected sortConf: Array<any> = [];\n  protected filterConf: any = {\n    filters: [],\n    andOperator: true,\n  };\n  protected pagingConf: any = {};\n\n  constructor(data: Array<any> = []) {\n    super();\n\n    this.data = data;\n  }\n\n  load(data: Array<any>): Promise<any> {\n    this.data = data;\n\n    return super.load(data);\n  }\n\n  prepend(element: any): Promise<any> {\n    this.reset(true);\n\n    this.data.unshift(element);\n    return super.prepend(element);\n  }\n\n  append(element: any): Promise<any> {\n    this.reset(true);\n\n    this.data.push(element);\n    return super.append(element);\n  }\n\n  add(element: any): Promise<any> {\n    this.data.push(element);\n\n    return super.add(element);\n  }\n\n  remove(element: any): Promise<any> {\n    this.data = this.data.filter(el => el !== element);\n\n    return super.remove(element);\n  }\n\n  update(element: any, values: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.find(element).then((found) => {\n        found = deepExtend(found, values);\n        super.update(found, values).then(resolve).catch(reject);\n      }).catch(reject);\n    });\n  }\n\n  find(element: any): Promise<any> {\n    const found = this.data.find(el => el === element);\n    if (found) {\n      return Promise.resolve(found);\n    }\n\n    return Promise.reject(new Error('Element was not found in the dataset'));\n  }\n\n  getElements(): Promise<any> {\n    const data = this.data.slice(0);\n    return Promise.resolve(this.prepareData(data));\n  }\n\n  getFilteredAndSorted(): Promise<any> {\n    let data = this.data.slice(0);\n    this.prepareData(data);\n    return Promise.resolve(this.filteredAndSorted);\n  }\n\n  getAll(): Promise<any> {\n    const data = this.data.slice(0);\n    return Promise.resolve(data);\n  }\n\n  reset(silent = false) {\n    if (silent) {\n      this.filterConf = {\n        filters: [],\n        andOperator: true,\n      };\n      this.sortConf = [];\n      this.pagingConf['page'] = 1;\n    } else {\n      this.setFilter([], true, false);\n      this.setSort([], false);\n      this.setPage(1);\n    }\n  }\n\n  empty(): Promise<any> {\n    this.data = [];\n\n    return super.empty();\n  }\n\n  count(): number {\n    return this.filteredAndSorted.length;\n  }\n\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\n   * ]\n   * @param conf\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\n    if (conf !== null) {\n\n      conf.forEach((fieldConf) => {\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n          throw new Error('Sort configuration object is not valid');\n        }\n      });\n      this.sortConf = conf;\n    }\n\n    super.setSort(conf, doEmit);\n    return this;\n  }\n\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, search: string, filter: Function|null},\n   * ]\n   * @param conf\n   * @param andOperator\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\n    if (conf && conf.length > 0) {\n      conf.forEach((fieldConf) => {\n        this.addFilter(fieldConf, andOperator, false);\n      });\n    } else {\n      this.filterConf = {\n        filters: [],\n        andOperator: true,\n      };\n    }\n    this.filterConf.andOperator = andOperator;\n    this.pagingConf['page'] = 1;\n\n    super.setFilter(conf, andOperator, doEmit);\n    return this;\n  }\n\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n      throw new Error('Filter configuration object is not valid');\n    }\n\n    let found = false;\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\n      if (currentFieldConf['field'] === fieldConf['field']) {\n        this.filterConf.filters[index] = fieldConf;\n        found = true;\n      }\n    });\n    if (!found) {\n      this.filterConf.filters.push(fieldConf);\n    }\n    this.filterConf.andOperator = andOperator;\n    super.addFilter(fieldConf, andOperator, doEmit);\n    return this;\n  }\n\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\n    this.pagingConf['page'] = page;\n    this.pagingConf['perPage'] = perPage;\n\n    super.setPaging(page, perPage, doEmit);\n    return this;\n  }\n\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\n    this.pagingConf['page'] = page;\n    super.setPage(page, doEmit);\n    return this;\n  }\n\n  getSort(): any {\n    return this.sortConf;\n  }\n\n  getFilter(): any {\n    return this.filterConf;\n  }\n\n  getPaging(): any {\n    return this.pagingConf;\n  }\n\n  protected prepareData(data: Array<any>): Array<any> {\n    data = this.filter(data);\n    data = this.sort(data);\n    this.filteredAndSorted = data.slice(0);\n\n    return this.paginate(data);\n  }\n\n  protected sort(data: Array<any>): Array<any> {\n    if (this.sortConf) {\n      this.sortConf.forEach((fieldConf) => {\n        data = LocalSorter\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n      });\n    }\n    return data;\n  }\n\n  // TODO: refactor?\n  protected filter(data: Array<any>): Array<any> {\n    if (this.filterConf.filters) {\n      if (this.filterConf.andOperator) {\n        this.filterConf.filters.forEach((fieldConf: any) => {\n          if (fieldConf['search'].length > 0) {\n            data = LocalFilter\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n          }\n        });\n      } else {\n        let mergedData: any = [];\n        this.filterConf.filters.forEach((fieldConf: any) => {\n          if (fieldConf['search'].length > 0) {\n            mergedData = mergedData.concat(LocalFilter\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n          }\n        });\n        // remove non unique items\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\n          return arr.indexOf(elem) === pos;\n        });\n      }\n    }\n    return data;\n  }\n\n  protected paginate(data: Array<any>): Array<any> {\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n    }\n    return data;\n  }\n}\n","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Grid } from './lib/grid';\nimport { DataSource } from './lib/data-source/data-source';\nimport { Row } from './lib/data-set/row';\nimport { deepExtend, getPageForRowIndex } from './lib/helpers';\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\n\n@Component({\n  selector: 'ng2-smart-table',\n  styleUrls: ['./ng2-smart-table.component.scss'],\n  templateUrl: './ng2-smart-table.component.html',\n})\nexport class Ng2SmartTableComponent implements OnChanges, OnDestroy {\n\n  @Input() source: any;\n  @Input() settings: Object = {};\n\n  @Output() rowSelect = new EventEmitter<any>();\n  @Output() rowDeselect = new EventEmitter<any>();\n  @Output() userRowSelect = new EventEmitter<any>();\n  @Output() delete = new EventEmitter<any>();\n  @Output() edit = new EventEmitter<any>();\n  @Output() create = new EventEmitter<any>();\n  @Output() custom = new EventEmitter<any>();\n  @Output() deleteConfirm = new EventEmitter<any>();\n  @Output() editConfirm = new EventEmitter<any>();\n  @Output() createConfirm = new EventEmitter<any>();\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\n\n  tableClass: string;\n  tableId: string;\n  perPageSelect: any;\n  isHideHeader: boolean;\n  isHideSubHeader: boolean;\n  isPagerDisplay: boolean;\n  rowClassFunction: Function;\n\n  grid: Grid;\n  defaultSettings: Object = {\n    mode: 'inline', // inline|external|click-to-edit\n    selectMode: 'single', // single|multi\n    /**\n     * Points to an element in all data\n     *\n     * when < 0 all lines must be deselected\n     */\n    selectedRowIndex: 0,\n    switchPageToSelectedRowPage: false,\n    hideHeader: false,\n    hideSubHeader: false,\n    actions: {\n      columnTitle: 'Actions',\n      add: true,\n      edit: true,\n      delete: true,\n      custom: [],\n      position: 'left', // left|right\n    },\n    filter: {\n      inputClass: '',\n    },\n    edit: {\n      inputClass: '',\n      editButtonContent: 'Edit',\n      saveButtonContent: 'Update',\n      cancelButtonContent: 'Cancel',\n      confirmSave: false,\n    },\n    add: {\n      inputClass: '',\n      addButtonContent: 'Add New',\n      createButtonContent: 'Create',\n      cancelButtonContent: 'Cancel',\n      confirmCreate: false,\n    },\n    delete: {\n      deleteButtonContent: 'Delete',\n      confirmDelete: false,\n    },\n    attr: {\n      id: '',\n      class: '',\n    },\n    noDataMessage: 'No data found',\n    columns: {},\n    pager: {\n      display: true,\n      page: 1,\n      perPage: 10,\n    },\n    rowClassFunction: () => '',\n  };\n\n  isAllSelected: boolean = false;\n\n  private onSelectRowSubscription: Subscription;\n  private onDeselectRowSubscription: Subscription;\n  private destroyed$: Subject<void> = new Subject<void>();\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (this.grid) {\n      if (changes['settings']) {\n        this.grid.setSettings(this.prepareSettings());\n      }\n      if (changes['source']) {\n        this.source = this.prepareSource();\n        this.grid.setSource(this.source);\n      }\n    } else {\n      this.initGrid();\n    }\n    this.tableId = this.grid.getSetting('attr.id');\n    this.tableClass = this.grid.getSetting('attr.class');\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n  }\n\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\n    if (!this.grid) {\n      return;\n    }\n    this.grid.settings.selectedRowIndex = index;\n    if (this.isIndexOutOfRange(index)) {\n      // we need to deselect all rows if we got an incorrect index\n      this.deselectAllRows();\n      return;\n    }\n\n    if (switchPageToSelectedRowPage) {\n      const source: DataSource = this.source;\n      const paging: { page: number, perPage: number } = source.getPaging();\n      const page: number = getPageForRowIndex(index, paging.perPage);\n      index = index % paging.perPage;\n      this.grid.settings.selectedRowIndex = index;\n\n      if (page !== paging.page) {\n        source.setPage(page);\n        return;\n      }\n\n    }\n\n    const row: Row = this.grid.getRows()[index];\n    if (row) {\n      this.onSelectRow(row);\n    } else {\n      // we need to deselect all rows if we got an incorrect index\n      this.deselectAllRows();\n    }\n  }\n\n  private deselectAllRows(): void {\n    this.grid.dataSet.deselectAll();\n    this.emitDeselectRow(null);\n  }\n\n  editRowSelect(row: Row) {\n    if (this.grid.getSetting('selectMode') === 'multi') {\n      this.onMultipleSelectRow(row);\n    } else {\n      this.onSelectRow(row);\n    }\n  }\n\n  onUserSelectRow(row: Row) {\n    if (this.grid.getSetting('selectMode') !== 'multi') {\n      this.grid.selectRow(row);\n      this.emitUserSelectRow(row);\n      this.emitSelectRow(row);\n    }\n  }\n\n  onRowHover(row: Row) {\n    this.rowHover.emit(row);\n  }\n\n  multipleSelectRow(row: Row) {\n    this.grid.multipleSelectRow(row);\n    this.emitUserSelectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onSelectAllRows($event: any) {\n    this.isAllSelected = !this.isAllSelected;\n    this.grid.selectAllRows(this.isAllSelected);\n\n    this.emitUserSelectRow(null);\n    this.emitSelectRow(null);\n  }\n\n  onSelectRow(row: Row) {\n    this.grid.selectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onMultipleSelectRow(row: Row) {\n    this.emitSelectRow(row);\n  }\n\n  initGrid() {\n    this.source = this.prepareSource();\n    this.grid = new Grid(this.source, this.prepareSettings());\n\n    this.subscribeToOnSelectRow();\n    this.subscribeToOnDeselectRow();\n  }\n\n  prepareSource(): DataSource {\n    if (this.source instanceof DataSource) {\n      return this.source;\n    } else if (this.source instanceof Array) {\n      return new LocalDataSource(this.source);\n    }\n\n    return new LocalDataSource();\n  }\n\n  prepareSettings(): Object {\n    return deepExtend({}, this.defaultSettings, this.settings);\n  }\n\n  changePage($event: any) {\n    this.resetAllSelector();\n  }\n\n  sort($event: any) {\n    this.resetAllSelector();\n  }\n\n  filter($event: any) {\n    this.resetAllSelector();\n  }\n\n  private resetAllSelector() {\n    this.isAllSelected = false;\n  }\n\n  private emitUserSelectRow(row: Row) {\n    const selectedRows = this.grid.getSelectedRows();\n\n    this.userRowSelect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\n    });\n  }\n\n  private emitSelectRow(row: Row) {\n    const data = {\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n    };\n    this.rowSelect.emit(data);\n    if (!row?.isSelected) {\n      this.rowDeselect.emit(data);\n    }\n  }\n\n  private emitDeselectRow(row: Row): void {\n    this.rowDeselect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n    });\n  }\n\n  private isIndexOutOfRange(index: number): boolean {\n    const dataAmount: number = this.source?.count();\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n  }\n\n  private subscribeToOnSelectRow(): void {\n    if (this.onSelectRowSubscription) {\n      this.onSelectRowSubscription.unsubscribe();\n    }\n    this.onSelectRowSubscription = this.grid.onSelectRow()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((row) => {\n        this.emitSelectRow(row);\n      });\n  }\n\n  private subscribeToOnDeselectRow(): void {\n    if (this.onDeselectRowSubscription) {\n      this.onDeselectRowSubscription.unsubscribe();\n    }\n    this.onDeselectRowSubscription = this.grid.onDeselectRow()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((row) => {\n        this.emitDeselectRow(row);\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CellModule } from './components/cell/cell.module';\nimport { FilterModule } from './components/filter/filter.module';\nimport { PagerModule } from './components/pager/pager.module';\nimport { TBodyModule } from './components/tbody/tbody.module';\nimport { THeadModule } from './components/thead/thead.module';\n\nimport { Ng2SmartTableComponent } from './ng2-smart-table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CellModule,\n    FilterModule,\n    PagerModule,\n    TBodyModule,\n    THeadModule,\n  ],\n  declarations: [\n    Ng2SmartTableComponent,\n  ],\n  exports: [\n    Ng2SmartTableComponent,\n  ],\n})\nexport class Ng2SmartTableModule {\n}\n","export class ServerSourceConf {\n\n  protected static readonly SORT_FIELD_KEY = '_sort';\n  protected static readonly SORT_DIR_KEY = '_order';\n  protected static readonly PAGER_PAGE_KEY = '_page';\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\n  protected static readonly TOTAL_KEY = 'x-total-count';\n  protected static readonly DATA_KEY = '';\n\n  endPoint: string;\n\n  sortFieldKey: string;\n  sortDirKey: string;\n  pagerPageKey: string;\n  pagerLimitKey: string;\n  filterFieldKey: string;\n  totalKey: string;\n  dataKey: string;\n\n  constructor(\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n\n    this.endPoint = endPoint ? endPoint : '';\n\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { LocalDataSource } from '../local/local.data-source';\nimport { ServerSourceConf } from './server-source.conf';\nimport { getDeepFromObject } from '../../helpers';\n\nimport { map } from 'rxjs/operators';\n\nexport class ServerDataSource extends LocalDataSource {\n\n  protected conf: ServerSourceConf;\n\n  protected lastRequestCount: number = 0;\n\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\n    super();\n\n    this.conf = new ServerSourceConf(conf);\n\n    if (!this.conf.endPoint) {\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n    }\n  }\n\n  count(): number {\n    return this.lastRequestCount;\n  }\n\n  getElements(): Promise<any> {\n    return this.requestElements()\n      .pipe(map(res => {\n        this.lastRequestCount = this.extractTotalFromResponse(res);\n        this.data = this.extractDataFromResponse(res);\n\n        return this.data;\n      })).toPromise();\n  }\n\n  /**\n   * Extracts array of data from server response\n   * @param res\n   * @returns {any}\n   */\n  protected extractDataFromResponse(res: any): Array<any> {\n    const rawData = res.body;\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n\n    if (data instanceof Array) {\n      return data;\n    }\n\n    throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n  }\n\n  /**\n   * Extracts total rows count from the server response\n   * Looks for the count in the heders first, then in the response body\n   * @param res\n   * @returns {any}\n   */\n  protected extractTotalFromResponse(res: any): number {\n    if (res.headers.has(this.conf.totalKey)) {\n      return +res.headers.get(this.conf.totalKey);\n    } else {\n      const rawData = res.body;\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\n    }\n  }\n\n  protected requestElements(): Observable<any> {\n    let httpParams = this.createRequesParams();\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n  }\n\n  protected createRequesParams(): HttpParams {\n    let httpParams = new HttpParams();\n\n    httpParams = this.addSortRequestParams(httpParams);\n    httpParams = this.addFilterRequestParams(httpParams);\n    return this.addPagerRequestParams(httpParams);\n  }\n\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\n    if (this.sortConf) {\n      this.sortConf.forEach((fieldConf) => {\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n      });\n    }\n\n    return httpParams;\n  }\n\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\n\n    if (this.filterConf.filters) {\n      this.filterConf.filters.forEach((fieldConf: any) => {\n        if (fieldConf['search']) {\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n        }\n      });\n    }\n\n    return httpParams;\n  }\n\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\n\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n    }\n\n    return httpParams;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CustomEditComponent as ɵd} from './lib/components/cell/cell-edit-mode/custom-edit.component';\nexport {DefaultEditComponent as ɵe} from './lib/components/cell/cell-edit-mode/default-edit.component';\nexport {EditCellDefault as ɵc} from './lib/components/cell/cell-edit-mode/edit-cell-default';\nexport {EditCellComponent as ɵf} from './lib/components/cell/cell-edit-mode/edit-cell.component';\nexport {CheckboxEditorComponent as ɵg} from './lib/components/cell/cell-editors/checkbox-editor.component';\nexport {CompleterEditorComponent as ɵh} from './lib/components/cell/cell-editors/completer-editor.component';\nexport {InputEditorComponent as ɵi} from './lib/components/cell/cell-editors/input-editor.component';\nexport {SelectEditorComponent as ɵj} from './lib/components/cell/cell-editors/select-editor.component';\nexport {TextareaEditorComponent as ɵk} from './lib/components/cell/cell-editors/textarea-editor.component';\nexport {CustomViewComponent as ɵl} from './lib/components/cell/cell-view-mode/custom-view.component';\nexport {ViewCellComponent as ɵm} from './lib/components/cell/cell-view-mode/view-cell.component';\nexport {CellComponent as ɵb} from './lib/components/cell/cell.component';\nexport {CellModule as ɵa} from './lib/components/cell/cell.module';\nexport {CustomFilterComponent as ɵr} from './lib/components/filter/custom-filter.component';\nexport {DefaultFilterComponent as ɵq} from './lib/components/filter/default-filter.component';\nexport {FilterDefault as ɵo} from './lib/components/filter/filter-default';\nexport {CheckboxFilterComponent as ɵs} from './lib/components/filter/filter-types/checkbox-filter.component';\nexport {CompleterFilterComponent as ɵt} from './lib/components/filter/filter-types/completer-filter.component';\nexport {InputFilterComponent as ɵu} from './lib/components/filter/filter-types/input-filter.component';\nexport {SelectFilterComponent as ɵv} from './lib/components/filter/filter-types/select-filter.component';\nexport {FilterComponent as ɵp} from './lib/components/filter/filter.component';\nexport {FilterModule as ɵn} from './lib/components/filter/filter.module';\nexport {PagerComponent as ɵx} from './lib/components/pager/pager.component';\nexport {PagerModule as ɵw} from './lib/components/pager/pager.module';\nexport {TbodyCreateCancelComponent as ɵz} from './lib/components/tbody/cells/create-cancel.component';\nexport {TbodyCustomComponent as ɵbb} from './lib/components/tbody/cells/custom.component';\nexport {TbodyEditDeleteComponent as ɵba} from './lib/components/tbody/cells/edit-delete.component';\nexport {Ng2SmartTableTbodyComponent as ɵbc} from './lib/components/tbody/tbody.component';\nexport {TBodyModule as ɵy} from './lib/components/tbody/tbody.module';\nexport {ActionsTitleComponent as ɵbf} from './lib/components/thead/cells/actions-title.component';\nexport {ActionsComponent as ɵbe} from './lib/components/thead/cells/actions.component';\nexport {AddButtonComponent as ɵbg} from './lib/components/thead/cells/add-button.component';\nexport {CheckboxSelectAllComponent as ɵbh} from './lib/components/thead/cells/checkbox-select-all.component';\nexport {ColumnTitleComponent as ɵbi} from './lib/components/thead/cells/column-title.component';\nexport {TitleComponent as ɵbj} from './lib/components/thead/cells/title/title.component';\nexport {TheadFitlersRowComponent as ɵbk} from './lib/components/thead/rows/thead-filters-row.component';\nexport {TheadFormRowComponent as ɵbl} from './lib/components/thead/rows/thead-form-row.component';\nexport {TheadTitlesRowComponent as ɵbm} from './lib/components/thead/rows/thead-titles-row.component';\nexport {Ng2SmartTableTheadComponent as ɵbn} from './lib/components/thead/thead.component';\nexport {THeadModule as ɵbd} from './lib/components/thead/thead.module';\nexport {DataSet as ɵbp} from './lib/lib/data-set/data-set';\nexport {Row as ɵbo} from './lib/lib/data-set/row';\nexport {DataSource as ɵbq} from './lib/lib/data-source/data-source';"]},"metadata":{},"sourceType":"module"}