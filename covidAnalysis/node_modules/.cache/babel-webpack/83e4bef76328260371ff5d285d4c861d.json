{"ast":null,"code":"import { registry } from \"../core/Registry\"; // TODO put this someplace else ?\n// TODO export this in core.ts ?\n\nexport function is(object, name) {\n  var x = registry.registeredClasses[name];\n  return x != null && object instanceof x;\n}","map":{"version":3,"sources":["../../../../src/.internal/themes/ITheme.ts"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,kBAAzB,C,CAMA;AACA;;AACA,OAAM,SAAA,EAAA,CAAgB,MAAhB,EAA6B,IAA7B,EAAyC;AAC9C,MAAM,CAAC,GAAG,QAAQ,CAAC,iBAAT,CAA2B,IAA3B,CAAV;AACA,SAAO,CAAC,IAAI,IAAL,IAAa,MAAM,YAAY,CAAtC;AACA","sourcesContent":["import { BaseObject } from \"../core/Base\";\nimport { registry } from \"../core/Registry\";\n\nexport interface ITheme {\n  (object: BaseObject): void;\n}\n\n// TODO put this someplace else ?\n// TODO export this in core.ts ?\nexport function is<A>(object: any, name: string): object is A {\n\tconst x = registry.registeredClasses[name];\n\treturn x != null && object instanceof x;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}