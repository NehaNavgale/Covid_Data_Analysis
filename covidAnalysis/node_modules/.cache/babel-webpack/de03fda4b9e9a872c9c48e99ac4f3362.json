{"ast":null,"code":"/**\n * A module which defines functionality related to Category Axis Break.\n */\nimport * as tslib_1 from \"tslib\";\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\nimport { AxisBreak } from \"./AxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Base class to define \"breaks\" in axes\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\n */\n\nvar CategoryAxisBreak =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CategoryAxisBreak, _super);\n  /**\n   * Constructor\n   */\n\n\n  function CategoryAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CategoryAxisBreak\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\n    /**\n     * Pixel position of the break's start.\n     *\n     * @return Position (px)\n     * @readonly\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedStartValue);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\n    /**\n     * Pixel position of the break's end.\n     *\n     * @return Position (px)\n     * @readonly\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedEndValue);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\n    /**\n     * @return Start category\n     */\n    get: function get() {\n      return this.getPropertyValue(\"startCategory\");\n    },\n\n    /**\n     * A category break starts on.\n     *\n     * @param value Start category\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"startCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\n    /**\n     * @return End category\n     */\n    get: function get() {\n      return this.getPropertyValue(\"endCategory\");\n    },\n\n    /**\n     * A category break ends on.\n     *\n     * @param value  End category\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"endCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\n    /**\n     * @return Value\n     */\n    get: function get() {\n      var category = this.getPropertyValue(\"startCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"startValue\");\n      }\n    },\n\n    /**\n     * An index of start category.\n     *\n     * @param value  Value\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"startValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\n    /**\n     * @return Value\n     */\n    get: function get() {\n      var category = this.getPropertyValue(\"endCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"endValue\");\n      }\n    },\n\n    /**\n     * An index of end category or a end value.\n     *\n     * @param value  Value\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"endValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CategoryAxisBreak;\n}(AxisBreak);\n\nexport { CategoryAxisBreak };\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\n\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;","map":{"version":3,"sources":["../../../../../src/.internal/charts/axes/CategoryAxisBreak.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Category break starts on.\r\n\t */\r\n\tstartCategory?: string;\r\n\r\n\t/**\r\n\t * Category break ends on.\r\n\t */\r\n\tendCategory?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CategoryAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisBreakAdapters extends IAxisBreakAdapters, ICategoryAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nexport class CategoryAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: CategoryAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A category break starts on.\r\n\t *\r\n\t * @param value Start category\r\n\t */\r\n\tpublic set startCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"startCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start category\r\n\t */\r\n\tpublic get startCategory(): string {\r\n\t\treturn this.getPropertyValue(\"startCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * A category break ends on.\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"endCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.getPropertyValue(\"endCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * An index of start category.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"startCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"startValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An index of end category or a end value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"endCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"endValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}