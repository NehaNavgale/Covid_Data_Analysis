{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _get from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nehanavgale/Desktop/UMKCStudy/Sem 4/BIgData/BigData_Programming/Covid_Data_Analysis/covidAnalysis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Observable, Subject, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { InjectionToken, Injectable, Inject, LOCALE_ID, Optional, Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ElementRef, NgModule } from '@angular/core';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = \"[_nghost-%COMP%] { width: fit-content; display: block; }\";\nvar GOOGLE_API_KEY = new InjectionToken('GOOGLE_API_KEY');\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nvar ScriptLoaderService = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} localeId\r\n   * @param {?=} googleApiKey\r\n   */\n  function ScriptLoaderService(localeId, googleApiKey) {\n    _classCallCheck(this, ScriptLoaderService);\n\n    this.localeId = localeId;\n    this.googleApiKey = googleApiKey;\n    this.scriptSource = 'https://www.gstatic.com/charts/loader.js';\n    this.onLoadSubject = new Subject();\n    this.initialize();\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(ScriptLoaderService, [{\n    key: \"loadChartPackages\",\n\n    /**\r\n     * @param {?} packages\r\n     * @return {?}\r\n     */\n    value: function loadChartPackages(packages) {\n      var _this = this;\n\n      return Observable.create(function (observer) {\n        /** @type {?} */\n        var config = {\n          packages: packages,\n          language: _this.localeId,\n          mapsApiKey: _this.googleApiKey\n        };\n        google.charts.load('45.2', config);\n        google.charts.setOnLoadCallback(function () {\n          observer.next();\n          observer.complete();\n        });\n      });\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      if (!this.doneLoading && !this.isLoading) {\n        /** @type {?} */\n        var script = this.createScriptElement();\n\n        script.onload = function () {\n          _this2.onLoadSubject.next(true);\n\n          _this2.onLoadSubject.complete();\n        };\n\n        script.onerror = function () {\n          console.error('Failed to load the google chart script!');\n\n          _this2.onLoadSubject.error('Failed to load the google chart script!');\n\n          _this2.onLoadSubject.complete();\n        };\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createScriptElement\",\n    value: function createScriptElement() {\n      /** @type {?} */\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = this.scriptSource;\n      script.async = true;\n      document.getElementsByTagName('head')[0].appendChild(script);\n      return script;\n    }\n  }, {\n    key: \"onReady\",\n    get: function get() {\n      if (this.doneLoading) {\n        return Observable.create(function (observer) {\n          observer.next(true);\n          observer.complete();\n        });\n      }\n\n      return this.onLoadSubject.asObservable();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"doneLoading\",\n    get: function get() {\n      if (typeof google === 'undefined' || typeof google.charts === 'undefined') {\n        return false;\n      }\n\n      return true;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"isLoading\",\n    get: function get() {\n      var _this3 = this;\n\n      if (this.doneLoading) {\n        return false;\n      }\n      /** @type {?} */\n\n\n      var pageScripts = Array.from(document.getElementsByTagName('script'));\n      /** @type {?} */\n\n      var googleChartsScript = pageScripts.find(function (script) {\n        return script.src === _this3.scriptSource;\n      });\n      return googleChartsScript !== undefined;\n    }\n  }]);\n\n  return ScriptLoaderService;\n}();\n\nScriptLoaderService.ɵfac = function ScriptLoaderService_Factory(t) {\n  return new (t || ScriptLoaderService)(ɵngcc0.ɵɵinject(LOCALE_ID), ɵngcc0.ɵɵinject(GOOGLE_API_KEY, 8));\n};\n\nScriptLoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScriptLoaderService,\n  factory: ScriptLoaderService.ɵfac\n});\n/** @nocollapse */\n\nScriptLoaderService.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [GOOGLE_API_KEY]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScriptLoaderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [GOOGLE_API_KEY]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar GoogleChartPackagesHelper = /*#__PURE__*/function () {\n  function GoogleChartPackagesHelper() {\n    _classCallCheck(this, GoogleChartPackagesHelper);\n  }\n\n  _createClass(GoogleChartPackagesHelper, null, [{\n    key: \"getPackageForChartName\",\n\n    /**\r\n     * @param {?} chartName\r\n     * @return {?}\r\n     */\n    value: function getPackageForChartName(chartName) {\n      return GoogleChartPackagesHelper.ChartTypesToPackages[chartName];\n    }\n  }]);\n\n  return GoogleChartPackagesHelper;\n}();\n\nGoogleChartPackagesHelper.ChartTypesToPackages = {\n  AnnotationChart: 'annotationchart',\n  AreaChart: 'corechart',\n  Bar: 'bar',\n  BarChart: 'corechart',\n  BubbleChart: 'corechart',\n  Calendar: 'calendar',\n  CandlestickChart: 'corechart',\n  ColumnChart: 'corechart',\n  ComboChart: 'corechart',\n  PieChart: 'corechart',\n  Gantt: 'gantt',\n  Gauge: 'gauge',\n  GeoChart: 'geochart',\n  Histogram: 'corechart',\n  Line: 'line',\n  LineChart: 'corechart',\n  Map: 'map',\n  OrgChart: 'orgchart',\n  Sankey: 'sankey',\n  Scatter: 'scatter',\n  ScatterChart: 'corechart',\n  SteppedAreaChart: 'corechart',\n  Table: 'table',\n  Timeline: 'timeline',\n  TreeMap: 'treemap',\n  WordTree: 'wordtree'\n};\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nvar RawChartComponent = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} element\r\n   * @param {?} loaderService\r\n   */\n  function RawChartComponent(element, loaderService) {\n    _classCallCheck(this, RawChartComponent);\n\n    this.element = element;\n    this.loaderService = loaderService;\n    this.dynamicResize = false;\n    this.error = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.select = new EventEmitter();\n    this.mouseenter = new EventEmitter();\n    this.mouseleave = new EventEmitter();\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(RawChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this4 = this;\n\n      if (this.chartData == null) {\n        throw new Error('Can\\'t create a Google Chart without data!');\n      }\n\n      this.loaderService.onReady.subscribe(function () {\n        _this4.createChart();\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.addResizeListener();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      if (this.wrapper) {\n        this.updateChart();\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getChartElement\",\n    value: function getChartElement() {\n      return this.element.nativeElement.firstElementChild;\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createChart\",\n    value: function createChart() {\n      var _this5 = this;\n\n      this.loadNeededPackages().subscribe(function () {\n        _this5.wrapper = new google.visualization.ChartWrapper();\n\n        _this5.updateChart();\n      });\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"loadNeededPackages\",\n    value: function loadNeededPackages() {\n      return this.loaderService.loadChartPackages([GoogleChartPackagesHelper.getPackageForChartName(this.chartData.chartType)]);\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"updateChart\",\n    value: function updateChart() {\n      if (this.chartData.dataTable) {\n        this.formatData(\n        /** @type {?} */\n        this.chartData.dataTable);\n      }\n\n      this.wrapper.setChartType(this.chartData.chartType);\n      this.wrapper.setDataTable(\n      /** @type {?} */\n      this.chartData.dataTable);\n      this.wrapper.setOptions(this.chartData.options);\n      this.wrapper.setDataSourceUrl(this.chartData.dataSourceUrl);\n      this.wrapper.setQuery(this.chartData.query);\n      this.wrapper.setRefreshInterval(this.chartData.refreshInterval);\n      this.wrapper.setView(this.chartData.view);\n      this.removeChartEvents();\n      this.registerChartEvents();\n      this.wrapper.draw(this.element.nativeElement);\n    }\n    /**\r\n     * @protected\r\n     * @param {?} dataTable\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"formatData\",\n    value: function formatData(dataTable) {\n      if (!this.formatter) {\n        return;\n      }\n\n      if (this.formatter instanceof Array) {\n        this.formatter.forEach(function (value) {\n          value.formatter.format(dataTable, value.colIndex);\n        });\n      } else {\n        for (var i = 0; i < dataTable.getNumberOfColumns(); i++) {\n          this.formatter.format(dataTable, i);\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"addResizeListener\",\n    value: function addResizeListener() {\n      var _this6 = this;\n\n      if (this.dynamicResize) {\n        fromEvent(window, 'resize').pipe(debounceTime(100)).subscribe(function () {\n          _this6.ngOnChanges();\n        });\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"removeChartEvents\",\n    value: function removeChartEvents() {\n      google.visualization.events.removeAllListeners(this.wrapper);\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"registerChartEvents\",\n    value: function registerChartEvents() {\n      var _this7 = this;\n\n      this.registerChartEvent('ready', function () {\n        return _this7.ready.emit('Chart Ready');\n      });\n      this.registerChartEvent('error', function (error) {\n        return _this7.error.emit(error);\n      });\n      this.registerChartEvent('select', function () {\n        /** @type {?} */\n        var selection = _this7.wrapper.getChart().getSelection();\n\n        _this7.select.emit(selection);\n      });\n      this.registerChartEvent('onmouseover', function (event) {\n        return _this7.mouseenter.emit(event);\n      });\n      this.registerChartEvent('onmouseout', function (event) {\n        return _this7.mouseleave.emit(event);\n      });\n    }\n    /**\r\n     * @private\r\n     * @param {?} eventName\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"registerChartEvent\",\n    value: function registerChartEvent(eventName, callback) {\n      google.visualization.events.addListener(this.wrapper, eventName, callback);\n    }\n  }]);\n\n  return RawChartComponent;\n}();\n\nRawChartComponent.ɵfac = function RawChartComponent_Factory(t) {\n  return new (t || RawChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScriptLoaderService));\n};\n\nRawChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: RawChartComponent,\n  selectors: [[\"raw-chart\"]],\n  inputs: {\n    dynamicResize: \"dynamicResize\",\n    chartData: \"chartData\",\n    formatter: \"formatter\"\n  },\n  outputs: {\n    error: \"error\",\n    ready: \"ready\",\n    select: \"select\",\n    mouseenter: \"mouseenter\",\n    mouseleave: \"mouseleave\"\n  },\n  exportAs: [\"raw-chart\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function RawChartComponent_Template(rf, ctx) {},\n  styles: [_c0],\n  changeDetection: 0\n});\n/** @nocollapse */\n\nRawChartComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ScriptLoaderService\n  }];\n};\n\nRawChartComponent.propDecorators = {\n  chartData: [{\n    type: Input\n  }],\n  formatter: [{\n    type: Input\n  }],\n  dynamicResize: [{\n    type: Input\n  }],\n  error: [{\n    type: Output\n  }],\n  ready: [{\n    type: Output\n  }],\n  select: [{\n    type: Output\n  }],\n  mouseenter: [{\n    type: Output\n  }],\n  mouseleave: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RawChartComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line:component-selector\n      selector: 'raw-chart',\n      template: '',\n      exportAs: 'raw-chart',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [':host { width: fit-content; display: block; }']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ScriptLoaderService\n    }];\n  }, {\n    dynamicResize: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    mouseenter: [{\n      type: Output\n    }],\n    mouseleave: [{\n      type: Output\n    }],\n    chartData: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar GoogleChartComponent = /*#__PURE__*/function (_RawChartComponent) {\n  _inherits(GoogleChartComponent, _RawChartComponent);\n\n  var _super = _createSuper(GoogleChartComponent);\n\n  /**\r\n   * @param {?} element\r\n   * @param {?} loaderService\r\n   */\n  function GoogleChartComponent(element, loaderService) {\n    var _this8;\n\n    _classCallCheck(this, GoogleChartComponent);\n\n    _this8 = _super.call(this, element, loaderService);\n    _this8.roles = new Array();\n    _this8.width = undefined;\n    _this8.height = undefined;\n    _this8.options = {};\n    return _this8;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(GoogleChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this9 = this;\n\n      if (this.type == null) {\n        throw new Error('Can\\'t create a Google Chart without specifying a type!');\n      }\n\n      if (this.data == null) {\n        throw new Error('Can\\'t create a Google Chart without data!');\n      }\n\n      this.chartData = {\n        chartType: this.type\n      };\n      this.loaderService.onReady.subscribe(function () {\n        _this9.createChart();\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      if (this.wrapper) {\n        this.chartData = {\n          chartType: this.type,\n          dataTable: this.getDataTable(),\n          options: this.parseOptions()\n        };\n      }\n\n      _get(_getPrototypeOf(GoogleChartComponent.prototype), \"ngOnChanges\", this).call(this);\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"parseOptions\",\n    value: function parseOptions() {\n      return Object.assign({\n        title: this.title,\n        width: this.width,\n        height: this.height\n      }, this.options);\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createChart\",\n    value: function createChart() {\n      var _this10 = this;\n\n      this.loadNeededPackages().subscribe(function () {\n        _this10.chartData = {\n          chartType: _this10.type,\n          dataTable: _this10.getDataTable(),\n          options: _this10.parseOptions()\n        };\n        _this10.wrapper = new google.visualization.ChartWrapper();\n\n        _this10.updateChart();\n      });\n    }\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getDataTable\",\n    value: function getDataTable() {\n      if (this.columnNames) {\n        /** @type {?} */\n        var columns = this.parseRoles(this.columnNames);\n        return google.visualization.arrayToDataTable([columns].concat(_toConsumableArray(this.data)), false);\n      } else {\n        return google.visualization.arrayToDataTable(this.data, true);\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {?} columnNames\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"parseRoles\",\n    value: function parseRoles(columnNames) {\n      var _this11 = this;\n\n      /** @type {?} */\n      var columnNamesWithRoles = columnNames.slice();\n\n      if (this.roles) {\n        this.roles.forEach(function (role) {\n          /** @type {?} */\n          var roleData = {\n            type: role.type,\n            role: role.role\n          };\n\n          if (role.p) {\n            roleData.p = role.p;\n          }\n\n          if (role.index != null) {\n            columnNamesWithRoles.splice(role.index + 1, 0, roleData);\n\n            var _iterator = _createForOfIteratorHelper(_this11.roles),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var otherRole = _step.value;\n\n                if (otherRole === role) {\n                  continue;\n                }\n\n                if (otherRole.index > role.index) {\n                  otherRole.index++;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            columnNamesWithRoles.push(roleData);\n          }\n        });\n      }\n\n      return columnNamesWithRoles;\n    }\n  }]);\n\n  return GoogleChartComponent;\n}(RawChartComponent);\n\nGoogleChartComponent.ɵfac = function GoogleChartComponent_Factory(t) {\n  return new (t || GoogleChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScriptLoaderService));\n};\n\nGoogleChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GoogleChartComponent,\n  selectors: [[\"google-chart\"]],\n  inputs: {\n    roles: \"roles\",\n    width: \"width\",\n    height: \"height\",\n    options: \"options\",\n    data: \"data\",\n    columnNames: \"columnNames\",\n    title: \"title\",\n    type: \"type\"\n  },\n  exportAs: [\"google-chart\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function GoogleChartComponent_Template(rf, ctx) {},\n  styles: [_c0],\n  changeDetection: 0\n});\n/** @nocollapse */\n\nGoogleChartComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ScriptLoaderService\n  }];\n};\n\nGoogleChartComponent.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  columnNames: [{\n    type: Input\n  }],\n  roles: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GoogleChartComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line:component-selector\n      selector: 'google-chart',\n      template: '',\n      exportAs: 'google-chart',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [':host { width: fit-content; display: block; }']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ScriptLoaderService\n    }];\n  }, {\n    roles: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    columnNames: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\n\nvar GOOGLE_CHARTS_PROVIDERS = [{\n  provide: ScriptLoaderService,\n  useFactory: setupScriptLoaderService,\n  deps: [LOCALE_ID, GOOGLE_API_KEY]\n}];\n\nvar GoogleChartsModule = /*#__PURE__*/function () {\n  function GoogleChartsModule() {\n    _classCallCheck(this, GoogleChartsModule);\n  }\n\n  _createClass(GoogleChartsModule, null, [{\n    key: \"forRoot\",\n\n    /**\r\n     * @param {?=} googleApiKey\r\n     * @return {?}\r\n     */\n    value: function forRoot(googleApiKey) {\n      return {\n        ngModule: GoogleChartsModule,\n        providers: [GOOGLE_CHARTS_PROVIDERS, {\n          provide: GOOGLE_API_KEY,\n          useValue: googleApiKey ? googleApiKey : ''\n        }]\n      };\n    }\n  }]);\n\n  return GoogleChartsModule;\n}();\n\nGoogleChartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: GoogleChartsModule\n});\nGoogleChartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function GoogleChartsModule_Factory(t) {\n    return new (t || GoogleChartsModule)();\n  },\n  providers: [ScriptLoaderService]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GoogleChartsModule, {\n    declarations: [GoogleChartComponent, RawChartComponent],\n    exports: [GoogleChartComponent, RawChartComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GoogleChartsModule, [{\n    type: NgModule,\n    args: [{\n      providers: [ScriptLoaderService],\n      declarations: [GoogleChartComponent, RawChartComponent],\n      exports: [GoogleChartComponent, RawChartComponent]\n    }]\n  }], null, null);\n})();\n/**\r\n * @param {?} localeId\r\n * @param {?} googleApiKey\r\n * @return {?}\r\n */\n\n\nfunction setupScriptLoaderService(localeId, googleApiKey) {\n  return new ScriptLoaderService(localeId, googleApiKey);\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { GoogleChartComponent, RawChartComponent, GoogleChartsModule, ScriptLoaderService, GoogleChartPackagesHelper, GOOGLE_CHARTS_PROVIDERS as ɵa, setupScriptLoaderService as ɵb, GOOGLE_API_KEY as ɵc };","map":{"version":3,"sources":["angular-google-charts/lib/models/injection-tokens.model.ts","angular-google-charts/lib/script-loader/script-loader.service.ts","angular-google-charts/lib/helpers/google-chart-packages.helper.ts","angular-google-charts/lib/raw-chart/raw-chart.component.ts","angular-google-charts/lib/google-chart/google-chart.component.ts","angular-google-charts/lib/google-charts.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const GOOGLE_API_KEY = new InjectionToken<string>('GOOGLE_API_KEY');\r\n","import { Injectable, Inject, LOCALE_ID, Optional } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { GOOGLE_API_KEY } from '../models/injection-tokens.model';\r\n\r\n@Injectable()\r\nexport class ScriptLoaderService {\r\n  private readonly scriptSource = 'https://www.gstatic.com/charts/loader.js';\r\n\r\n  private onLoadSubject = new Subject<boolean>();\r\n\r\n  constructor(\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(GOOGLE_API_KEY) @Optional() private googleApiKey?: string\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  public get onReady(): Observable<boolean> {\r\n    if (this.doneLoading) {\r\n      return Observable.create(observer => {\r\n        observer.next(true);\r\n        observer.complete();\r\n      });\r\n    }\r\n\r\n    return this.onLoadSubject.asObservable();\r\n  }\r\n\r\n  public get doneLoading(): boolean {\r\n    if (typeof(google) === 'undefined' || typeof(google.charts) === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private get isLoading(): boolean {\r\n    if (this.doneLoading) {\r\n      return false;\r\n    }\r\n\r\n    const pageScripts = Array.from(document.getElementsByTagName('script'));\r\n    const googleChartsScript = pageScripts.find(script => script.src === this.scriptSource);\r\n    return googleChartsScript !== undefined;\r\n  }\r\n\r\n  public loadChartPackages(packages: Array<string>): Observable<any> {\r\n    return Observable.create(observer => {\r\n      const config = {\r\n        packages: packages,\r\n        language: this.localeId,\r\n        mapsApiKey: this.googleApiKey\r\n      };\r\n\r\n      google.charts.load('45.2', config);\r\n      google.charts.setOnLoadCallback(() => {\r\n        observer.next();\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private initialize() {\r\n    if (!this.doneLoading && !this.isLoading) {\r\n      const script = this.createScriptElement();\r\n\r\n      script.onload = () => {\r\n        this.onLoadSubject.next(true);\r\n        this.onLoadSubject.complete();\r\n      };\r\n\r\n      script.onerror = () => {\r\n        console.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.complete();\r\n      };\r\n    }\r\n  }\r\n\r\n  private createScriptElement(): HTMLScriptElement {\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = this.scriptSource;\r\n    script.async = true;\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n    return script;\r\n  }\r\n}\r\n","export class GoogleChartPackagesHelper {\r\n    private static ChartTypesToPackages = {\r\n        AnnotationChart: 'annotationchart',\r\n        AreaChart: 'corechart',\r\n        Bar: 'bar',\r\n        BarChart: 'corechart',\r\n        BubbleChart: 'corechart',\r\n        Calendar: 'calendar',\r\n        CandlestickChart: 'corechart',\r\n        ColumnChart: 'corechart',\r\n        ComboChart: 'corechart',\r\n        PieChart: 'corechart',\r\n        Gantt: 'gantt',\r\n        Gauge: 'gauge',\r\n        GeoChart: 'geochart',\r\n        Histogram: 'corechart',\r\n        Line: 'line',\r\n        LineChart: 'corechart',\r\n        Map: 'map',\r\n        OrgChart: 'orgchart',\r\n        Sankey: 'sankey',\r\n        Scatter: 'scatter',\r\n        ScatterChart: 'corechart',\r\n        SteppedAreaChart: 'corechart',\r\n        Table: 'table',\r\n        Timeline: 'timeline',\r\n        TreeMap: 'treemap',\r\n        WordTree: 'wordtree'\r\n    };\r\n\r\n    public static getPackageForChartName(chartName: string): string {\r\n        return GoogleChartPackagesHelper.ChartTypesToPackages[chartName];\r\n    }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport {\r\n  Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges, AfterViewInit\r\n} from '@angular/core';\r\nimport { Observable, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ChartErrorEvent, ChartEvent } from '../models/events.model';\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { GoogleChartPackagesHelper } from '../helpers/google-chart-packages.helper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'raw-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'raw-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RawChartComponent implements OnInit, OnChanges, AfterViewInit {\r\n\r\n  @Input()\r\n  chartData: google.visualization.ChartSpecs;\r\n\r\n  @Input()\r\n  formatter: google.visualization.DefaultFormatter | Array<{ formatter: google.visualization.DefaultFormatter, colIndex: number }>;\r\n\r\n  @Input()\r\n  dynamicResize = false;\r\n\r\n  @Output()\r\n  error = new EventEmitter<ChartErrorEvent>();\r\n\r\n  @Output()\r\n  ready = new EventEmitter();\r\n\r\n  @Output()\r\n  select = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseenter = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseleave = new EventEmitter<ChartEvent>();\r\n\r\n  wrapper: google.visualization.ChartWrapper;\r\n\r\n  constructor(\r\n    protected element: ElementRef,\r\n    protected loaderService: ScriptLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.chartData == null) { throw new Error('Can\\'t create a Google Chart without data!'); }\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.addResizeListener();\r\n  }\r\n\r\n  ngOnChanges() {\r\n\r\n    if (this.wrapper) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  public getChartElement(): HTMLElement {\r\n    return this.element.nativeElement.firstElementChild;\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected loadNeededPackages(): Observable<any> {\r\n    return this.loaderService.loadChartPackages([GoogleChartPackagesHelper.getPackageForChartName(this.chartData.chartType)]);\r\n  }\r\n\r\n  protected updateChart() {\r\n    if (this.chartData.dataTable) {\r\n      this.formatData(<google.visualization.DataTable>this.chartData.dataTable);\r\n    }\r\n\r\n    this.wrapper.setChartType(this.chartData.chartType);\r\n    this.wrapper.setDataTable(<google.visualization.DataTable>this.chartData.dataTable);\r\n    this.wrapper.setOptions(this.chartData.options);\r\n    this.wrapper.setDataSourceUrl(this.chartData.dataSourceUrl);\r\n    this.wrapper.setQuery(this.chartData.query);\r\n    this.wrapper.setRefreshInterval(this.chartData.refreshInterval);\r\n    this.wrapper.setView(this.chartData.view);\r\n\r\n    this.removeChartEvents();\r\n    this.registerChartEvents();\r\n\r\n    this.wrapper.draw(this.element.nativeElement);\r\n  }\r\n\r\n  protected formatData(dataTable: google.visualization.DataTable) {\r\n    if (!this.formatter) {\r\n      return;\r\n    }\r\n\r\n    if (this.formatter instanceof Array) {\r\n      this.formatter.forEach((value) => {\r\n        value.formatter.format(dataTable, value.colIndex);\r\n      });\r\n    } else {\r\n      for (let i = 0; i < dataTable.getNumberOfColumns(); i++) {\r\n        this.formatter.format(dataTable, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addResizeListener() {\r\n    if (this.dynamicResize) {\r\n      fromEvent(window, 'resize')\r\n        .pipe(debounceTime(100))\r\n        .subscribe(() => {\r\n          this.ngOnChanges();\r\n        });\r\n    }\r\n  }\r\n\r\n  private removeChartEvents() {\r\n    google.visualization.events.removeAllListeners(this.wrapper);\r\n  }\r\n\r\n  private registerChartEvents() {\r\n    this.registerChartEvent('ready', () => this.ready.emit('Chart Ready'));\r\n    this.registerChartEvent('error', (error) => this.error.emit(error));\r\n    this.registerChartEvent('select', () => {\r\n      const selection = this.wrapper.getChart().getSelection();\r\n      this.select.emit(selection);\r\n    });\r\n\r\n    this.registerChartEvent('onmouseover', (event) => this.mouseenter.emit(event));\r\n    this.registerChartEvent('onmouseout', (event) => this.mouseleave.emit(event));\r\n  }\r\n\r\n  private registerChartEvent(eventName: string, callback: Function) {\r\n    google.visualization.events.addListener(this.wrapper, eventName, callback);\r\n  }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport {\r\n  Component, OnInit, ElementRef, Input, ChangeDetectionStrategy,\r\n  OnChanges\r\n} from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { RawChartComponent } from '../raw-chart/raw-chart.component';\r\nimport {Role} from '../models/role.model';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'google-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'google-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GoogleChartComponent extends RawChartComponent implements OnInit, OnChanges {\r\n\r\n  @Input()\r\n  data: Array<Array<string | number>>;\r\n\r\n  @Input()\r\n  columnNames: Array<string>;\r\n\r\n  @Input()\r\n  roles: Array<Role> = new Array();\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  width: number = undefined;\r\n\r\n  @Input()\r\n  height: number = undefined;\r\n\r\n  @Input()\r\n  options: any = {};\r\n\r\n  @Input()\r\n  type: string;\r\n\r\n  constructor(\r\n    element: ElementRef,\r\n    loaderService: ScriptLoaderService\r\n  ) {\r\n    super(element, loaderService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.type == null) { throw new Error('Can\\'t create a Google Chart without specifying a type!'); }\r\n    if (this.data == null) { throw new Error('Can\\'t create a Google Chart without data!'); }\r\n\r\n    this.chartData = {\r\n      chartType: this.type\r\n    };\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.wrapper) {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n    }\r\n\r\n    super.ngOnChanges();\r\n  }\r\n\r\n  protected parseOptions(): any {\r\n    return {\r\n      title: this.title,\r\n      width: this.width,\r\n      height: this.height,\r\n      ...this.options\r\n    };\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected getDataTable(): google.visualization.DataTable {\r\n    if (this.columnNames) {\r\n      const columns = this.parseRoles(this.columnNames);\r\n\r\n      return google.visualization.arrayToDataTable([\r\n        columns,\r\n        ...this.data\r\n      ], false);\r\n    } else {\r\n      return google.visualization.arrayToDataTable(this.data, true);\r\n    }\r\n  }\r\n\r\n  private parseRoles(columnNames: any[]): any[] {\r\n    const columnNamesWithRoles = columnNames.slice();\r\n    if (this.roles) {\r\n      this.roles.forEach(role => {\r\n        const roleData: Role = {\r\n          type: role.type,\r\n          role: role.role\r\n        };\r\n        if (role.p) {\r\n          roleData.p = role.p;\r\n        }\r\n        if (role.index != null) {\r\n          columnNamesWithRoles.splice(role.index + 1, 0, roleData);\r\n\r\n          for (const otherRole of this.roles) {\r\n            if (otherRole === role) {\r\n              continue;\r\n            }\r\n\r\n            if (otherRole.index > role.index) {\r\n              otherRole.index++;\r\n            }\r\n          }\r\n        } else {\r\n          columnNamesWithRoles.push(roleData);\r\n        }\r\n      });\r\n    }\r\n\r\n    return columnNamesWithRoles;\r\n  }\r\n}\r\n","import { NgModule, Provider, LOCALE_ID, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from './script-loader/script-loader.service';\r\nimport { RawChartComponent } from './raw-chart/raw-chart.component';\r\nimport { GoogleChartComponent } from './google-chart/google-chart.component';\r\nimport { GOOGLE_API_KEY } from './models/injection-tokens.model';\r\n\r\nexport const GOOGLE_CHARTS_PROVIDERS: Provider[] = [\r\n  {\r\n    provide: ScriptLoaderService,\r\n    useFactory: setupScriptLoaderService,\r\n    deps: [\r\n      LOCALE_ID, GOOGLE_API_KEY\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  providers: [\r\n    ScriptLoaderService\r\n  ],\r\n  declarations: [\r\n    GoogleChartComponent,\r\n    RawChartComponent\r\n  ],\r\n  exports: [\r\n    GoogleChartComponent,\r\n    RawChartComponent\r\n  ]\r\n})\r\nexport class GoogleChartsModule {\r\n  public static forRoot(googleApiKey?: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: GoogleChartsModule,\r\n      providers: [\r\n        GOOGLE_CHARTS_PROVIDERS,\r\n        { provide: GOOGLE_API_KEY, useValue: googleApiKey ? googleApiKey : '' }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport function setupScriptLoaderService(localeId: string, googleApiKey: string): ScriptLoaderService {\r\n  return new ScriptLoaderService(localeId, googleApiKey);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}