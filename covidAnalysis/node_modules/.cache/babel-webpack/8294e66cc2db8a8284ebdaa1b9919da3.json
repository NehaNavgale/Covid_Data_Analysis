{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Line pattern.\n */\n\nvar LinePattern =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LinePattern, _super);\n  /**\n   * Constructor\n   */\n\n\n  function LinePattern() {\n    var _this = _super.call(this) || this;\n\n    _this._line = _this.paper.add(\"line\");\n\n    _this.addElement(_this._line);\n\n    return _this;\n  }\n  /**\n   * Draws the pattern.\n   */\n\n\n  LinePattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    if (this._line) {\n      this._line.attr({\n        \"x2\": this.width * 2\n      }); // to solve rotation\n\n    }\n  };\n\n  return LinePattern;\n}(Pattern);\n\nexport { LinePattern };\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\n\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;","map":{"version":3,"sources":["../../../../../../src/.internal/core/rendering/fills/LinePattern.ts"],"names":[],"mappings":";AAAA;;;;;AAKG;;AACH,SAAS,OAAT,QAAwB,WAAxB;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AAGA;;;;;AAKG;;AAEH;;AAEG;;AACH,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;AAOhC;;AAEG;;;AACH,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,MAAf,CAAb;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,KAAI,CAAC,KAArB;;;AACA;AAED;;AAEG;;;AACO,EAAA,WAAA,CAAA,SAAA,CAAA,IAAA,GAAV,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV;;AACA,QAAI,KAAK,KAAT,EAAgB;AACf,WAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,cAAM,KAAK,KAAL,GAAa;AAArB,OAAhB,EADe,CAC4B;;AAC3C;AACD,GALS;;AAOX,SAAA,WAAA;AAAC,CA1BD,CAAiC,OAAjC,CAAA;;;AA4BA;;;;;AAKG;;AACH,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,WAA5C","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Line pattern.\r\n */\r\nexport class LinePattern extends Pattern {\r\n\r\n\t/**\r\n\t * SVG `<line>` element used for pattern.\r\n\t */\r\n\tprotected _line: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._line = this.paper.add(\"line\");\r\n\t\tthis.addElement(this._line);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the pattern.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this._line) {\r\n\t\t\tthis._line.attr({ \"x2\": this.width * 2 }); // to solve rotation\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}